// .papi/descriptors/src/astar_metadata.ts
var binMeta = "";
var astar_metadata_default = binMeta;
export {
  astar_metadata_default as default
};
