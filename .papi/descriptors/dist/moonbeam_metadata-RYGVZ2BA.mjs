// .papi/descriptors/src/moonbeam_metadata.ts
var binMeta = "";
var moonbeam_metadata_default = binMeta;
export {
  moonbeam_metadata_default as default
};
