/**
 * Auto-generated comprehensive metadata from PAPI descriptors
 * Generated on: 2025-09-16T19:21:23.747Z
 * Categories: Storage, Constants, Events, RuntimeCalls, Transactions, Errors
 */

// Base metadata interfaces
export interface BaseMetadata {
  description?: string;
  returnType?: string;
}

// Storage metadata
export interface StorageMetadata extends BaseMetadata {
  required: string[];
  optional: string[];
  hasDefault?: boolean;
}

// Transaction/Call metadata
export interface CallMetadata extends BaseMetadata {
  parameters: Array<{
    name: string;
    type: string;
    optional?: boolean;
  }>;
}

// Event metadata
export interface EventMetadata extends BaseMetadata {
  fields: Array<{
    name: string;
    type: string;
  }>;
}

// Constant metadata
export interface ConstantMetadata extends BaseMetadata {
  type: string;
  value?: string;
}

// Runtime call metadata
export interface RuntimeCallMetadata extends BaseMetadata {
  parameters: Array<{
    name: string;
    type: string;
  }>;
  returnType: string;
}

// Error metadata
export interface ErrorMetadata extends BaseMetadata {
  type: string;
}

// Category metadata
export interface CategoryMetadata {
  storage: { [pallet: string]: { [item: string]: StorageMetadata } };
  calls: { [pallet: string]: { [item: string]: CallMetadata } };
  events: { [pallet: string]: { [item: string]: EventMetadata } };
  constants: { [pallet: string]: { [item: string]: ConstantMetadata } };
  runtimeCalls: { [api: string]: { [method: string]: RuntimeCallMetadata } };
  errors: { [pallet: string]: { [item: string]: ErrorMetadata } };
}

// Chain metadata
export interface ChainMetadata extends CategoryMetadata {
  chainInfo: {
    name: string;
    hasDescriptor: boolean;
    extractedAt: string;
  };
}

// All chains metadata
export const papiMetadata: { [chainKey: string]: ChainMetadata } = {
  "polkadot": {
    "chainInfo": {
      "name": "polkadot",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:22.484Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicWeightReclaimed": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "GenesisSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Randomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "PendingEpochConfigChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SegmentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "UnderConstruction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Initialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "AuthorVrfRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochStart": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Lateness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextEpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SkippedEpochs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "ValidatorCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinimumValidatorCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Invulnerables": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Bonded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinNominatorBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinValidatorBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinimumActiveStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Ledger": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Payee": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxValidatorsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Nominators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForNominators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "VirtualStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForVirtualStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxNominatorsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ActiveEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStartSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersOverview": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersClipped": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersPaged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ClaimedRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasValidatorPrefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasValidatorReward": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasRewardPoints": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasTotalStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ForceEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxStakedRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SlashRewardFraction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CanceledSlashPayout": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "BondedEras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ValidatorSlashInEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "NominatorSlashInEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SlashingSpans": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SpanSlash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentPlannedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ChillThreshold": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Offences": {
        "Reports": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        },
        "ConcurrentReportsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        }
      },
      "Historical": {
        "HistoricalSessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        },
        "StoredRange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "State": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "PendingChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "NextForced": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Stalled": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "CurrentSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "AuthorityDiscovery": {
        "Keys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "LastSpendPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Claims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Total": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Signing": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Preclaims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Bounties": {
        "BountyCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "Bounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyDescriptions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyApprovals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        }
      },
      "ChildBounties": {
        "ChildBountyCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ParentChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ParentTotalChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBountyDescriptionsV1": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "V0ToV1ChildBountyIds": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildrenCuratorFees": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        }
      },
      "ElectionProviderMultiPhase": {
        "Round": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "CurrentPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "QueuedSolution": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "Snapshot": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "DesiredTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SnapshotMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionNextIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionsMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinimumUntrustedScore": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        }
      },
      "VoterList": {
        "ListNodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "CounterForListNodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "ListBags": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        }
      },
      "NominationPools": {
        "TotalValueLocked": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MinJoinBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MinCreateBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPoolMembersPerPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "GlobalMaxCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "PoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForPoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "BondedPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForBondedPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "RewardPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForRewardPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "SubPoolsStorage": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForSubPoolsStorage": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "LastPoolId": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "ReversePoolIdLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForReversePoolIdLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "ClaimPermissions": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        }
      },
      "FastUnstake": {
        "Head": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "Queue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "CounterForQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "ErasToCheckPerBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        }
      },
      "DelegatedStaking": {
        "Delegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "CounterForDelegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "Agents": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "CounterForAgents": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        }
      },
      "Configuration": {
        "ActiveConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "PendingConfigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "BypassConsistencyCheck": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        }
      },
      "ParasShared": {
        "CurrentSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "AllowedRelayParents": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        }
      },
      "ParaInclusion": {
        "V1": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInclusion pallet",
          "returnType": "unknown"
        }
      },
      "ParaInherent": {
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        },
        "OnChainVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        }
      },
      "ParaScheduler": {
        "ValidatorGroups": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "SessionStartBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "ClaimQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "PvfActiveVoteMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PvfActiveVoteList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Parachains": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ParaLifecycles": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Heads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "MostRecentContext": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CurrentCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeMeta": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodePruning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgradesAt": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAheadSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeCooldowns": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ActionsQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingParasGenesis": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHashRefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        }
      },
      "Initializer": {
        "HasInitialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        },
        "BufferedSessionChanges": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        }
      },
      "Dmp": {
        "DownwardMessageQueues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DownwardMessageQueueHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        }
      },
      "Hrmp": {
        "HrmpOpenChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpAcceptedChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpWatermarks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannels": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpIngressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpEgressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelContents": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelDigests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        }
      },
      "ParaSessionInfo": {
        "AssignmentKeysUnsafe": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "EarliestStoredSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "Sessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "AccountKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "SessionExecutorParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        }
      },
      "ParasDisputes": {
        "LastPrunedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Disputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "BackersOnDisputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Frozen": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        }
      },
      "ParasSlashing": {
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        },
        "ValidatorSetCounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        }
      },
      "OnDemand": {
        "ParaIdAffinity": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemand pallet",
          "returnType": "unknown"
        },
        "QueueStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemand pallet",
          "returnType": "unknown"
        },
        "FreeEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemand pallet",
          "returnType": "unknown"
        },
        "AffinityEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemand pallet",
          "returnType": "unknown"
        },
        "Revenue": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemand pallet",
          "returnType": "unknown"
        },
        "Credits": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemand pallet",
          "returnType": "unknown"
        }
      },
      "CoretimeAssignmentProvider": {
        "CoreSchedules": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "CoreDescriptors": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "PendingSwap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "Paras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "NextFreeParaId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "Leases": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "AuctionCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "AuctionInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "ReservedAmounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "Winning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "Funds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NewRaise": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "EndingsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NextFundIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MigrationProcess": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "AutoLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "SignedMigrationMaxLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AuthorizedAliases": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "AssetRate": {
        "ConversionRateToNative": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRate pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "ValidatorSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "GenesisBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        }
      },
      "Mmr": {
        "RootHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "NumberOfLeaves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "Nodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        }
      },
      "BeefyMmrLeaf": {
        "BeefyAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from BeefyMmrLeaf pallet",
          "returnType": "unknown"
        },
        "BeefyNextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from BeefyMmrLeaf pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "Babe": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "plan_config_change": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "claim": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "free": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "bond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "validate": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "nominate": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_payee": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_controller": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "increase_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "scale_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_no_eras": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_new_era": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_invulnerables": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_unstake": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_new_era_always": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "cancel_deferred_slash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "payout_stakers": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "rebond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "reap_stash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "kick": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_staking_configs": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "chill_other": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_apply_min_commission": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_min_commission": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "payout_stakers_by_page": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "update_payee": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "deprecate_controller_batch": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "restore_ledger": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "migrate_currency": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "manual_slash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "note_stalled": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "mint_claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "claim_attest": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "attest": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "move_claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "vest": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vest_other": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "merge_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_remove_vesting_schedule": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "if_else": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as_fallible": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Bounties": {
        "propose_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "approve_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "propose_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "unassign_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "accept_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "award_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "claim_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "close_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "extend_bounty_expiry": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "approve_bounty_with_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        }
      },
      "ChildBounties": {
        "add_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "propose_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "accept_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "unassign_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "award_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "claim_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "close_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        }
      },
      "ElectionProviderMultiPhase": {
        "submit_unsigned": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "set_minimum_untrusted_score": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "set_emergency_election_result": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "submit": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "governance_fallback": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        }
      },
      "VoterList": {
        "rebag": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        },
        "put_in_front_of": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        },
        "put_in_front_of_other": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        }
      },
      "NominationPools": {
        "join": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_payout": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "pool_withdraw_unbonded": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "create_with_pool_id": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "nominate": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_state": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_configs": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "update_roles": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "bond_extra_other": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_claim_permission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_payout_other": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_max": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_change_rate": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_commission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "adjust_pool_deposit": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_claim_permission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "apply_slash": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "migrate_delegation": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "migrate_pool_to_delegate_stake": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        }
      },
      "FastUnstake": {
        "register_fast_unstake": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        },
        "control": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        }
      },
      "Configuration": {
        "set_validation_upgrade_cooldown": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_code_retention_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_code_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_pov_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_head_data_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_coretime_cores": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_group_rotation_frequency": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_paras_availability_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduling_lookahead": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators_per_core": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_post_conclusion_acceptance_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_no_show_slots": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_n_delay_tranches": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_zeroth_delay_tranche_width": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_needed_approvals": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_relay_vrf_modulo_samples": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_count": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_downward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_open_request_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_sender_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_recipient_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_capacity": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_total_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_inbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_outbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_pvf_voting_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_bypass_consistency_check": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_async_backing_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_executor_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_base_fee": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_fee_variability": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_queue_max_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_target_queue_utilization": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_backing_votes": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_node_feature": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_approval_voting_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduler_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        }
      },
      "ParaInherent": {
        "enter": {
          "parameters": [],
          "description": "Call from ParaInherent pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "force_set_current_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_current_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_note_new_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_queue_action": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "add_trusted_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "poke_unused_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "include_pvf_check_statement": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_most_recent_context": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        }
      },
      "Initializer": {
        "force_approve": {
          "parameters": [],
          "description": "Call from Initializer pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "hrmp_init_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_accept_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_close_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_clean_hrmp": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_open": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_close": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_cancel_open_request": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_open_hrmp_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_system_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "poke_channel_deposits": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_channel_with_system": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "force_unfreeze": {
          "parameters": [],
          "description": "Call from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "ParasSlashing": {
        "report_dispute_lost_unsigned": {
          "parameters": [],
          "description": "Call from ParasSlashing pallet",
          "returnType": "void"
        }
      },
      "OnDemand": {
        "place_order_allow_death": {
          "parameters": [],
          "description": "Call from OnDemand pallet",
          "returnType": "void"
        },
        "place_order_keep_alive": {
          "parameters": [],
          "description": "Call from OnDemand pallet",
          "returnType": "void"
        },
        "place_order_with_credits": {
          "parameters": [],
          "description": "Call from OnDemand pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "force_register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "swap": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "remove_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "reserve": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "add_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "set_current_head": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "force_lease": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "clear_all_leases": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "trigger_onboard": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "new_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "bid": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "cancel_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "create": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "edit": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "add_memo": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "poke": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute_all": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "request_core_count": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "request_revenue_at": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "credit_account": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "assign_core": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "control_auto_migration": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "continue_migrate": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_top": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_child": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "set_signed_max_limits": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "force_set_progress": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "send": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "add_authorized_alias": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "remove_authorized_alias": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "remove_all_authorized_aliases": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "create": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "update": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "remove": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        }
      },
      "Beefy": {
        "report_double_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_double_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "set_new_genesis": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "RejectedInvalidAuthorizedUpgrade": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "AgendaIncomplete": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "IndexAssigned": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFreed": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFrozen": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "EraPaid": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SlashReported": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "OldSlashingReportDiscarded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakersElected": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Bonded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Unbonded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Kicked": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakingElectionFailed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Chilled": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "PayoutStarted": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ValidatorPrefsSet": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SnapshotVotersSizeExceeded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SnapshotTargetsSizeExceeded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ForceEra": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ControllerBatchDeprecated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "CurrencyMigrated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        }
      },
      "Offences": {
        "Offence": {
          "fields": [],
          "description": "Event from Offences pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorDisabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorReenabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "NewAuthorities": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Paused": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Resumed": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteUnlocked": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "Claimed": {
          "fields": [],
          "description": "Event from Claims pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingCompleted": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseMainSuccess": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseFallbackCalled": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Bounties": {
        "BountyProposed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyRejected": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyBecameActive": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyAwarded": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyClaimed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyCanceled": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyExtended": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyApproved": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorProposed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorUnassigned": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorAccepted": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        }
      },
      "ChildBounties": {
        "Added": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Claimed": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        }
      },
      "ElectionProviderMultiPhase": {
        "SolutionStored": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "ElectionFinalized": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "ElectionFailed": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "PhaseTransitioned": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        }
      },
      "VoterList": {
        "Rebagged": {
          "fields": [],
          "description": "Event from VoterList pallet",
          "returnType": "void"
        },
        "ScoreUpdated": {
          "fields": [],
          "description": "Event from VoterList pallet",
          "returnType": "void"
        }
      },
      "NominationPools": {
        "Created": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Bonded": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PaidOut": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Unbonded": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "StateChanged": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "RolesUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolSlashed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "UnbondingPoolSlashed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolMaxCommissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionChangeRateUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionClaimPermissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionClaimed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MinBalanceDeficitAdjusted": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MinBalanceExcessAdjusted": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MemberClaimPermissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MetadataUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolNominationMade": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolNominatorChilled": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "GlobalParamsUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        }
      },
      "FastUnstake": {
        "Unstaked": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "BatchChecked": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "BatchFinished": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "InternalError": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        }
      },
      "DelegatedStaking": {
        "Delegated": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "Released": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "MigratedDelegation": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        }
      },
      "ParaInclusion": {
        "CandidateBacked": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateIncluded": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateTimedOut": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "UpwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "CurrentCodeUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CurrentHeadUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CodeUpgradeScheduled": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "NewHeadNoted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "ActionQueued": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckStarted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckAccepted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckRejected": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "OpenChannelRequested": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelCanceled": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelAccepted": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "ChannelClosed": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpChannelForceOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpSystemChannelOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelDepositsUpdated": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "DisputeInitiated": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "DisputeConcluded": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "Revert": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "OnDemand": {
        "OnDemandOrderPlaced": {
          "fields": [],
          "description": "Event from OnDemand pallet",
          "returnType": "void"
        },
        "SpotPriceSet": {
          "fields": [],
          "description": "Event from OnDemand pallet",
          "returnType": "void"
        },
        "AccountCredited": {
          "fields": [],
          "description": "Event from OnDemand pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "Registered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Deregistered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Swapped": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "NewLeasePeriod": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        },
        "Leased": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "AuctionStarted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "AuctionClosed": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "ReserveConfiscated": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "BidAccepted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "WinningOffset": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "Created": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Contributed": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Withdrew": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "PartiallyRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AllRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Dissolved": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "HandleBidResult": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Edited": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "MemoUpdated": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AddedToNewRaise": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "RevenueInfoRequested": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        },
        "CoreAssigned": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "Migrated": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "AutoMigrationFinished": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Halted": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "Attempted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SendFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ProcessXcmError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasAuthorized": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasAuthorizationRemoved": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasesAuthorizationsRemoved": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "AssetRateCreated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateRemoved": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateUpdated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochDuration": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "ExpectedBlockTime": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "HistoryDepth": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "SessionsPerEra": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "BondingDuration": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "SlashDeferDuration": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxExposurePageSize": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxUnlockingChunks": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "pot_account": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Prefix": {
          "type": "unknown",
          "description": "Constant from Claims pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        },
        "MaxVestingSchedules": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Bounties": {
        "BountyDepositBase": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyDepositPayoutDelay": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyUpdatePeriod": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMultiplier": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMax": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMin": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyValueMinimum": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "MaximumReasonLength": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        }
      },
      "ChildBounties": {
        "MaxActiveChildBountyCount": {
          "type": "unknown",
          "description": "Constant from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBountyValueMinimum": {
          "type": "unknown",
          "description": "Constant from ChildBounties pallet",
          "returnType": "unknown"
        }
      },
      "ElectionProviderMultiPhase": {
        "BetterSignedThreshold": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "OffchainRepeat": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerTxPriority": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxSubmissions": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxRefunds": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedRewardBase": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedDepositByte": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedDepositWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MaxWinners": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxLength": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxVotesPerVoter": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxWinners": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        }
      },
      "VoterList": {
        "BagThresholds": {
          "type": "unknown",
          "description": "Constant from VoterList pallet",
          "returnType": "unknown"
        }
      },
      "NominationPools": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPointsToBalance": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxUnbonding": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        }
      },
      "FastUnstake": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from FastUnstake pallet",
          "returnType": "unknown"
        }
      },
      "DelegatedStaking": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "SlashRewardFraction": {
          "type": "unknown",
          "description": "Constant from DelegatedStaking pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "UnsignedPriority": {
          "type": "unknown",
          "description": "Constant from Paras pallet",
          "returnType": "unknown"
        }
      },
      "OnDemand": {
        "TrafficDefaultValue": {
          "type": "unknown",
          "description": "Constant from OnDemand pallet",
          "returnType": "unknown"
        },
        "MaxHistoricalRevenue": {
          "type": "unknown",
          "description": "Constant from OnDemand pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from OnDemand pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "ParaDeposit": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "LeasePeriod": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        },
        "LeaseOffset": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "EndingPeriod": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SampleLength": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SlotRangeCount": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "LeasePeriodsPerSlot": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "MinContribution": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "RemoveKeysLimit": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "Coretime": {
        "BrokerId": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        },
        "BrokerPotLocation": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MaxKeyLen": {
          "type": "unknown",
          "description": "Constant from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "AdvertisedXcmVersion": {
          "type": "unknown",
          "description": "Constant from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "Inflation": {
        "experimental_inflation_prediction_info": {
          "parameters": [],
          "returnType": "{ inflation: bigint; next_mint: FixedSizeArray<2, bigint>; }",
          "description": "Runtime call from Inflation API"
        }
      },
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: { value: undefined; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 57 more ...; BeefyMmrLeaf: undefined; }>; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "NominationPoolsApi": {
        "pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "points_to_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "balance_to_points": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_pending_slash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_pending_slash": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_needs_delegate_migration": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_needs_delegate_migration": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_total_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_accounts": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "FixedSizeArray<2, SS58String>",
          "description": "Runtime call from NominationPoolsApi API"
        }
      },
      "StakingApi": {
        "nominations_quota": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from StakingApi API"
        },
        "eras_stakers_page_count": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from StakingApi API"
        },
        "pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from StakingApi API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "ParachainHost": {
        "validators": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validator_groups": {
          "parameters": [],
          "returnType": "[number[][], { session_start_block: number; group_rotation_frequency: number; now: number; }]",
          "description": "Runtime call from ParachainHost API"
        },
        "availability_cores": {
          "parameters": [],
          "returnType": "Enum<{ Occupied: { next_up_on_available?: { para_id: number; collator: FixedSizeBinary<32> | undefined; } | undefined; occupied_since: number; time_out_at: number; next_up_on_time_out?: { ...; } | undefined; availability: { ...; }; group_responsible: number; candidate_hash: FixedSizeBinary<...>; candidate_descriptor...",
          "description": "Runtime call from ParachainHost API"
        },
        "persisted_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "assumed_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "[{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; }, FixedSizeBinary<32>] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "check_validation_outputs": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "session_index_for_child": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<32>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_events": {
          "parameters": [],
          "returnType": "Enum<{ CandidateBacked: [{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<...>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, Binary, number, number]; ...",
          "description": "Runtime call from ParachainHost API"
        },
        "dmq_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ sent_at: number; msg: Binary; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "inbound_hrmp_channels_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "[number, { data: Binary; sent_at: number; }[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_by_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "on_chain_votes": {
          "parameters": [],
          "returnType": "{ session: number; backing_validators_per_candidate: [{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; ... 7 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, [...][]][]; disputes: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "session_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ dispute_period: number; no_show_slots: number; n_delay_tranches: number; zeroth_delay_tranche_width: number; needed_approvals: number; relay_vrf_modulo_samples: number; active_validator_indices: number[]; ... 5 more ...; n_cores: number; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_pvf_check_statement": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ session_index: number; accept: boolean; subject: FixedSizeBinary<32>; validator_index: number; }"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<64>"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "pvfs_require_precheck": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "FixedSizeBinary<32> | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "disputes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { start: number; validators_for: { bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }; validators_against: { ...; }; concluded_at: number | undefined; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "session_executor_params": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "PolkadotPrimitivesV6ExecutorParamsExecutorParam[] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "unapplied_slashes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { keys: [number, FixedSizeBinary<32>][]; kind: SlashingOffenceKind; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_report_dispute_lost": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ kind: SlashingOffenceKind; validator_index: number; time_slot: { session_index: number; candidate_hash: FixedSizeBinary<32>; }; validator_id: FixedSizeBinary<...>; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "minimum_backing_votes": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "para_backing_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ constraints: { max_code_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ump_remaining_bytes: number; ... 7 more ...; future_validation_code: [...] | undefined; }; pending_availability: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "async_backing_params": {
          "parameters": [],
          "returnType": "{ max_candidate_depth: number; allowed_ancestry_len: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "disabled_validators": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from ParachainHost API"
        },
        "node_features": {
          "parameters": [],
          "returnType": "{ bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "approval_voting_params": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "claim_queue": {
          "parameters": [],
          "returnType": "[number, number[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "candidates_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<32>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_bomb_limit": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "backing_constraints": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ max_code_size: number; max_head_data_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ... 8 more ...; future_validation_code: [...] | undefined; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "scheduling_lookahead": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        }
      },
      "BeefyApi": {
        "beefy_genesis": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "validator_set": {
          "parameters": [],
          "returnType": "{ id: bigint; validators: FixedSizeBinary<33>[]; } | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_double_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ first: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; second: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_fork_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ vote: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; header: { ...; }; ancestry_proof: Binary; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_future_block_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<33>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_ancestry_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        }
      },
      "MmrApi": {
        "mmr_root": {
          "parameters": [],
          "returnType": "{ value: FixedSizeBinary<32>; success: true; } | { value: MmrPrimitivesError; success: false; }",
          "description": "Runtime call from MmrApi API"
        },
        "mmr_leaf_count": {
          "parameters": [],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: bigint; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "generate_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number[]"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: [Binary[], { items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }]; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof_stateless": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "Binary[]"
            },
            {
              "name": "param2",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        }
      },
      "BeefyMmrApi": {
        "authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        },
        "next_authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        }
      },
      "GrandpaApi": {
        "grandpa_authorities": {
          "parameters": [],
          "returnType": "[FixedSizeBinary<32>, bigint][]",
          "description": "Runtime call from GrandpaApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ set_id: bigint; equivocation: GrandpaEquivocation; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from GrandpaApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GrandpaApi API"
        },
        "current_set_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from GrandpaApi API"
        }
      },
      "BabeApi": {
        "configuration": {
          "parameters": [],
          "returnType": "{ c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; slot_duration: bigint; epoch_length: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; }",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch_start": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "next_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BabeApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ offender: FixedSizeBinary<32>; slot: bigint; first_header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<...>; digest: DigestItem[]; }; second_header: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BabeApi API"
        }
      },
      "AuthorityDiscoveryApi": {
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuthorityDiscoveryApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "TransactionPaymentCallApi": {
        "query_call_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 43 more ...; Beefy: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_call_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 43 more ...; Beefy: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: bigint; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: DispatchRawOrigin; Origins: GovernanceOrigin; ParachainsOrigin: { type: \"Parachain\"; value: number; }; XcmPallet: Enum<{ Xcm: { parents: number; interior: XcmV5Junctions; }; Response: { ...; }; }>; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 43 more ...; Beefy: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<{ Yes: undefined; No: undefined; }>; }; success: true; } | { value: { ...; }; success: false; }; emitted_events: Enum<...>[]; local_xcm?: XcmVersionedXcm | undefined; forwarded_xcms: [...][]; ...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Babe": {
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Indices": {
        "NotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Permanent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Staking": {
        "NotController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPaired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyTargets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSlashIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMoreChunks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUnlockChunk": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundedTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEraToReward": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNumberOfNominations": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSortedAndUnique": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectHistoryDepth": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectSlashingSpans": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyTargets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotChillOther": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyNominators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyValidators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ControllerDeprecated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotRestoreLedger": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardDestinationRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VirtualStakerNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReapStash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Restricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Grandpa": {
        "PauseFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ResumeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChangePending": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooSoon": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Claims": {
        "InvalidEthereumSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignerHasNoClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderHasNoClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PotUnderflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VestedBalanceExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "NotVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AtMaxVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ScheduleIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidScheduleParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Bounties": {
        "InsufficientProposersBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReasonTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequireCurator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Premature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasActiveChildBounty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ChildBounties": {
        "ParentBountyNotActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBountyBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyChildBounties": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ElectionProviderMultiPhase": {
        "PreDispatchEarlySubmission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchWrongWinnerCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchWeakSubmission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedQueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedCannotPayDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedInvalidWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedTooMuchWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OcwCallWrongEra": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingSnapshotMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSubmissionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyWinners": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchDifferentRound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "VoterList": {
        "List": {
          "type": "PlainDescriptor<BagsListListListError>",
          "description": "Error from VoterList pallet",
          "returnType": "PlainDescriptor<BagsListListListError>"
        }
      },
      "NominationPools": {
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolMemberNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardPoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SubPoolsNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountBelongsToOtherPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FullyUnbonding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxUnbondingLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotWithdrawAny": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinimumBondNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OverflowRisk": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDestroying": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNominator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotKickerOrDestroying": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOpen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPools": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPoolMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CanNotChangeState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoesNotHavePermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MetadataExceedsMaxLen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Defensive": {
          "type": "PlainDescriptor<Enum<{ NotEnoughSpaceInUnbondPool: undefined; PoolNotFound: undefined; RewardPoolNotFound: undefined; SubPoolsNotFound: undefined; BondedStashKilledPrematurely: undefined; DelegationUnsupported: undefined; SlashNotApplied: undefined; }>>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<Enum<{ NotEnoughSpaceInUnbondPool: undefined; PoolNotFound: undefined; RewardPoolNotFound: undefined; SubPoolsNotFound: undefined; BondedStashKilledPrematurely: undefined; DelegationUnsupported: undefined; SlashNotApplied: undefined; }>>"
        },
        "PartialUnbondNotAllowedPermissionlessly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxCommissionRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionExceedsMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionExceedsGlobalMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionChangeThrottled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionChangeRateNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPendingCommission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoCommissionCurrentSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolIdInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BondExtraRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToAdjust": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlashTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Restricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FastUnstake": {
        "NotController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFullyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyHead": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "DelegatedStaking": {
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStaking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRewardDestination": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDelegation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAgent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnappliedSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Configuration": {
        "InvalidNewValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Configuration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInclusion": {
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrematureCodeUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NewCodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedRelayParent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssignment": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidGroupIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataHashMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectDownwardMessageHandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUpwardMessages": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HrmpWatermarkMishandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOutboundHrmp": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidationCodeHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaHeadMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInherent": {
        "TooManyInclusionInherents": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParentHeader": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InherentDataFilteredDuringExecution": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Paras": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOnboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOffboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementStale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckInvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckDoubleVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckSubjectInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgradeCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Hrmp": {
        "OpenHrmpChannelToSelf": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelInvalidRecipient": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroCapacity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelCapacityExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroMessageSize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelMessageSizeExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelAlreadyUnderway": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CancelHrmpOpenChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChannelCreationNotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasDisputes": {
        "DuplicateDisputeStatementSets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AncientDisputeStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SingleSidedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaliciousBacker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingBackingVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnconfirmedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasSlashing": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSessionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCandidateHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidatorIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexIdMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateSlashingReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OnDemand": {
        "QueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemand pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpotPriceHigherThanMaxAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemand pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientCredits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemand pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CoretimeAssignmentProvider": {
        "AssignmentsEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedInsert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Registrar": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDeregister": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReserved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Slots": {
        "ParaNotOnboarding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Auctions": {
        "AuctionInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeasePeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCurrentAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AuctionEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyLeasedOut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Crowdloan": {
        "FirstPeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FirstPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodBeforeFirstPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotEndInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EndTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParaId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CapExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionPeriodOver": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidOrLeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundNotEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoContributions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReadyToDissolve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MemoTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInNewRaise": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VrfDelayInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoLeasePeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Coretime": {
        "NotBroker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestedFutureRevenue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTransferFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StateTrieMigration": {
        "MaxSignedLimits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "KeyTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedMigrationNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadChildRoot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmPallet": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAuthorizedAliases": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiresInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AliasNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRate": {
        "UnknownAssetKind": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Beefy": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDoubleVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidForkVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFutureBlockVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProofSession": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "kusama": {
    "chainInfo": {
      "name": "kusama",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:22.804Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicWeightReclaimed": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "GenesisSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Randomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "PendingEpochConfigChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SegmentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "UnderConstruction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Initialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "AuthorVrfRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochStart": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Lateness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextEpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SkippedEpochs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "ValidatorCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinimumValidatorCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Invulnerables": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Bonded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinNominatorBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinValidatorBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinimumActiveStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Ledger": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Payee": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxValidatorsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Nominators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForNominators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "VirtualStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForVirtualStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxNominatorsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ActiveEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStartSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersOverview": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersClipped": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersPaged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ClaimedRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasValidatorPrefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasValidatorReward": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasRewardPoints": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasTotalStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ForceEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxStakedRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SlashRewardFraction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CanceledSlashPayout": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "BondedEras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ValidatorSlashInEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "NominatorSlashInEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SlashingSpans": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SpanSlash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentPlannedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ChillThreshold": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Offences": {
        "Reports": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        },
        "ConcurrentReportsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        }
      },
      "Historical": {
        "HistoricalSessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        },
        "StoredRange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "State": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "PendingChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "NextForced": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Stalled": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "CurrentSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "AuthorityDiscovery": {
        "Keys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "LastSpendPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipCollective": {
        "MemberCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "IdToIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "IndexToId": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "VotingCleanup": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipReferenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "Parameters": {
        "Parameters": {
          "required": [],
          "optional": [],
          "description": "Storage item from Parameters pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Claims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Total": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Signing": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Preclaims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        }
      },
      "Society": {
        "Parameters": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Pot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Founder": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Head": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Rules": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Payouts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "MemberCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "MemberByIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "SuspendedMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "RoundCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Bids": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Candidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Skeptic": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Votes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "VoteClearCursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "NextHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "ChallengeRoundCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Defending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "DefenderVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        }
      },
      "Recovery": {
        "Recoverable": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        },
        "ActiveRecoveries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        },
        "Proxy": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "Bounties": {
        "BountyCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "Bounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyDescriptions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyApprovals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        }
      },
      "ChildBounties": {
        "ChildBountyCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ParentChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ParentTotalChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBountyDescriptionsV1": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "V0ToV1ChildBountyIds": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildrenCuratorFees": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        }
      },
      "ElectionProviderMultiPhase": {
        "Round": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "CurrentPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "QueuedSolution": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "Snapshot": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "DesiredTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SnapshotMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionNextIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionsMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinimumUntrustedScore": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        }
      },
      "Nis": {
        "QueueTotals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        },
        "Queues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        },
        "Summary": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        },
        "Receipts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        }
      },
      "NisCounterpartBalances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        }
      },
      "VoterList": {
        "ListNodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "CounterForListNodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "ListBags": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        }
      },
      "NominationPools": {
        "TotalValueLocked": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MinJoinBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MinCreateBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPoolMembersPerPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "GlobalMaxCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "PoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForPoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "BondedPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForBondedPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "RewardPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForRewardPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "SubPoolsStorage": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForSubPoolsStorage": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "LastPoolId": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "ReversePoolIdLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForReversePoolIdLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "ClaimPermissions": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        }
      },
      "FastUnstake": {
        "Head": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "Queue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "CounterForQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "ErasToCheckPerBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        }
      },
      "DelegatedStaking": {
        "Delegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "CounterForDelegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "Agents": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "CounterForAgents": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        }
      },
      "Configuration": {
        "ActiveConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "PendingConfigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "BypassConsistencyCheck": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        }
      },
      "ParasShared": {
        "CurrentSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "AllowedRelayParents": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        }
      },
      "ParaInclusion": {
        "V1": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInclusion pallet",
          "returnType": "unknown"
        }
      },
      "ParaInherent": {
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        },
        "OnChainVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        }
      },
      "ParaScheduler": {
        "ValidatorGroups": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "SessionStartBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "ClaimQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "PvfActiveVoteMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PvfActiveVoteList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Parachains": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ParaLifecycles": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Heads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "MostRecentContext": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CurrentCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeMeta": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodePruning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgradesAt": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAheadSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeCooldowns": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ActionsQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingParasGenesis": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHashRefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        }
      },
      "Initializer": {
        "HasInitialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        },
        "BufferedSessionChanges": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        }
      },
      "Dmp": {
        "DownwardMessageQueues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DownwardMessageQueueHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        }
      },
      "Hrmp": {
        "HrmpOpenChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpAcceptedChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpWatermarks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannels": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpIngressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpEgressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelContents": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelDigests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        }
      },
      "ParaSessionInfo": {
        "AssignmentKeysUnsafe": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "EarliestStoredSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "Sessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "AccountKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "SessionExecutorParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        }
      },
      "ParasDisputes": {
        "LastPrunedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Disputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "BackersOnDisputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Frozen": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        }
      },
      "ParasSlashing": {
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        },
        "ValidatorSetCounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        }
      },
      "OnDemandAssignmentProvider": {
        "ParaIdAffinity": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "QueueStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "FreeEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "AffinityEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "Revenue": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "Credits": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "CoretimeAssignmentProvider": {
        "CoreSchedules": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "CoreDescriptors": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "PendingSwap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "Paras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "NextFreeParaId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "Leases": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "AuctionCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "AuctionInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "ReservedAmounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "Winning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "Funds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NewRaise": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "EndingsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NextFundIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AuthorizedAliases": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "AssetRate": {
        "ConversionRateToNative": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRate pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "ValidatorSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "GenesisBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        }
      },
      "Mmr": {
        "RootHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "NumberOfLeaves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "Nodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        }
      },
      "BeefyMmrLeaf": {
        "BeefyAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from BeefyMmrLeaf pallet",
          "returnType": "unknown"
        },
        "BeefyNextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from BeefyMmrLeaf pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Babe": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "plan_config_change": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "claim": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "free": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "bond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "validate": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "nominate": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_payee": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_controller": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "increase_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "scale_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_no_eras": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_new_era": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_invulnerables": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_unstake": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_new_era_always": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "cancel_deferred_slash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "payout_stakers": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "rebond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "reap_stash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "kick": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_staking_configs": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "chill_other": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_apply_min_commission": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_min_commission": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "payout_stakers_by_page": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "update_payee": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "deprecate_controller_batch": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "restore_ledger": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "migrate_currency": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "manual_slash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "note_stalled": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "FellowshipCollective": {
        "add_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "promote_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "demote_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "cleanup_poll": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "exchange_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        }
      },
      "FellowshipReferenda": {
        "submit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "set_parameter": {
          "parameters": [],
          "description": "Call from Parameters pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "mint_claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "claim_attest": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "attest": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "move_claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "if_else": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as_fallible": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Society": {
        "bid": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "unbid": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "vouch": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "unvouch": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "defender_vote": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "waive_repay": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "found_society": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "judge_suspended_member": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "set_parameters": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "punish_skeptic": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "claim_membership": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "bestow_membership": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "kick_candidate": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "resign_candidacy": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "drop_candidate": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "cleanup_candidacy": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "cleanup_challenge": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        }
      },
      "Recovery": {
        "as_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "set_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "create_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "initiate_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "vouch_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "claim_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "close_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "remove_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "cancel_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "vest": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vest_other": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "merge_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_remove_vesting_schedule": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "Bounties": {
        "propose_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "approve_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "propose_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "unassign_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "accept_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "award_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "claim_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "close_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "extend_bounty_expiry": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "approve_bounty_with_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        }
      },
      "ChildBounties": {
        "add_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "propose_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "accept_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "unassign_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "award_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "claim_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "close_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        }
      },
      "ElectionProviderMultiPhase": {
        "submit_unsigned": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "set_minimum_untrusted_score": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "set_emergency_election_result": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "submit": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "governance_fallback": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        }
      },
      "Nis": {
        "place_bid": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "retract_bid": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "fund_deficit": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "thaw_private": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "thaw_communal": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "communify": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "privatize": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        }
      },
      "NisCounterpartBalances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        }
      },
      "VoterList": {
        "rebag": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        },
        "put_in_front_of": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        },
        "put_in_front_of_other": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        }
      },
      "NominationPools": {
        "join": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_payout": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "pool_withdraw_unbonded": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "create_with_pool_id": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "nominate": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_state": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_configs": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "update_roles": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "bond_extra_other": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_claim_permission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_payout_other": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_max": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_change_rate": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_commission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "adjust_pool_deposit": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_claim_permission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "apply_slash": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "migrate_delegation": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "migrate_pool_to_delegate_stake": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        }
      },
      "FastUnstake": {
        "register_fast_unstake": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        },
        "control": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        }
      },
      "Configuration": {
        "set_validation_upgrade_cooldown": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_code_retention_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_code_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_pov_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_head_data_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_coretime_cores": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_group_rotation_frequency": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_paras_availability_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduling_lookahead": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators_per_core": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_post_conclusion_acceptance_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_no_show_slots": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_n_delay_tranches": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_zeroth_delay_tranche_width": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_needed_approvals": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_relay_vrf_modulo_samples": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_count": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_downward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_open_request_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_sender_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_recipient_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_capacity": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_total_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_inbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_outbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_pvf_voting_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_bypass_consistency_check": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_async_backing_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_executor_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_base_fee": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_fee_variability": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_queue_max_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_target_queue_utilization": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_backing_votes": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_node_feature": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_approval_voting_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduler_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        }
      },
      "ParaInherent": {
        "enter": {
          "parameters": [],
          "description": "Call from ParaInherent pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "force_set_current_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_current_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_note_new_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_queue_action": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "add_trusted_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "poke_unused_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "include_pvf_check_statement": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_most_recent_context": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        }
      },
      "Initializer": {
        "force_approve": {
          "parameters": [],
          "description": "Call from Initializer pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "hrmp_init_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_accept_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_close_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_clean_hrmp": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_open": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_close": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_cancel_open_request": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_open_hrmp_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_system_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "poke_channel_deposits": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_channel_with_system": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "force_unfreeze": {
          "parameters": [],
          "description": "Call from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "ParasSlashing": {
        "report_dispute_lost_unsigned": {
          "parameters": [],
          "description": "Call from ParasSlashing pallet",
          "returnType": "void"
        }
      },
      "OnDemandAssignmentProvider": {
        "place_order_allow_death": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "place_order_keep_alive": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "place_order_with_credits": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "force_register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "swap": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "remove_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "reserve": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "add_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "set_current_head": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "force_lease": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "clear_all_leases": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "trigger_onboard": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "new_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "bid": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "cancel_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "create": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "edit": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "add_memo": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "poke": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute_all": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "request_core_count": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "request_revenue_at": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "credit_account": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "assign_core": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "send": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "add_authorized_alias": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "remove_authorized_alias": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "remove_all_authorized_aliases": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "create": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "update": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "remove": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        }
      },
      "Beefy": {
        "report_double_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_double_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "set_new_genesis": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "RejectedInvalidAuthorizedUpgrade": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "IndexAssigned": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFreed": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFrozen": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "EraPaid": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SlashReported": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "OldSlashingReportDiscarded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakersElected": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Bonded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Unbonded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Kicked": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakingElectionFailed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Chilled": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "PayoutStarted": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ValidatorPrefsSet": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SnapshotVotersSizeExceeded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SnapshotTargetsSizeExceeded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ForceEra": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ControllerBatchDeprecated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "CurrencyMigrated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        }
      },
      "Offences": {
        "Offence": {
          "fields": [],
          "description": "Event from Offences pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorDisabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorReenabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "NewAuthorities": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Paused": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Resumed": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteUnlocked": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "FellowshipCollective": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "RankChanged": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "MemberExchanged": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        }
      },
      "FellowshipReferenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "Updated": {
          "fields": [],
          "description": "Event from Parameters pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "Claimed": {
          "fields": [],
          "description": "Event from Claims pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseMainSuccess": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseFallbackCalled": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Society": {
        "Founded": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Bid": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Vouch": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "AutoUnbid": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Unbid": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Unvouch": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Inducted": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "SuspendedMemberJudgement": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "CandidateSuspended": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "MemberSuspended": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Challenged": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Vote": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "DefenderVote": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "NewParams": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Unfounded": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Elevated": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        }
      },
      "Recovery": {
        "RecoveryCreated": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryInitiated": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryVouched": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryClosed": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "AccountRecovered": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryRemoved": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingCompleted": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "AgendaIncomplete": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "Bounties": {
        "BountyProposed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyRejected": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyBecameActive": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyAwarded": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyClaimed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyCanceled": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyExtended": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyApproved": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorProposed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorUnassigned": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorAccepted": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        }
      },
      "ChildBounties": {
        "Added": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Claimed": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        }
      },
      "ElectionProviderMultiPhase": {
        "SolutionStored": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "ElectionFinalized": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "ElectionFailed": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "PhaseTransitioned": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        }
      },
      "Nis": {
        "BidPlaced": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "BidRetracted": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "BidDropped": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Funded": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        }
      },
      "NisCounterpartBalances": {
        "Endowed": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        }
      },
      "VoterList": {
        "Rebagged": {
          "fields": [],
          "description": "Event from VoterList pallet",
          "returnType": "void"
        },
        "ScoreUpdated": {
          "fields": [],
          "description": "Event from VoterList pallet",
          "returnType": "void"
        }
      },
      "NominationPools": {
        "Created": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Bonded": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PaidOut": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Unbonded": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "StateChanged": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "RolesUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolSlashed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "UnbondingPoolSlashed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolMaxCommissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionChangeRateUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionClaimPermissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionClaimed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MinBalanceDeficitAdjusted": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MinBalanceExcessAdjusted": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MemberClaimPermissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MetadataUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolNominationMade": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolNominatorChilled": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "GlobalParamsUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        }
      },
      "FastUnstake": {
        "Unstaked": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "BatchChecked": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "BatchFinished": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "InternalError": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        }
      },
      "DelegatedStaking": {
        "Delegated": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "Released": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "MigratedDelegation": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        }
      },
      "ParaInclusion": {
        "CandidateBacked": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateIncluded": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateTimedOut": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "UpwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "CurrentCodeUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CurrentHeadUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CodeUpgradeScheduled": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "NewHeadNoted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "ActionQueued": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckStarted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckAccepted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckRejected": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "OpenChannelRequested": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelCanceled": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelAccepted": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "ChannelClosed": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpChannelForceOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpSystemChannelOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelDepositsUpdated": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "DisputeInitiated": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "DisputeConcluded": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "Revert": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "OnDemandAssignmentProvider": {
        "OnDemandOrderPlaced": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "SpotPriceSet": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "AccountCredited": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "Registered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Deregistered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Swapped": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "NewLeasePeriod": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        },
        "Leased": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "AuctionStarted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "AuctionClosed": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "ReserveConfiscated": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "BidAccepted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "WinningOffset": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "Created": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Contributed": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Withdrew": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "PartiallyRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AllRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Dissolved": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "HandleBidResult": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Edited": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "MemoUpdated": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AddedToNewRaise": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "RevenueInfoRequested": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        },
        "CoreAssigned": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "Attempted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SendFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ProcessXcmError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasAuthorized": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasAuthorizationRemoved": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasesAuthorizationsRemoved": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "AssetRateCreated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateRemoved": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateUpdated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochDuration": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "ExpectedBlockTime": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "HistoryDepth": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "SessionsPerEra": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "BondingDuration": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "SlashDeferDuration": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxExposurePageSize": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxUnlockingChunks": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "pot_account": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipReferenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Prefix": {
          "type": "unknown",
          "description": "Constant from Claims pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Society": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "GraceStrikes": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "PeriodSpend": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "VotingPeriod": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "ClaimPeriod": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "MaxLockDuration": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "ChallengePeriod": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "MaxPayouts": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "MaxBids": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        }
      },
      "Recovery": {
        "ConfigDepositBase": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "FriendDepositFactor": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "MaxFriends": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "RecoveryDeposit": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        },
        "MaxVestingSchedules": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Bounties": {
        "BountyDepositBase": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyDepositPayoutDelay": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyUpdatePeriod": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMultiplier": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMax": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMin": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyValueMinimum": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "MaximumReasonLength": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        }
      },
      "ChildBounties": {
        "MaxActiveChildBountyCount": {
          "type": "unknown",
          "description": "Constant from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBountyValueMinimum": {
          "type": "unknown",
          "description": "Constant from ChildBounties pallet",
          "returnType": "unknown"
        }
      },
      "ElectionProviderMultiPhase": {
        "BetterSignedThreshold": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "OffchainRepeat": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerTxPriority": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxSubmissions": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxRefunds": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedRewardBase": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedDepositByte": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedDepositWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MaxWinners": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxLength": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxVotesPerVoter": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxWinners": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        }
      },
      "Nis": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "QueueCount": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MaxQueueLen": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "FifoQueueLen": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "BasePeriod": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MinBid": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MinReceipt": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "IntakePeriod": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MaxIntakeWeight": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "ThawThrottle": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        }
      },
      "NisCounterpartBalances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        }
      },
      "VoterList": {
        "BagThresholds": {
          "type": "unknown",
          "description": "Constant from VoterList pallet",
          "returnType": "unknown"
        }
      },
      "NominationPools": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPointsToBalance": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxUnbonding": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        }
      },
      "FastUnstake": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from FastUnstake pallet",
          "returnType": "unknown"
        }
      },
      "DelegatedStaking": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "SlashRewardFraction": {
          "type": "unknown",
          "description": "Constant from DelegatedStaking pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "UnsignedPriority": {
          "type": "unknown",
          "description": "Constant from Paras pallet",
          "returnType": "unknown"
        }
      },
      "OnDemandAssignmentProvider": {
        "TrafficDefaultValue": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "MaxHistoricalRevenue": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "ParaDeposit": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "LeasePeriod": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        },
        "LeaseOffset": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "EndingPeriod": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SampleLength": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SlotRangeCount": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "LeasePeriodsPerSlot": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "MinContribution": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "RemoveKeysLimit": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "Coretime": {
        "BrokerId": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        },
        "BrokerPotLocation": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "AdvertisedXcmVersion": {
          "type": "unknown",
          "description": "Constant from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "Inflation": {
        "experimental_inflation_prediction_info": {
          "parameters": [],
          "returnType": "{ inflation: bigint; next_mint: FixedSizeArray<2, bigint>; }",
          "description": "Runtime call from Inflation API"
        }
      },
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "ParachainHost": {
        "validators": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validator_groups": {
          "parameters": [],
          "returnType": "[number[][], { session_start_block: number; group_rotation_frequency: number; now: number; }]",
          "description": "Runtime call from ParachainHost API"
        },
        "availability_cores": {
          "parameters": [],
          "returnType": "Enum<{ Occupied: { next_up_on_available?: { para_id: number; collator: FixedSizeBinary<32> | undefined; } | undefined; occupied_since: number; time_out_at: number; next_up_on_time_out?: { ...; } | undefined; availability: { ...; }; group_responsible: number; candidate_hash: FixedSizeBinary<...>; candidate_descriptor...",
          "description": "Runtime call from ParachainHost API"
        },
        "persisted_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "assumed_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "[{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; }, FixedSizeBinary<32>] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "check_validation_outputs": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "session_index_for_child": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<32>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_events": {
          "parameters": [],
          "returnType": "Enum<{ CandidateBacked: [{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<...>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, Binary, number, number]; ...",
          "description": "Runtime call from ParachainHost API"
        },
        "dmq_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ sent_at: number; msg: Binary; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "inbound_hrmp_channels_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "[number, { data: Binary; sent_at: number; }[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_by_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "on_chain_votes": {
          "parameters": [],
          "returnType": "{ session: number; backing_validators_per_candidate: [{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; ... 7 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, [...][]][]; disputes: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "session_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ dispute_period: number; no_show_slots: number; n_delay_tranches: number; zeroth_delay_tranche_width: number; needed_approvals: number; relay_vrf_modulo_samples: number; active_validator_indices: number[]; ... 5 more ...; n_cores: number; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_pvf_check_statement": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ session_index: number; accept: boolean; subject: FixedSizeBinary<32>; validator_index: number; }"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<64>"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "pvfs_require_precheck": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "FixedSizeBinary<32> | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "disputes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { start: number; validators_for: { bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }; validators_against: { ...; }; concluded_at: number | undefined; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "session_executor_params": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "PolkadotPrimitivesV6ExecutorParamsExecutorParam[] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "unapplied_slashes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { keys: [number, FixedSizeBinary<32>][]; kind: SlashingOffenceKind; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_report_dispute_lost": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ kind: SlashingOffenceKind; validator_index: number; time_slot: { session_index: number; candidate_hash: FixedSizeBinary<32>; }; validator_id: FixedSizeBinary<...>; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "minimum_backing_votes": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "para_backing_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ constraints: { max_code_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ump_remaining_bytes: number; ... 7 more ...; future_validation_code: [...] | undefined; }; pending_availability: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "async_backing_params": {
          "parameters": [],
          "returnType": "{ max_candidate_depth: number; allowed_ancestry_len: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "disabled_validators": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from ParachainHost API"
        },
        "node_features": {
          "parameters": [],
          "returnType": "{ bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "approval_voting_params": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "claim_queue": {
          "parameters": [],
          "returnType": "[number, number[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "candidates_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<32>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_bomb_limit": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "backing_constraints": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ max_code_size: number; max_head_data_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ... 8 more ...; future_validation_code: [...] | undefined; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "scheduling_lookahead": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        }
      },
      "BeefyApi": {
        "beefy_genesis": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "validator_set": {
          "parameters": [],
          "returnType": "{ id: bigint; validators: FixedSizeBinary<33>[]; } | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_double_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ first: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; second: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_fork_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ vote: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; header: { ...; }; ancestry_proof: Binary; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_future_block_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<33>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_ancestry_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        }
      },
      "MmrApi": {
        "mmr_root": {
          "parameters": [],
          "returnType": "{ value: FixedSizeBinary<32>; success: true; } | { value: MmrPrimitivesError; success: false; }",
          "description": "Runtime call from MmrApi API"
        },
        "mmr_leaf_count": {
          "parameters": [],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: bigint; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "generate_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number[]"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: [Binary[], { items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }]; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof_stateless": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "Binary[]"
            },
            {
              "name": "param2",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        }
      },
      "BeefyMmrApi": {
        "authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        },
        "next_authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        }
      },
      "GrandpaApi": {
        "grandpa_authorities": {
          "parameters": [],
          "returnType": "[FixedSizeBinary<32>, bigint][]",
          "description": "Runtime call from GrandpaApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ set_id: bigint; equivocation: GrandpaEquivocation; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from GrandpaApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GrandpaApi API"
        },
        "current_set_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from GrandpaApi API"
        }
      },
      "BabeApi": {
        "configuration": {
          "parameters": [],
          "returnType": "{ c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; slot_duration: bigint; epoch_length: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; }",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch_start": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "next_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BabeApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ offender: FixedSizeBinary<32>; slot: bigint; first_header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<...>; digest: DigestItem[]; }; second_header: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BabeApi API"
        }
      },
      "AuthorityDiscoveryApi": {
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuthorityDiscoveryApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "TransactionPaymentCallApi": {
        "query_call_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 49 more ...; Beefy: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_call_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 49 more ...; Beefy: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: bigint; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: DispatchRawOrigin; Origins: Enum<{ StakingAdmin: undefined; Treasurer: undefined; FellowshipAdmin: undefined; GeneralAdmin: undefined; AuctionAdmin: undefined; ... 22 more ...; WishForChange: undefined; }>; ParachainsOrigin: { ...; }; XcmPallet: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 49 more ...; Beefy: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }; success: true; } | { ...; }; emitted_events: Enum<...>[]; local_xcm?: XcmVersio...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "NominationPoolsApi": {
        "pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "points_to_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "balance_to_points": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_pending_slash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_pending_slash": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_needs_delegate_migration": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_needs_delegate_migration": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_total_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_accounts": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "FixedSizeArray<2, SS58String>",
          "description": "Runtime call from NominationPoolsApi API"
        }
      },
      "StakingApi": {
        "nominations_quota": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from StakingApi API"
        },
        "eras_stakers_page_count": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from StakingApi API"
        },
        "pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from StakingApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Babe": {
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Indices": {
        "NotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Permanent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Staking": {
        "NotController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPaired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyTargets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSlashIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMoreChunks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUnlockChunk": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundedTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEraToReward": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNumberOfNominations": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSortedAndUnique": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectHistoryDepth": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectSlashingSpans": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyTargets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotChillOther": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyNominators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyValidators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ControllerDeprecated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotRestoreLedger": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardDestinationRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VirtualStakerNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReapStash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Restricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Grandpa": {
        "PauseFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ResumeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChangePending": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooSoon": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FellowshipCollective": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotPolling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoneRemaining": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Corruption": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RankTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SameMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FellowshipReferenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Claims": {
        "InvalidEthereumSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignerHasNoClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderHasNoClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PotUnderflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VestedBalanceExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Society": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Suspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyFounded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVouching": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVouchingOnBidder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Head": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Founder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyBid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFounder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotHead": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRejected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Approved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Rejected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Voted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotBidder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDefender": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotGroup": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyElevated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPunished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Recovery": {
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFriends": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxFriends": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSorted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRecoverable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRecoverable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFriend": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelayPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVouched": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Threshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StillActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "NotVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AtMaxVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ScheduleIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidScheduleParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Bounties": {
        "InsufficientProposersBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReasonTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequireCurator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Premature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasActiveChildBounty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ChildBounties": {
        "ParentBountyNotActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBountyBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyChildBounties": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ElectionProviderMultiPhase": {
        "PreDispatchEarlySubmission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchWrongWinnerCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchWeakSubmission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedQueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedCannotPayDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedInvalidWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedTooMuchWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OcwCallWrongEra": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingSnapshotMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSubmissionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyWinners": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchDifferentRound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Nis": {
        "DurationTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DurationTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownReceipt": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownBid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PortionTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfunded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyFunded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Throttled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MakesDust": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCommunal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPrivate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "NisCounterpartBalances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "VoterList": {
        "List": {
          "type": "PlainDescriptor<BagsListListListError>",
          "description": "Error from VoterList pallet",
          "returnType": "PlainDescriptor<BagsListListListError>"
        }
      },
      "NominationPools": {
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolMemberNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardPoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SubPoolsNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountBelongsToOtherPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FullyUnbonding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxUnbondingLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotWithdrawAny": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinimumBondNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OverflowRisk": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDestroying": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNominator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotKickerOrDestroying": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOpen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPools": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPoolMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CanNotChangeState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoesNotHavePermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MetadataExceedsMaxLen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Defensive": {
          "type": "PlainDescriptor<Enum<{ NotEnoughSpaceInUnbondPool: undefined; PoolNotFound: undefined; RewardPoolNotFound: undefined; SubPoolsNotFound: undefined; BondedStashKilledPrematurely: undefined; DelegationUnsupported: undefined; SlashNotApplied: undefined; }>>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<Enum<{ NotEnoughSpaceInUnbondPool: undefined; PoolNotFound: undefined; RewardPoolNotFound: undefined; SubPoolsNotFound: undefined; BondedStashKilledPrematurely: undefined; DelegationUnsupported: undefined; SlashNotApplied: undefined; }>>"
        },
        "PartialUnbondNotAllowedPermissionlessly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxCommissionRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionExceedsMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionExceedsGlobalMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionChangeThrottled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionChangeRateNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPendingCommission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoCommissionCurrentSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolIdInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BondExtraRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToAdjust": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlashTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Restricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FastUnstake": {
        "NotController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFullyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyHead": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "DelegatedStaking": {
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStaking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRewardDestination": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDelegation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAgent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnappliedSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Configuration": {
        "InvalidNewValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Configuration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInclusion": {
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrematureCodeUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NewCodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedRelayParent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssignment": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidGroupIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataHashMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectDownwardMessageHandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUpwardMessages": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HrmpWatermarkMishandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOutboundHrmp": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidationCodeHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaHeadMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInherent": {
        "TooManyInclusionInherents": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParentHeader": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InherentDataFilteredDuringExecution": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Paras": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOnboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOffboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementStale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckInvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckDoubleVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckSubjectInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgradeCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Hrmp": {
        "OpenHrmpChannelToSelf": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelInvalidRecipient": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroCapacity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelCapacityExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroMessageSize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelMessageSizeExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelAlreadyUnderway": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CancelHrmpOpenChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChannelCreationNotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasDisputes": {
        "DuplicateDisputeStatementSets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AncientDisputeStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SingleSidedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaliciousBacker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingBackingVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnconfirmedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasSlashing": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSessionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCandidateHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidatorIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexIdMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateSlashingReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OnDemandAssignmentProvider": {
        "QueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpotPriceHigherThanMaxAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientCredits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CoretimeAssignmentProvider": {
        "AssignmentsEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedInsert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Registrar": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDeregister": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReserved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Slots": {
        "ParaNotOnboarding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Auctions": {
        "AuctionInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeasePeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCurrentAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AuctionEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyLeasedOut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Crowdloan": {
        "FirstPeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FirstPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodBeforeFirstPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotEndInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EndTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParaId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CapExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionPeriodOver": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidOrLeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundNotEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoContributions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReadyToDissolve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MemoTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInNewRaise": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VrfDelayInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoLeasePeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Coretime": {
        "NotBroker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestedFutureRevenue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTransferFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmPallet": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAuthorizedAliases": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiresInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AliasNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRate": {
        "UnknownAssetKind": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Beefy": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDoubleVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidForkVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFutureBlockVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProofSession": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "moonbeam": {
    "chainInfo": {
      "name": "moonbeam",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:22.936Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "UnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AggregatedUnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "NewValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ValidationData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "DidSetValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastRelayChainBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAhead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelayStateProof": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelevantMessagingState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HostConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastDmqMqcHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastHrmpMqcHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ProcessedDownwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpWatermark": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpOutboundMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingUpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardDeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AnnouncedHrmpMessagesPerCandidate": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedXcmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedDmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "CustomValidationHeadData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "ParachainInfo": {
        "ParachainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainInfo pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "ParachainStaking": {
        "CollatorCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "TotalSelected": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "InflationDistributionInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Round": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelegatorState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "CandidateInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelegationScheduledRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "AutoCompoundingDelegations": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "TopDelegations": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "BottomDelegations": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "SelectedCandidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Total": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "CandidatePool": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "AtStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "WasInactive": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelayedPayouts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "InflationConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Points": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "AwardedPts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "EnableMarkingOffline": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        }
      },
      "AuthorInherent": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorInherent pallet",
          "returnType": "unknown"
        },
        "InherentIncluded": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorInherent pallet",
          "returnType": "unknown"
        }
      },
      "AuthorFilter": {
        "EligibleRatio": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorFilter pallet",
          "returnType": "unknown"
        },
        "EligibleCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorFilter pallet",
          "returnType": "unknown"
        }
      },
      "AuthorMapping": {
        "MappingWithDeposit": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorMapping pallet",
          "returnType": "unknown"
        },
        "NimbusLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorMapping pallet",
          "returnType": "unknown"
        }
      },
      "MoonbeamOrbiters": {
        "AccountLookupOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "CollatorsPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "CounterForCollatorsPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "CurrentRound": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "ForceRotation": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "MinOrbiterDeposit": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "OrbiterPerRound": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "RegisteredOrbiter": {
          "required": [],
          "optional": [],
          "description": "Storage item from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        }
      },
      "AsyncBacking": {
        "SlotInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from AsyncBacking pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "MaintenanceMode": {
        "MaintenanceMode": {
          "required": [],
          "optional": [],
          "description": "Storage item from MaintenanceMode pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "IdentityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SuperOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SubsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "Registrars": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "AuthorityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UnbindingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Migrations": {
        "FullyUpgraded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Migrations pallet",
          "returnType": "unknown"
        },
        "MigrationState": {
          "required": [],
          "optional": [],
          "description": "Storage item from Migrations pallet",
          "returnType": "unknown"
        },
        "ShouldPauseXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from Migrations pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Parameters": {
        "Parameters": {
          "required": [],
          "optional": [],
          "description": "Storage item from Parameters pallet",
          "returnType": "unknown"
        }
      },
      "EthereumChainId": {
        "ChainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from EthereumChainId pallet",
          "returnType": "unknown"
        }
      },
      "EVM": {
        "AccountCodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountCodesMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountStorages": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        }
      },
      "Ethereum": {
        "Pending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CounterForPending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentReceipts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentTransactionStatuses": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "TreasuryCouncilCollective": {
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        },
        "ProposalOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        },
        "CostOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        },
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        }
      },
      "OpenTechCommitteeCollective": {
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        },
        "ProposalOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        },
        "CostOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        },
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "LastSpendPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "CrowdloanRewards": {
        "AccountsPayable": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "ClaimedRelayChainIds": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "UnassociatedContributions": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "Initialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "InitRelayBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "EndRelayBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "InitializedRewardAmount": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "TotalContributors": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrowdloanRewards pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "InboundXcmpSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "SignalMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "Assets": {
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "NextAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        }
      },
      "AssetManager": {
        "AssetIdType": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetManager pallet",
          "returnType": "unknown"
        },
        "AssetTypeId": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetManager pallet",
          "returnType": "unknown"
        }
      },
      "XcmTransactor": {
        "IndexToAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmTransactor pallet",
          "returnType": "unknown"
        },
        "TransactInfoWithWeightLimit": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmTransactor pallet",
          "returnType": "unknown"
        },
        "DestinationAssetFeePerSecond": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmTransactor pallet",
          "returnType": "unknown"
        },
        "RelayIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmTransactor pallet",
          "returnType": "unknown"
        }
      },
      "EthereumXcm": {
        "Nonce": {
          "required": [],
          "optional": [],
          "description": "Storage item from EthereumXcm pallet",
          "returnType": "unknown"
        },
        "EthereumXcmSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from EthereumXcm pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "EvmForeignAssets": {
        "AssetsById": {
          "required": [],
          "optional": [],
          "description": "Storage item from EvmForeignAssets pallet",
          "returnType": "unknown"
        },
        "CounterForAssetsById": {
          "required": [],
          "optional": [],
          "description": "Storage item from EvmForeignAssets pallet",
          "returnType": "unknown"
        },
        "AssetsByLocation": {
          "required": [],
          "optional": [],
          "description": "Storage item from EvmForeignAssets pallet",
          "returnType": "unknown"
        },
        "AssetsCreationDetails": {
          "required": [],
          "optional": [],
          "description": "Storage item from EvmForeignAssets pallet",
          "returnType": "unknown"
        }
      },
      "XcmWeightTrader": {
        "SupportedAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmWeightTrader pallet",
          "returnType": "unknown"
        }
      },
      "EmergencyParaXcm": {
        "Mode": {
          "required": [],
          "optional": [],
          "description": "Storage item from EmergencyParaXcm pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "Cursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "Historic": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "RelayStorageRoots": {
        "RelayStorageRoot": {
          "required": [],
          "optional": [],
          "description": "Storage item from RelayStorageRoots pallet",
          "returnType": "unknown"
        },
        "RelayStorageRootKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from RelayStorageRoots pallet",
          "returnType": "unknown"
        }
      },
      "Randomness": {
        "Requests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "RequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "LocalVrfOutput": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "RelayEpoch": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "InherentIncluded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "NotFirstBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "RandomnessResults": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        },
        "PreviousLocalVrfOutput": {
          "required": [],
          "optional": [],
          "description": "Storage item from Randomness pallet",
          "returnType": "unknown"
        }
      },
      "BridgeKusamaGrandpa": {
        "FreeHeadersRemaining": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "InitialHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "BestFinalized": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "ImportedHashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "ImportedHashesPointer": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "ImportedHeaders": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "CurrentAuthoritySet": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "PalletOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "PalletOperatingMode": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        }
      },
      "BridgeKusamaParachains": {
        "PalletOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        },
        "PalletOperatingMode": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        },
        "ParasInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        },
        "ImportedParaHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        },
        "ImportedParaHashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        }
      },
      "BridgeKusamaMessages": {
        "PalletOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaMessages pallet",
          "returnType": "unknown"
        },
        "PalletOperatingMode": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaMessages pallet",
          "returnType": "unknown"
        },
        "InboundLanes": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaMessages pallet",
          "returnType": "unknown"
        },
        "OutboundLanes": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaMessages pallet",
          "returnType": "unknown"
        },
        "OutboundMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeKusamaMessages pallet",
          "returnType": "unknown"
        }
      },
      "BridgeXcmOverMoonriver": {
        "Bridges": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeXcmOverMoonriver pallet",
          "returnType": "unknown"
        },
        "LaneToBridge": {
          "required": [],
          "optional": [],
          "description": "Storage item from BridgeXcmOverMoonriver pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "set_validation_data": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        },
        "sudo_send_upward_message": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "RootTesting": {
        "fill_block": {
          "parameters": [],
          "description": "Call from RootTesting pallet",
          "returnType": "void"
        },
        "trigger_defensive": {
          "parameters": [],
          "description": "Call from RootTesting pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "ParachainStaking": {
        "set_staking_expectations": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_inflation": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_parachain_bond_account": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_parachain_bond_reserve_percent": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_total_selected": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_collator_commission": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_blocks_per_round": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "join_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_leave_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_leave_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_leave_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "go_offline": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "go_online": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "candidate_bond_more": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_candidate_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_candidate_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_candidate_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "delegate_with_auto_compound": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_revoke_delegation": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "delegator_bond_more": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_delegator_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_delegation_request": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_delegation_request": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_auto_compound": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "hotfix_remove_delegation_requests_exited_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "notify_inactive_collator": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "enable_marking_offline": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "force_join_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_inflation_distribution_config": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        }
      },
      "AuthorInherent": {
        "kick_off_authorship_validation": {
          "parameters": [],
          "description": "Call from AuthorInherent pallet",
          "returnType": "void"
        }
      },
      "AuthorFilter": {
        "set_eligible": {
          "parameters": [],
          "description": "Call from AuthorFilter pallet",
          "returnType": "void"
        }
      },
      "AuthorMapping": {
        "add_association": {
          "parameters": [],
          "description": "Call from AuthorMapping pallet",
          "returnType": "void"
        },
        "update_association": {
          "parameters": [],
          "description": "Call from AuthorMapping pallet",
          "returnType": "void"
        },
        "clear_association": {
          "parameters": [],
          "description": "Call from AuthorMapping pallet",
          "returnType": "void"
        },
        "remove_keys": {
          "parameters": [],
          "description": "Call from AuthorMapping pallet",
          "returnType": "void"
        },
        "set_keys": {
          "parameters": [],
          "description": "Call from AuthorMapping pallet",
          "returnType": "void"
        }
      },
      "MoonbeamOrbiters": {
        "collator_add_orbiter": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "collator_remove_orbiter": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "orbiter_leave_collator_pool": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "orbiter_register": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "orbiter_unregister": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "add_collator": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "remove_collator": {
          "parameters": [],
          "description": "Call from MoonbeamOrbiters pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "MaintenanceMode": {
        "enter_maintenance_mode": {
          "parameters": [],
          "description": "Call from MaintenanceMode pallet",
          "returnType": "void"
        },
        "resume_normal_operation": {
          "parameters": [],
          "description": "Call from MaintenanceMode pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "add_registrar": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_subs": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "clear_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "request_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "cancel_request": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fee": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_account_id": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fields": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "provide_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "rename_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "quit_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_username_for": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "accept_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_expired_approval": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_primary_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "unbind_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "MoonbeamLazyMigrations": {
        "create_contract_metadata": {
          "parameters": [],
          "description": "Call from MoonbeamLazyMigrations pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "set_parameter": {
          "parameters": [],
          "description": "Call from Parameters pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "withdraw": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "call": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create2": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "transact": {
          "parameters": [],
          "description": "Call from Ethereum pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "TreasuryCouncilCollective": {
        "set_members": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "propose": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "disapprove_proposal": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "close": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "release_proposal_cost": {
          "parameters": [],
          "description": "Call from TreasuryCouncilCollective pallet",
          "returnType": "void"
        }
      },
      "OpenTechCommitteeCollective": {
        "set_members": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "propose": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "disapprove_proposal": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "close": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "release_proposal_cost": {
          "parameters": [],
          "description": "Call from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "CrowdloanRewards": {
        "associate_native_identity": {
          "parameters": [],
          "description": "Call from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "change_association_with_relay_keys": {
          "parameters": [],
          "description": "Call from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "claim": {
          "parameters": [],
          "description": "Call from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "update_reward_address": {
          "parameters": [],
          "description": "Call from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "complete_initialization": {
          "parameters": [],
          "description": "Call from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "initialize_reward_vec": {
          "parameters": [],
          "description": "Call from CrowdloanRewards pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "send": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "Assets": {
        "create": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "start_destroy": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "destroy_accounts": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "destroy_approvals": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "finish_destroy": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "freeze_asset": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "thaw_asset": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_set_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_clear_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_asset_status": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_cancel_approval": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_approved": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "touch": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_min_balance": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "touch_other": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "refund_other": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "block": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        }
      },
      "AssetManager": {
        "register_foreign_asset": {
          "parameters": [],
          "description": "Call from AssetManager pallet",
          "returnType": "void"
        },
        "change_existing_asset_type": {
          "parameters": [],
          "description": "Call from AssetManager pallet",
          "returnType": "void"
        },
        "remove_existing_asset_type": {
          "parameters": [],
          "description": "Call from AssetManager pallet",
          "returnType": "void"
        },
        "destroy_foreign_asset": {
          "parameters": [],
          "description": "Call from AssetManager pallet",
          "returnType": "void"
        }
      },
      "XcmTransactor": {
        "register": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "transact_through_derivative": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "transact_through_sovereign": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "set_transact_info": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "remove_transact_info": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "transact_through_signed": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "set_fee_per_second": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "remove_fee_per_second": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        },
        "hrmp_manage": {
          "parameters": [],
          "description": "Call from XcmTransactor pallet",
          "returnType": "void"
        }
      },
      "EthereumXcm": {
        "transact": {
          "parameters": [],
          "description": "Call from EthereumXcm pallet",
          "returnType": "void"
        },
        "transact_through_proxy": {
          "parameters": [],
          "description": "Call from EthereumXcm pallet",
          "returnType": "void"
        },
        "suspend_ethereum_xcm_execution": {
          "parameters": [],
          "description": "Call from EthereumXcm pallet",
          "returnType": "void"
        },
        "resume_ethereum_xcm_execution": {
          "parameters": [],
          "description": "Call from EthereumXcm pallet",
          "returnType": "void"
        },
        "force_transact_as": {
          "parameters": [],
          "description": "Call from EthereumXcm pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "EvmForeignAssets": {
        "create_foreign_asset": {
          "parameters": [],
          "description": "Call from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "change_xcm_location": {
          "parameters": [],
          "description": "Call from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "freeze_foreign_asset": {
          "parameters": [],
          "description": "Call from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "unfreeze_foreign_asset": {
          "parameters": [],
          "description": "Call from EvmForeignAssets pallet",
          "returnType": "void"
        }
      },
      "XcmWeightTrader": {
        "add_asset": {
          "parameters": [],
          "description": "Call from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "edit_asset": {
          "parameters": [],
          "description": "Call from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "pause_asset_support": {
          "parameters": [],
          "description": "Call from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "resume_asset_support": {
          "parameters": [],
          "description": "Call from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "remove_asset": {
          "parameters": [],
          "description": "Call from XcmWeightTrader pallet",
          "returnType": "void"
        }
      },
      "EmergencyParaXcm": {
        "paused_to_normal": {
          "parameters": [],
          "description": "Call from EmergencyParaXcm pallet",
          "returnType": "void"
        },
        "fast_authorize_upgrade": {
          "parameters": [],
          "description": "Call from EmergencyParaXcm pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "force_set_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_set_active_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_onboard_mbms": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "clear_historic": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "Randomness": {
        "set_babe_randomness_results": {
          "parameters": [],
          "description": "Call from Randomness pallet",
          "returnType": "void"
        }
      },
      "BridgeKusamaGrandpa": {
        "submit_finality_proof": {
          "parameters": [],
          "description": "Call from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        },
        "initialize": {
          "parameters": [],
          "description": "Call from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        },
        "set_owner": {
          "parameters": [],
          "description": "Call from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        },
        "set_operating_mode": {
          "parameters": [],
          "description": "Call from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        },
        "submit_finality_proof_ex": {
          "parameters": [],
          "description": "Call from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        },
        "force_set_pallet_state": {
          "parameters": [],
          "description": "Call from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        }
      },
      "BridgeKusamaParachains": {
        "submit_parachain_heads": {
          "parameters": [],
          "description": "Call from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "set_owner": {
          "parameters": [],
          "description": "Call from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "set_operating_mode": {
          "parameters": [],
          "description": "Call from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "submit_parachain_heads_ex": {
          "parameters": [],
          "description": "Call from BridgeKusamaParachains pallet",
          "returnType": "void"
        }
      },
      "BridgeKusamaMessages": {
        "set_owner": {
          "parameters": [],
          "description": "Call from BridgeKusamaMessages pallet",
          "returnType": "void"
        },
        "set_operating_mode": {
          "parameters": [],
          "description": "Call from BridgeKusamaMessages pallet",
          "returnType": "void"
        },
        "receive_messages_proof": {
          "parameters": [],
          "description": "Call from BridgeKusamaMessages pallet",
          "returnType": "void"
        },
        "receive_messages_delivery_proof": {
          "parameters": [],
          "description": "Call from BridgeKusamaMessages pallet",
          "returnType": "void"
        }
      },
      "BridgeXcmOverMoonriver": {
        "open_bridge": {
          "parameters": [],
          "description": "Call from BridgeXcmOverMoonriver pallet",
          "returnType": "void"
        },
        "close_bridge": {
          "parameters": [],
          "description": "Call from BridgeXcmOverMoonriver pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "ValidationFunctionStored": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionApplied": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionDiscarded": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesProcessed": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "UpwardMessageSent": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "RootTesting": {
        "DefensiveTestCall": {
          "fields": [],
          "description": "Event from RootTesting pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "ParachainStaking": {
        "NewRound": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "JoinedCollatorCandidates": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CollatorChosen": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBondLessRequested": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBondedMore": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBondedLess": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateWentOffline": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBackOnline": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateScheduledExit": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CancelledCandidateExit": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CancelledCandidateBondLess": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateLeft": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationDecreaseScheduled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationIncreased": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationDecreased": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorExitScheduled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationRevocationScheduled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorLeft": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationRevoked": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationKicked": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorExitCancelled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CancelledDelegationRequest": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "Delegation": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorLeftCandidate": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "InflationDistributed": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "InflationDistributionConfigUpdated": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "InflationSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "StakeExpectationsSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "TotalSelectedSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CollatorCommissionSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "BlocksPerRoundSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "AutoCompoundSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "Compounded": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        }
      },
      "AuthorFilter": {
        "EligibleUpdated": {
          "fields": [],
          "description": "Event from AuthorFilter pallet",
          "returnType": "void"
        }
      },
      "AuthorMapping": {
        "KeysRegistered": {
          "fields": [],
          "description": "Event from AuthorMapping pallet",
          "returnType": "void"
        },
        "KeysRemoved": {
          "fields": [],
          "description": "Event from AuthorMapping pallet",
          "returnType": "void"
        },
        "KeysRotated": {
          "fields": [],
          "description": "Event from AuthorMapping pallet",
          "returnType": "void"
        }
      },
      "MoonbeamOrbiters": {
        "OrbiterJoinCollatorPool": {
          "fields": [],
          "description": "Event from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "OrbiterLeaveCollatorPool": {
          "fields": [],
          "description": "Event from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "OrbiterRewarded": {
          "fields": [],
          "description": "Event from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "OrbiterRotation": {
          "fields": [],
          "description": "Event from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "OrbiterRegistered": {
          "fields": [],
          "description": "Event from MoonbeamOrbiters pallet",
          "returnType": "void"
        },
        "OrbiterUnregistered": {
          "fields": [],
          "description": "Event from MoonbeamOrbiters pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "MaintenanceMode": {
        "EnteredMaintenanceMode": {
          "fields": [],
          "description": "Event from MaintenanceMode pallet",
          "returnType": "void"
        },
        "NormalOperationResumed": {
          "fields": [],
          "description": "Event from MaintenanceMode pallet",
          "returnType": "void"
        },
        "FailedToSuspendIdleXcmExecution": {
          "fields": [],
          "description": "Event from MaintenanceMode pallet",
          "returnType": "void"
        },
        "FailedToResumeIdleXcmExecution": {
          "fields": [],
          "description": "Event from MaintenanceMode pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "IdentitySet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityCleared": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementRequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementUnrequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementGiven": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "RegistrarAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentitiesSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRenamed": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRevoked": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameQueued": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PreapprovalExpired": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PrimaryUsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "DanglingUsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameUnbound": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        }
      },
      "Migrations": {
        "RuntimeUpgradeStarted": {
          "fields": [],
          "description": "Event from Migrations pallet",
          "returnType": "void"
        },
        "RuntimeUpgradeCompleted": {
          "fields": [],
          "description": "Event from Migrations pallet",
          "returnType": "void"
        },
        "MigrationStarted": {
          "fields": [],
          "description": "Event from Migrations pallet",
          "returnType": "void"
        },
        "MigrationCompleted": {
          "fields": [],
          "description": "Event from Migrations pallet",
          "returnType": "void"
        },
        "FailedToSuspendIdleXcmExecution": {
          "fields": [],
          "description": "Event from Migrations pallet",
          "returnType": "void"
        },
        "FailedToResumeIdleXcmExecution": {
          "fields": [],
          "description": "Event from Migrations pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "Updated": {
          "fields": [],
          "description": "Event from Parameters pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "Log": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Created": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "CreatedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "ExecutedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "Executed": {
          "fields": [],
          "description": "Event from Ethereum pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "TreasuryCouncilCollective": {
        "Proposed": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "Disapproved": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "MemberExecuted": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "Closed": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "ProposalCostBurned": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        },
        "ProposalCostReleased": {
          "fields": [],
          "description": "Event from TreasuryCouncilCollective pallet",
          "returnType": "void"
        }
      },
      "OpenTechCommitteeCollective": {
        "Proposed": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "Disapproved": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "MemberExecuted": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "Closed": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "ProposalCostBurned": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        },
        "ProposalCostReleased": {
          "fields": [],
          "description": "Event from OpenTechCommitteeCollective pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "CrowdloanRewards": {
        "InitialPaymentMade": {
          "fields": [],
          "description": "Event from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "NativeIdentityAssociated": {
          "fields": [],
          "description": "Event from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "RewardsPaid": {
          "fields": [],
          "description": "Event from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "RewardAddressUpdated": {
          "fields": [],
          "description": "Event from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "InitializedAlreadyInitializedAccount": {
          "fields": [],
          "description": "Event from CrowdloanRewards pallet",
          "returnType": "void"
        },
        "InitializedAccountWithNotEnoughContribution": {
          "fields": [],
          "description": "Event from CrowdloanRewards pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "XcmpMessageSent": {
          "fields": [],
          "description": "Event from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "CumulusXcm": {
        "InvalidFormat": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "UnsupportedVersion": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "ExecutedDownward": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "Attempted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "Assets": {
        "Created": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetFrozen": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetThawed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AccountsDestroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovalsDestroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "DestructionStarted": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "TransferredApproved": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetStatusChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetMinBalanceChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Touched": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Blocked": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        }
      },
      "AssetManager": {
        "ForeignAssetRegistered": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        },
        "UnitsPerSecondChanged": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        },
        "ForeignAssetXcmLocationChanged": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        },
        "ForeignAssetRemoved": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        },
        "SupportedAssetRemoved": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        },
        "ForeignAssetDestroyed": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        },
        "LocalAssetDestroyed": {
          "fields": [],
          "description": "Event from AssetManager pallet",
          "returnType": "void"
        }
      },
      "XcmTransactor": {
        "TransactedDerivative": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "TransactedSovereign": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "TransactedSigned": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "RegisteredDerivative": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "DeRegisteredDerivative": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "TransactFailed": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "TransactInfoChanged": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "TransactInfoRemoved": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "DestFeePerSecondChanged": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "DestFeePerSecondRemoved": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        },
        "HrmpManagementSent": {
          "fields": [],
          "description": "Event from XcmTransactor pallet",
          "returnType": "void"
        }
      },
      "EthereumXcm": {
        "ExecutedFromXcm": {
          "fields": [],
          "description": "Event from EthereumXcm pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "EvmForeignAssets": {
        "ForeignAssetCreated": {
          "fields": [],
          "description": "Event from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "ForeignAssetXcmLocationChanged": {
          "fields": [],
          "description": "Event from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "ForeignAssetFrozen": {
          "fields": [],
          "description": "Event from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "ForeignAssetUnfrozen": {
          "fields": [],
          "description": "Event from EvmForeignAssets pallet",
          "returnType": "void"
        },
        "TokensLocked": {
          "fields": [],
          "description": "Event from EvmForeignAssets pallet",
          "returnType": "void"
        }
      },
      "XcmWeightTrader": {
        "SupportedAssetAdded": {
          "fields": [],
          "description": "Event from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "SupportedAssetEdited": {
          "fields": [],
          "description": "Event from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "PauseAssetSupport": {
          "fields": [],
          "description": "Event from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "ResumeAssetSupport": {
          "fields": [],
          "description": "Event from XcmWeightTrader pallet",
          "returnType": "void"
        },
        "SupportedAssetRemoved": {
          "fields": [],
          "description": "Event from XcmWeightTrader pallet",
          "returnType": "void"
        }
      },
      "EmergencyParaXcm": {
        "EnteredPausedXcmMode": {
          "fields": [],
          "description": "Event from EmergencyParaXcm pallet",
          "returnType": "void"
        },
        "NormalXcmOperationResumed": {
          "fields": [],
          "description": "Event from EmergencyParaXcm pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "UpgradeStarted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationSkipped": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationAdvanced": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "HistoricCleared": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "Randomness": {
        "RandomnessRequestedBabeEpoch": {
          "fields": [],
          "description": "Event from Randomness pallet",
          "returnType": "void"
        },
        "RandomnessRequestedLocal": {
          "fields": [],
          "description": "Event from Randomness pallet",
          "returnType": "void"
        },
        "RequestFulfilled": {
          "fields": [],
          "description": "Event from Randomness pallet",
          "returnType": "void"
        },
        "RequestFeeIncreased": {
          "fields": [],
          "description": "Event from Randomness pallet",
          "returnType": "void"
        },
        "RequestExpirationExecuted": {
          "fields": [],
          "description": "Event from Randomness pallet",
          "returnType": "void"
        }
      },
      "BridgeKusamaGrandpa": {
        "UpdatedBestFinalizedHeader": {
          "fields": [],
          "description": "Event from BridgeKusamaGrandpa pallet",
          "returnType": "void"
        }
      },
      "BridgeKusamaParachains": {
        "UntrackedParachainRejected": {
          "fields": [],
          "description": "Event from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "MissingParachainHead": {
          "fields": [],
          "description": "Event from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "IncorrectParachainHeadHash": {
          "fields": [],
          "description": "Event from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "RejectedObsoleteParachainHead": {
          "fields": [],
          "description": "Event from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "RejectedLargeParachainHead": {
          "fields": [],
          "description": "Event from BridgeKusamaParachains pallet",
          "returnType": "void"
        },
        "UpdatedParachainHead": {
          "fields": [],
          "description": "Event from BridgeKusamaParachains pallet",
          "returnType": "void"
        }
      },
      "BridgeKusamaMessages": {
        "MessageAccepted": {
          "fields": [],
          "description": "Event from BridgeKusamaMessages pallet",
          "returnType": "void"
        },
        "MessagesReceived": {
          "fields": [],
          "description": "Event from BridgeKusamaMessages pallet",
          "returnType": "void"
        },
        "MessagesDelivered": {
          "fields": [],
          "description": "Event from BridgeKusamaMessages pallet",
          "returnType": "void"
        }
      },
      "BridgeXcmOverMoonriver": {
        "BridgeOpened": {
          "fields": [],
          "description": "Event from BridgeXcmOverMoonriver pallet",
          "returnType": "void"
        },
        "ClosingBridge": {
          "fields": [],
          "description": "Event from BridgeXcmOverMoonriver pallet",
          "returnType": "void"
        },
        "BridgePruned": {
          "fields": [],
          "description": "Event from BridgeXcmOverMoonriver pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "SelfParaId": {
          "type": "unknown",
          "description": "Constant from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "ParachainStaking": {
        "MinBlocksPerRound": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxOfflineRounds": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "LeaveCandidatesDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "CandidateBondLessDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "LeaveDelegatorsDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "RevokeDelegationDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelegationBondLessDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "RewardPaymentDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinSelectedCandidates": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxTopDelegationsPerCandidate": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxBottomDelegationsPerCandidate": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxDelegationsPerDelegator": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinCandidateStk": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinDelegation": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "SlotDuration": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "BlockTime": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxCandidates": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "LinearInflationThreshold": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        }
      },
      "MoonbeamOrbiters": {
        "MaxPoolSize": {
          "type": "unknown",
          "description": "Constant from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "MaxRoundArchive": {
          "type": "unknown",
          "description": "Constant from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        },
        "RotatePeriod": {
          "type": "unknown",
          "description": "Constant from MoonbeamOrbiters pallet",
          "returnType": "unknown"
        }
      },
      "AsyncBacking": {
        "ExpectedBlockTime": {
          "type": "unknown",
          "description": "Constant from AsyncBacking pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "BasicDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "ByteDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "SubAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSubAccounts": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxRegistrars": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernameExpiration": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameGracePeriod": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSuffixLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxUsernameLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "TreasuryCouncilCollective": {
        "MaxProposalWeight": {
          "type": "unknown",
          "description": "Constant from TreasuryCouncilCollective pallet",
          "returnType": "unknown"
        }
      },
      "OpenTechCommitteeCollective": {
        "MaxProposalWeight": {
          "type": "unknown",
          "description": "Constant from OpenTechCommitteeCollective pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "CrowdloanRewards": {
        "InitializationPayment": {
          "type": "unknown",
          "description": "Constant from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "MaxInitContributors": {
          "type": "unknown",
          "description": "Constant from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "RewardAddressRelayVoteThreshold": {
          "type": "unknown",
          "description": "Constant from CrowdloanRewards pallet",
          "returnType": "unknown"
        },
        "SignatureNetworkIdentifier": {
          "type": "unknown",
          "description": "Constant from CrowdloanRewards pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "MaxInboundSuspended": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxActiveOutboundChannels": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxPageSize": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "Assets": {
        "RemoveItemsLimit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "AssetDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "AssetAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "ApprovalDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        }
      },
      "XcmTransactor": {
        "SelfLocation": {
          "type": "unknown",
          "description": "Constant from XcmTransactor pallet",
          "returnType": "unknown"
        },
        "BaseXcmWeight": {
          "type": "unknown",
          "description": "Constant from XcmTransactor pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "CursorMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "IdentifierMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "RelayStorageRoots": {
        "MaxStorageRoots": {
          "type": "unknown",
          "description": "Constant from RelayStorageRoots pallet",
          "returnType": "unknown"
        }
      },
      "Randomness": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from Randomness pallet",
          "returnType": "unknown"
        },
        "MaxRandomWords": {
          "type": "unknown",
          "description": "Constant from Randomness pallet",
          "returnType": "unknown"
        },
        "MinBlockDelay": {
          "type": "unknown",
          "description": "Constant from Randomness pallet",
          "returnType": "unknown"
        },
        "MaxBlockDelay": {
          "type": "unknown",
          "description": "Constant from Randomness pallet",
          "returnType": "unknown"
        },
        "BlockExpirationDelay": {
          "type": "unknown",
          "description": "Constant from Randomness pallet",
          "returnType": "unknown"
        },
        "EpochExpirationDelay": {
          "type": "unknown",
          "description": "Constant from Randomness pallet",
          "returnType": "unknown"
        }
      },
      "BridgeKusamaGrandpa": {
        "MaxFreeHeadersPerBlock": {
          "type": "unknown",
          "description": "Constant from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "FreeHeadersInterval": {
          "type": "unknown",
          "description": "Constant from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        },
        "HeadersToKeep": {
          "type": "unknown",
          "description": "Constant from BridgeKusamaGrandpa pallet",
          "returnType": "unknown"
        }
      },
      "BridgeKusamaParachains": {
        "ParasPalletName": {
          "type": "unknown",
          "description": "Constant from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        },
        "HeadsToKeep": {
          "type": "unknown",
          "description": "Constant from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        },
        "MaxParaHeadDataSize": {
          "type": "unknown",
          "description": "Constant from BridgeKusamaParachains pallet",
          "returnType": "unknown"
        }
      },
      "BridgeXcmOverMoonriver": {
        "BridgedNetwork": {
          "type": "unknown",
          "description": "Constant from BridgeXcmOverMoonriver pallet",
          "returnType": "unknown"
        },
        "BridgeDeposit": {
          "type": "unknown",
          "description": "Constant from BridgeXcmOverMoonriver pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "UnincludedSegmentApi": {
        "can_build_upon": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from UnincludedSegmentApi API"
        }
      },
      "KusamaFinalityApi": {
        "best_finalized": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>] | undefined",
          "description": "Runtime call from KusamaFinalityApi API"
        },
        "free_headers_interval": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from KusamaFinalityApi API"
        },
        "synced_headers_grandpa_info": {
          "parameters": [],
          "returnType": "{ finality_proof: { round: bigint; commit: { target_hash: FixedSizeBinary<32>; target_number: number; precommits: { precommit: { target_hash: FixedSizeBinary<32>; target_number: number; }; signature: FixedSizeBinary<...>; id: FixedSizeBinary<...>; }[]; }; votes_ancestries: { ...; }[]; }; new_verification_context: { ...",
          "description": "Runtime call from KusamaFinalityApi API"
        }
      },
      "MoonriverKusamaFinalityApi": {
        "best_finalized": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>] | undefined",
          "description": "Runtime call from MoonriverKusamaFinalityApi API"
        },
        "free_headers_interval": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from MoonriverKusamaFinalityApi API"
        }
      },
      "ToMoonriverKusamaOutboundLaneApi": {
        "message_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "bigint"
            },
            {
              "name": "param2",
              "type": "bigint"
            }
          ],
          "returnType": "{ nonce: bigint; size: number; dispatch_weight: { ref_time: bigint; proof_size: bigint; }; }[]",
          "description": "Runtime call from ToMoonriverKusamaOutboundLaneApi API"
        }
      },
      "FromMoonriverKusamaInboundLaneApi": {
        "message_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "[Binary, { nonce: bigint; size: number; dispatch_weight: { ref_time: bigint; proof_size: bigint; }; }][]"
            }
          ],
          "returnType": "{ ref_time: bigint; proof_size: bigint; }[]",
          "description": "Runtime call from FromMoonriverKusamaInboundLaneApi API"
        }
      },
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "HexString"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "DebugRuntimeApi": {
        "trace_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>"
            },
            {
              "name": "param2",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 52 more ...; BridgeXcmOverMoonriver: Enum<...>; }>;...",
          "description": "Runtime call from DebugRuntimeApi API"
        },
        "trace_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>[]"
            },
            {
              "name": "param2",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 52 more ...; BridgeXcmOverMoonriver: Enum<...>; }>;...",
          "description": "Runtime call from DebugRuntimeApi API"
        },
        "trace_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param3",
              "type": "Binary"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param8",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param9",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 52 more ...; BridgeXcmOverMoonriver: Enum<...>; }>;...",
          "description": "Runtime call from DebugRuntimeApi API"
        }
      },
      "TxPoolRuntimeApi": {
        "extrinsic_filter": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "Binary[]"
            }
          ],
          "returnType": "{ ready: Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[]; fu...",
          "description": "Runtime call from TxPoolRuntimeApi API"
        }
      },
      "EthereumRuntimeRPCApi": {
        "chain_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_basic": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "{ nonce: FixedSizeArray<4, bigint>; balance: FixedSizeArray<4, bigint>; }",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_price": {
          "parameters": [],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_code_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "author": {
          "parameters": [],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "storage_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeArray<4, bigint>"
            }
          ],
          "returnType": "FixedSizeBinary<32>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "call": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param2",
              "type": "Binary"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param8",
              "type": "boolean"
            },
            {
              "name": "param9",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 52 more ...; BridgeXcmOverMoonriver: Enum<...>; ...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "create": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "boolean"
            },
            {
              "name": "param8",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 52 more ...; BridgeXcmOverMoonriver: Enum<...>; ...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_block": {
          "parameters": [],
          "returnType": "{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_receipts": {
          "parameters": [],
          "returnType": "Enum<{ Legacy: { logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; logs_bloom: FixedSizeBinary<256>; used_gas: FixedSizeArray<...>; status_code: number; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_transaction_statuses": {
          "parameters": [],
          "returnType": "{ to: FixedSizeBinary<20> | undefined; from: FixedSizeBinary<20>; transaction_hash: FixedSizeBinary<32>; transaction_index: number; contract_address: FixedSizeBinary<...> | undefined; logs: { ...; }[]; logs_bloom: FixedSizeBinary<...>; }[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_all": {
          "parameters": [],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, Enum<...>[] | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "extrinsic_filter": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "elasticity": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_limit_multiplier_support": {
          "parameters": [],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "initialize_pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        }
      },
      "ConvertTransactionRuntimeApi": {
        "convert_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from ConvertTransactionRuntimeApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "NimbusApi": {
        "can_author": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "number"
            },
            {
              "name": "param2",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NimbusApi API"
        }
      },
      "CollectCollationInfo": {
        "collect_collation_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }",
          "description": "Runtime call from CollectCollationInfo API"
        }
      },
      "VrfApi": {
        "get_last_vrf_output": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32> | undefined",
          "description": "Runtime call from VrfApi API"
        },
        "vrf_key_lookup": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "FixedSizeBinary<32> | undefined",
          "description": "Runtime call from VrfApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: Enum<{ Root: undefined; Signed: HexString; None: undefined; }>; Ethereum: { type: \"EthereumTransaction\"; value: FixedSizeBinary<20>; }; Origins: Enum<...>; ... 4 more ...; EthereumXcm: { ...; }; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 41 more ...; BridgeXcmOverMoonriver: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }; success: true; } | { ...; }; emitted_events: Enum<...>[]; local_xcm?: XcmVersio...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: HexString; success: true; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainSystem": {
        "OverlappingUpgrades": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProhibitedByPolkadot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HostConfigurationNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainStaking": {
        "DelegatorDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorDNEinTopNorBottom": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorDNEInDelegatorSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegationDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateBondBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorBondBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegationBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyOffline": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorAlreadyLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorNotLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorCannotLeaveYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDelegateIfLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateAlreadyLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateNotLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateCannotLeaveYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotGoOnlineIfLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedMaxDelegationsPerDelegator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegatedCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSetBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RoundLengthMustBeGreaterThanTotalSelectedCollators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoWritingSameValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TotalInflationDistributionPercentExceeds100": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountWeightHintJoinCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountWeightHintCancelLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountToLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowDelegationCountToDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateDelegationCountToDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateDelegationCountToLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowDelegationCountToLeaveDelegators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingCandidateRequestsDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingCandidateRequestAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingCandidateRequestNotDueYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRequestDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRequestAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRequestNotDueYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDelegateLessThanOrEqualToLowestBottomWhenFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRevoke": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowDelegationCountToAutoCompound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateAutoCompoundingDelegationCountToAutoCompound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateAutoCompoundingDelegationCountToDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCollatorCountToNotifyAsInactive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotBeNotifiedAsInactive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateAutoCompoundingDelegationCountToLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountWeightHint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountWeightHintGoOffline": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSetAboveMaxCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MarkingOfflineNotEnabled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrentRoundTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AuthorInherent": {
        "AuthorAlreadySet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccountId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotBeAuthor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AuthorMapping": {
        "AssociationNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotYourAssociation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotAffordSecurityDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAssociated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OldAuthorIdNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongKeySize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DecodeNimbusFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DecodeKeysFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AuthorMapping pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MoonbeamOrbiters": {
        "CollatorAlreadyAdded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollatorNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollatorPoolTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollatorsPoolCountTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinOrbiterDepositNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrbiterAlreadyInPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrbiterDepositNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrbiterNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrbiterStillInAPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamOrbiters pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MaintenanceMode": {
        "AlreadyInMaintenanceMode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MaintenanceMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInMaintenanceMode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MaintenanceMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Identity": {
        "TooManySubAccounts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNamed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeChanged": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StickyJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementGiven": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRegistrars": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSub": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementForDifferentIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementPaymentFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSuffix": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUsernameAuthority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAllocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequiresSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UsernameTaken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPrivileges": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Migrations": {
        "PreimageMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Migrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongUpperBound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Migrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageIsTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Migrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Migrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MoonbeamLazyMigrations": {
        "ContractMetadataAlreadySet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamLazyMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MoonbeamLazyMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EVM": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PaymentOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasPriceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNonce": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidChainId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Reentrancy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransactionMustComeFromEOA": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Undefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Ethereum": {
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreLogExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TreasuryCouncilCollective": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyProposals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrimeAccountNotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TreasuryCouncilCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OpenTechCommitteeCollective": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyProposals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrimeAccountNotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OpenTechCommitteeCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CrowdloanRewards": {
        "AlreadyAssociated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BatchBeyondFundPot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FirstClaimAlreadyDone": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardNotHighEnough": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidClaimSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFreeClaimSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardsAlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardVecAlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardVecNotFullyInitializedYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardsDoNotMatchFund": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyContributors": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VestingPeriodNonValid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonContributedAddressProvided": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientNumberOfValidProofs": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrowdloanRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmpQueue": {
        "BadQueueConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyResumed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyActiveOutboundChannels": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PolkadotXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Assets": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unknown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinBalanceZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnavailableConsumer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldDie": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldBurn": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiveAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotLive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetManager": {
        "ErrorCreatingAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetDoesNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowNumAssetsWeightHint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalAssetLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorDestroyingAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSufficientDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonExistentLocalAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetManager pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmTransactor": {
        "IndexAlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnclaimedIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetHasNoReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDest": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIsNotReserveInDestination": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorDelivering": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DispatchWeightBiggerThanTotalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WeightOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransactorInfoNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransferableCurrency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmExecuteError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTransactReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnableToWithdrawAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeePerSecondNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedTransactNotAllowedForDestination": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedMultiLocationToJunction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HrmpHandlerNotImplemented": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMuchFeeUsed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorValidating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RefundNotSupportedWithTransactInfo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmTransactor pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EthereumXcm": {
        "EthereumXcmExecutionSuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EthereumXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EvmForeignAssets": {
        "AssetAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetDoesNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIdFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CorruptedStorageOrphanLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Erc20ContractCreationFail": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmCallPauseFail": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmCallUnpauseFail": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmCallMintIntoFail": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmCallTransferFail": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmInternalError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotConvertLocationToAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocationOutsideOfOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotInSiblingPara": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSymbol": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTokenName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocationAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyForeignAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EvmForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmWeightTrader": {
        "AssetAlreadyAdded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyPaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotPaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmLocationFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceCannotBeZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmWeightTrader pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EmergencyParaXcm": {
        "NotInPausedMode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EmergencyParaXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MultiBlockMigrations": {
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiBlockMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PrecompileBenchmarks": {
        "BenchmarkError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PrecompileBenchmarks pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Randomness": {
        "RequestCounterOverflowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestFeeOverflowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MustRequestAtLeastOneWord": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotRequestMoreWordsThanMax": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotRequestRandomnessAfterMaxDelay": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotRequestRandomnessBeforeMinDelay": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestCannotYetBeFulfilled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OnlyRequesterCanIncreaseFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestHasNotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RandomnessResultDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RandomnessResultNotFilled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Randomness pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "BridgeKusamaGrandpa": {
        "InvalidJustification": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAuthoritySet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OldHeader": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnsupportedScheduledChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAuthoritiesInSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BridgeModule": {
          "type": "PlainDescriptor<{ type: \"Halted\"; value: undefined; }>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<{ type: \"Halted\"; value: undefined; }>"
        },
        "InvalidAuthoritySetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FreeHeadersLimitExceded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BelowFreeHeaderInterval": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeaderOverflowLimits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaGrandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "BridgeKusamaParachains": {
        "UnknownRelayChainBlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaParachains pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRelayChainBlockNumber": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaParachains pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeaderChainStorageProof": {
          "type": "PlainDescriptor<Enum<{ UnknownHeader: undefined; StorageProof: Enum<{ UnableToGenerateTrieProof: undefined; InvalidProof: undefined; UnsortedEntries: undefined; UnavailableKey: undefined; EmptyVal: undefined; ... 4 more ...; DuplicateNodes: undefined; }>; }>>",
          "description": "Error from BridgeKusamaParachains pallet",
          "returnType": "PlainDescriptor<Enum<{ UnknownHeader: undefined; StorageProof: Enum<{ UnableToGenerateTrieProof: undefined; InvalidProof: undefined; UnsortedEntries: undefined; UnavailableKey: undefined; EmptyVal: undefined; ... 4 more ...; DuplicateNodes: undefined; }>; }>>"
        },
        "BridgeModule": {
          "type": "PlainDescriptor<{ type: \"Halted\"; value: undefined; }>",
          "description": "Error from BridgeKusamaParachains pallet",
          "returnType": "PlainDescriptor<{ type: \"Halted\"; value: undefined; }>"
        }
      },
      "BridgeKusamaMessages": {
        "NotOperatingNormally": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LanesManager": {
          "type": "PlainDescriptor<Enum<{ InboundLaneAlreadyExists: undefined; OutboundLaneAlreadyExists: undefined; UnknownInboundLane: undefined; UnknownOutboundLane: undefined; ClosedInboundLane: undefined; ClosedOutboundLane: undefined; LaneDispatcherInactive: undefined; }>>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<Enum<{ InboundLaneAlreadyExists: undefined; OutboundLaneAlreadyExists: undefined; UnknownInboundLane: undefined; UnknownOutboundLane: undefined; ClosedInboundLane: undefined; ClosedOutboundLane: undefined; LaneDispatcherInactive: undefined; }>>"
        },
        "MessageRejectedByPallet": {
          "type": "PlainDescriptor<Enum<{ EmptyMessageProof: undefined; HeaderChain: Enum<{ UnknownHeader: undefined; StorageProof: Enum<{ UnableToGenerateTrieProof: undefined; InvalidProof: undefined; UnsortedEntries: undefined; ... 6 more ...; DuplicateNodes: undefined; }>; }>; ... 7 more ...; Other: undefined; }>>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<Enum<{ EmptyMessageProof: undefined; HeaderChain: Enum<{ UnknownHeader: undefined; StorageProof: Enum<{ UnableToGenerateTrieProof: undefined; InvalidProof: undefined; UnsortedEntries: undefined; ... 6 more ...; DuplicateNodes: undefined; }>; }>; ... 7 more ...; Other: undefined; }>>"
        },
        "TooManyMessagesInTheProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMessagesProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMessagesDeliveryProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUnrewardedRelayersState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientDispatchWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReceptionConfirmation": {
          "type": "PlainDescriptor<Enum<{ FailedToConfirmFutureMessages: undefined; EmptyUnrewardedRelayerEntry: undefined; NonConsecutiveUnrewardedRelayerEntries: undefined; TryingToConfirmMoreMessagesThanExpected: undefined; }>>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<Enum<{ FailedToConfirmFutureMessages: undefined; EmptyUnrewardedRelayerEntry: undefined; NonConsecutiveUnrewardedRelayerEntries: undefined; TryingToConfirmMoreMessagesThanExpected: undefined; }>>"
        },
        "BridgeModule": {
          "type": "PlainDescriptor<{ type: \"Halted\"; value: undefined; }>",
          "description": "Error from BridgeKusamaMessages pallet",
          "returnType": "PlainDescriptor<{ type: \"Halted\"; value: undefined; }>"
        }
      },
      "BridgeXcmOverMoonriver": {
        "BridgeLocations": {
          "type": "PlainDescriptor<Enum<{ NonUniversalLocation: undefined; InvalidBridgeOrigin: undefined; InvalidBridgeDestination: undefined; DestinationIsLocal: undefined; UnreachableDestination: undefined; UnsupportedDestinationLocation: undefined; UnsupportedXcmVersion: undefined; UnsupportedLaneIdType: undefined; }>>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<Enum<{ NonUniversalLocation: undefined; InvalidBridgeOrigin: undefined; InvalidBridgeDestination: undefined; DestinationIsLocal: undefined; UnreachableDestination: undefined; UnsupportedDestinationLocation: undefined; UnsupportedXcmVersion: undefined; UnsupportedLaneIdType: undefined; }>>"
        },
        "InvalidBridgeOriginAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BridgeAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyBridgesForLocalOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BridgeAlreadyClosed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LanesManager": {
          "type": "PlainDescriptor<Enum<{ InboundLaneAlreadyExists: undefined; OutboundLaneAlreadyExists: undefined; UnknownInboundLane: undefined; UnknownOutboundLane: undefined; ClosedInboundLane: undefined; ClosedOutboundLane: undefined; LaneDispatcherInactive: undefined; }>>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<Enum<{ InboundLaneAlreadyExists: undefined; OutboundLaneAlreadyExists: undefined; UnknownInboundLane: undefined; UnknownOutboundLane: undefined; ClosedInboundLane: undefined; ClosedOutboundLane: undefined; LaneDispatcherInactive: undefined; }>>"
        },
        "UnknownBridge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToReserveBridgeDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnsupportedXcmVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BridgeXcmOverMoonriver pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "bifrost": {
    "chainInfo": {
      "name": "bifrost",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:23.076Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicWeightReclaimed": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Indices pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "UnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AggregatedUnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "NewValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ValidationData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "DidSetValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastRelayChainBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAhead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelayStateProof": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelevantMessagingState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HostConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastDmqMqcHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastHrmpMqcHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ProcessedDownwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpWatermark": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpOutboundMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingUpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardDeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AnnouncedHrmpMessagesPerCandidate": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedXcmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedDmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "CustomValidationHeadData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "ParachainInfo": {
        "ParachainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainInfo pallet",
          "returnType": "unknown"
        }
      },
      "TxPause": {
        "PausedCalls": {
          "required": [],
          "optional": [],
          "description": "Storage item from TxPause pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "Cursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "Historic": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        }
      },
      "AuraExt": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        },
        "RelaySlotInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        }
      },
      "ParachainStaking": {
        "CollatorCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "TotalSelected": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "ParachainBondInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Round": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelegatorState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "CandidateInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelegationScheduledRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "TopDelegations": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "BottomDelegations": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "SelectedCandidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Total": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "CandidatePool": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "AtStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelayedPayouts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Staked": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "InflationConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "Points": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "AwardedPts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainStaking pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "InboundXcmpSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "SignalMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AuthorizedAliases": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "IdentityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SuperOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SubsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "Registrars": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "AuthorityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UnbindingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "VestingStartAt": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "Cliff": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "LastSpendPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "Ethereum": {
        "Pending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CounterForPending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentReceipts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentTransactionStatuses": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        }
      },
      "EVM": {
        "AccountCodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountCodesMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountStorages": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        }
      },
      "EVMChainId": {
        "ChainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMChainId pallet",
          "returnType": "unknown"
        }
      },
      "DynamicFee": {
        "MinGasPrice": {
          "required": [],
          "optional": [],
          "description": "Storage item from DynamicFee pallet",
          "returnType": "unknown"
        },
        "TargetMinGasPrice": {
          "required": [],
          "optional": [],
          "description": "Storage item from DynamicFee pallet",
          "returnType": "unknown"
        }
      },
      "EVMAccounts": {
        "AccountExtension": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMAccounts pallet",
          "returnType": "unknown"
        },
        "ContractDeployer": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMAccounts pallet",
          "returnType": "unknown"
        }
      },
      "Tokens": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        },
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        }
      },
      "UnknownTokens": {
        "ConcreteFungibleBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from UnknownTokens pallet",
          "returnType": "unknown"
        },
        "AbstractFungibleBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from UnknownTokens pallet",
          "returnType": "unknown"
        }
      },
      "ZenlinkProtocol": {
        "ForeignLedger": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "ForeignMeta": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "ForeignList": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "KLast": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "FeeMeta": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "FeeReceiver": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "LiquidityPairs": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "PairStatuses": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "BootstrapPersonalSupply": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "BootstrapEndStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "BootstrapRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        },
        "BootstrapLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from ZenlinkProtocol pallet",
          "returnType": "unknown"
        }
      },
      "Ismp": {
        "StateCommitments": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "ConsensusStates": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "ConsensusStateClient": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "UnbondingPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "ChallengePeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "FrozenConsensusClients": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "LatestStateMachineHeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "PreviousStateMachineHeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "ConsensusClientUpdateTime": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "StateMachineUpdateTime": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "Responded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "Nonce": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        },
        "ChildTrieRoot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ismp pallet",
          "returnType": "unknown"
        }
      },
      "IsmpParachain": {
        "RelayChainStateCommitments": {
          "required": [],
          "optional": [],
          "description": "Storage item from IsmpParachain pallet",
          "returnType": "unknown"
        },
        "ConsensusUpdated": {
          "required": [],
          "optional": [],
          "description": "Storage item from IsmpParachain pallet",
          "returnType": "unknown"
        },
        "Parachains": {
          "required": [],
          "optional": [],
          "description": "Storage item from IsmpParachain pallet",
          "returnType": "unknown"
        }
      },
      "Hyperbridge": {
        "HostParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hyperbridge pallet",
          "returnType": "unknown"
        }
      },
      "TokenGateway": {
        "SupportedAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenGateway pallet",
          "returnType": "unknown"
        },
        "NativeAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenGateway pallet",
          "returnType": "unknown"
        },
        "LocalAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenGateway pallet",
          "returnType": "unknown"
        },
        "Decimals": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenGateway pallet",
          "returnType": "unknown"
        },
        "TokenGatewayAddresses": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenGateway pallet",
          "returnType": "unknown"
        },
        "WhitelistAddresses": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenGateway pallet",
          "returnType": "unknown"
        }
      },
      "FlexibleFee": {
        "UniversalFeeCurrencyOrderList": {
          "required": [],
          "optional": [],
          "description": "Storage item from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "UserDefaultFeeCurrency": {
          "required": [],
          "optional": [],
          "description": "Storage item from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "ExtraFeeByCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from FlexibleFee pallet",
          "returnType": "unknown"
        }
      },
      "Salp": {
        "MultisigConfirmAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "CurrentTrieIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "CurrentNonce": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "QueryIdContributionInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "Funds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "RedeemPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "FailedFundsToRefund": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        },
        "ReserveInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from Salp pallet",
          "returnType": "unknown"
        }
      },
      "AssetRegistry": {
        "NextForeignAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "NextTokenId": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "CurrencyIdToLocations": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "LocationToCurrencyIds": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "CurrencyIdToWeights": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "AssetMetadatas": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "CurrencyMetadatas": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        }
      },
      "VtokenMinting": {
        "Fees": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "TokenPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "UnlockDuration": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "OngoingTimeUnit": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MinimumMint": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MinimumRedeem": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "TokenUnlockNextId": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "TokenUnlockLedger": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "UserUnlockLedger": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "TimeUnitUnlockLedger": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "TokenToRebond": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MinTimeUnit": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "UnlockingTotal": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "VtokenIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "HookIterationLimit": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "SupportedEth": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "EthUnlockNextId": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MintWithLockBlocks": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "VtokenIncentiveCoef": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "VtokenLockLedger": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenMinting pallet",
          "returnType": "unknown"
        }
      },
      "Slp": {
        "OperateOrigins": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "FeeSources": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "HostingFees": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegatorsIndex2Multilocation": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegatorsMultilocation2Index": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegatorNextIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "ValidatorBoostList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "ValidatorsByDelegator": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "ValidatorsByDelegatorXcmUpdateQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegatorLedgers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegatorLedgerXcmUpdateQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "MinimumsAndMaximums": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "CurrencyDelays": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegatorLatestTuneRecord": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "CurrencyLatestTuneRecord": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "CurrencyTuneExchangeRateLimit": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "DelegationsOccupied": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "LastTimeUpdatedOngoingTimeUnit": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "OngoingTimeUnitUpdateInterval": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        },
        "SupplementFeeAccountWhitelist": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slp pallet",
          "returnType": "unknown"
        }
      },
      "XcmInterface": {
        "XcmWeightAndFee": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmInterface pallet",
          "returnType": "unknown"
        }
      },
      "TokenConversion": {
        "RelaychainLease": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenConversion pallet",
          "returnType": "unknown"
        },
        "ExchangeRate": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenConversion pallet",
          "returnType": "unknown"
        },
        "ExchangeFee": {
          "required": [],
          "optional": [],
          "description": "Storage item from TokenConversion pallet",
          "returnType": "unknown"
        }
      },
      "Farming": {
        "PoolNextId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "GaugePoolNextId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "RetireLimit": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "PoolInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "GaugePoolInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "GaugeInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "SharesAndWithdrawnRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "BoostPoolInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "UserBoostInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "BoostWhitelist": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "BoostNextRoundWhitelist": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "BoostVotingPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "BoostBasicRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        },
        "UserFarmingPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from Farming pallet",
          "returnType": "unknown"
        }
      },
      "SystemStaking": {
        "Round": {
          "required": [],
          "optional": [],
          "description": "Storage item from SystemStaking pallet",
          "returnType": "unknown"
        },
        "TokenStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from SystemStaking pallet",
          "returnType": "unknown"
        },
        "TokenList": {
          "required": [],
          "optional": [],
          "description": "Storage item from SystemStaking pallet",
          "returnType": "unknown"
        }
      },
      "FeeShare": {
        "DistributionInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from FeeShare pallet",
          "returnType": "unknown"
        },
        "TokensProportions": {
          "required": [],
          "optional": [],
          "description": "Storage item from FeeShare pallet",
          "returnType": "unknown"
        },
        "DollarStandardInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from FeeShare pallet",
          "returnType": "unknown"
        },
        "DistributionNextId": {
          "required": [],
          "optional": [],
          "description": "Storage item from FeeShare pallet",
          "returnType": "unknown"
        },
        "AutoEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from FeeShare pallet",
          "returnType": "unknown"
        }
      },
      "CrossInOut": {
        "CrossCurrencyRegistry": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrossInOut pallet",
          "returnType": "unknown"
        },
        "IssueWhiteList": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrossInOut pallet",
          "returnType": "unknown"
        },
        "RegisterWhiteList": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrossInOut pallet",
          "returnType": "unknown"
        },
        "AccountToOuterMultilocation": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrossInOut pallet",
          "returnType": "unknown"
        },
        "OuterMultilocationToAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrossInOut pallet",
          "returnType": "unknown"
        },
        "CrossingMinimumAmount": {
          "required": [],
          "optional": [],
          "description": "Storage item from CrossInOut pallet",
          "returnType": "unknown"
        }
      },
      "BbBNC": {
        "Supply": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "BbConfigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "Epoch": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "Locked": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "UserLocked": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "PointHistory": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "UserPointHistory": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "UserPointEpoch": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "SlopeChanges": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "IncentiveConfigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "UserRewardPerTokenPaid": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "Rewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "UserMarkupInfos": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "LockedTokens": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "TotalLock": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "MarkupCoefficient": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "Position": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "UserPositions": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "ExpiringPositions": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "NextExpiringBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        },
        "PositionOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from BbBNC pallet",
          "returnType": "unknown"
        }
      },
      "Slpx": {
        "WhitelistAccountId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "ExecutionFee": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "TransferToFee": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "XcmEthereumCallConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "CurrencyIdList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "SupportXcmFeeList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "OrderQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "DelayBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "HyperBridgeOracle": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "HydrationOracle": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "AsyncMintConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "AsyncMintExecutions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        },
        "HyperBridgeFeeExemptAccounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slpx pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipCollective": {
        "MemberCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "IdToIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "IndexToId": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "VotingCleanup": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipReferenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        }
      },
      "StableAsset": {
        "PoolCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from StableAsset pallet",
          "returnType": "unknown"
        },
        "Pools": {
          "required": [],
          "optional": [],
          "description": "Storage item from StableAsset pallet",
          "returnType": "unknown"
        },
        "TokenRateCaches": {
          "required": [],
          "optional": [],
          "description": "Storage item from StableAsset pallet",
          "returnType": "unknown"
        },
        "TokenRateHardcap": {
          "required": [],
          "optional": [],
          "description": "Storage item from StableAsset pallet",
          "returnType": "unknown"
        }
      },
      "VtokenVoting": {
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "VotingForV2": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "PendingReferendumInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "PendingVotingInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "PendingRemoveDelegatorVote": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "Delegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "VoteCapRatio": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "DelegatorVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "PendingDelegatorVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "ReferendumTimeoutV3": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "VoteDelegatorFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "ReferendumVoteStatusStore": {
          "required": [],
          "optional": [],
          "description": "Storage item from VtokenVoting pallet",
          "returnType": "unknown"
        }
      },
      "LendMarket": {
        "LastAccruedInterestTime": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "LiquidationFreeCollaterals": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "TotalSupply": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "TotalBorrows": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "TotalReserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "AccountBorrows": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "AccountDeposits": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "AccountEarned": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "BorrowIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "ExchangeRate": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "BorrowRate": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "SupplyRate": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "UtilizationRatio": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "Markets": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "UnderlyingAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardSupplySpeed": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardBorrowSpeed": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardSupplyState": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardBorrowState": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardSupplierIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardBorrowerIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardAccured": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        },
        "MarketBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from LendMarket pallet",
          "returnType": "unknown"
        }
      },
      "Prices": {
        "EmergencyPrice": {
          "required": [],
          "optional": [],
          "description": "Storage item from Prices pallet",
          "returnType": "unknown"
        },
        "ForeignToNativeAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from Prices pallet",
          "returnType": "unknown"
        }
      },
      "Oracle": {
        "RawValues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Oracle pallet",
          "returnType": "unknown"
        },
        "Values": {
          "required": [],
          "optional": [],
          "description": "Storage item from Oracle pallet",
          "returnType": "unknown"
        },
        "HasDispatched": {
          "required": [],
          "optional": [],
          "description": "Storage item from Oracle pallet",
          "returnType": "unknown"
        }
      },
      "OracleMembership": {
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from OracleMembership pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from OracleMembership pallet",
          "returnType": "unknown"
        }
      },
      "ChannelCommission": {
        "ChannelNextId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "Channels": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "CommissionTokens": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "ChannelCommissionTokenRates": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "ChannelVtokenShares": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "VtokenIssuanceSnapshots": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "PeriodVtokenTotalMint": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "PeriodVtokenTotalRedeem": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "PeriodChannelVtokenMint": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "PeriodTotalCommissions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "PeriodClearedCommissions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "ChannelClaimableCommissions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChannelCommission pallet",
          "returnType": "unknown"
        }
      },
      "BuyBack": {
        "Infos": {
          "required": [],
          "optional": [],
          "description": "Storage item from BuyBack pallet",
          "returnType": "unknown"
        },
        "SwapOutMin": {
          "required": [],
          "optional": [],
          "description": "Storage item from BuyBack pallet",
          "returnType": "unknown"
        },
        "AddLiquiditySwapOutMin": {
          "required": [],
          "optional": [],
          "description": "Storage item from BuyBack pallet",
          "returnType": "unknown"
        }
      },
      "SlpV2": {
        "ConfigurationByStakingProtocol": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "DelegatorByStakingProtocolAndDelegatorIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "DelegatorIndexByStakingProtocolAndDelegator": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "LedgerByStakingProtocolAndDelegator": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "ValidatorsByStakingProtocolAndDelegator": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "NextDelegatorIndexByStakingProtocol": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "PendingStatusByQueryId": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "LastUpdateOngoingTimeUnitBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        },
        "LastUpdateTokenExchangeRateBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from SlpV2 pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "claim": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "free": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "set_validation_data": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        },
        "sudo_send_upward_message": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "TxPause": {
        "pause": {
          "parameters": [],
          "description": "Call from TxPause pallet",
          "returnType": "void"
        },
        "unpause": {
          "parameters": [],
          "description": "Call from TxPause pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "force_set_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_set_active_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_onboard_mbms": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "clear_historic": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "ParachainStaking": {
        "set_staking_expectations": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_inflation": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_parachain_bond_account": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_parachain_bond_reserve_percent": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_total_selected": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_collator_commission": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "set_blocks_per_round": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "join_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_leave_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_leave_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_leave_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "go_offline": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "go_online": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "candidate_bond_more": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_candidate_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_candidate_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_candidate_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_leave_delegators": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_leave_delegators": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_leave_delegators": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_revoke_delegation": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "delegator_bond_more": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "schedule_delegator_bond_less": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "execute_delegation_request": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "cancel_delegation_request": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        },
        "hotfix_remove_delegation_requests_exited_candidates": {
          "parameters": [],
          "description": "Call from ParachainStaking pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "suspend_xcm_execution": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "resume_xcm_execution": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_suspend_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_drop_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_resume_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "send": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "add_authorized_alias": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "remove_authorized_alias": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "remove_all_authorized_aliases": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "if_else": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as_fallible": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "add_registrar": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_subs": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "clear_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "request_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "cancel_request": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fee": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_account_id": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fields": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "provide_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "rename_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "quit_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_username_for": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "accept_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_expired_approval": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_primary_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "unbind_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "vest": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vest_other": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "init_vesting_start_at": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "set_vesting_per_block": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_set_cliff": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "merge_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "transact": {
          "parameters": [],
          "description": "Call from Ethereum pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "withdraw": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "call": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create2": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        }
      },
      "DynamicFee": {
        "note_min_gas_price_target": {
          "parameters": [],
          "description": "Call from DynamicFee pallet",
          "returnType": "void"
        }
      },
      "EVMAccounts": {
        "bind_evm_address": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "add_contract_deployer": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "remove_contract_deployer": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "renounce_contract_deployer": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        }
      },
      "XTokens": {
        "transfer": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiasset": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_with_fee": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiasset_with_fee": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multicurrencies": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiassets": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        }
      },
      "Tokens": {
        "transfer": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "set_balance": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        }
      },
      "OrmlXcm": {
        "send_as_sovereign": {
          "parameters": [],
          "description": "Call from OrmlXcm pallet",
          "returnType": "void"
        }
      },
      "ZenlinkProtocol": {
        "set_fee_receiver": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "set_fee_point": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "create_pair": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "remove_liquidity": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "swap_exact_assets_for_assets": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "swap_assets_for_exact_assets": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_create": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_contribute": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_claim": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_end": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_update": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_refund": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_charge_reward": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "bootstrap_withdraw_reward": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "set_new_fee_receiver": {
          "parameters": [],
          "description": "Call from ZenlinkProtocol pallet",
          "returnType": "void"
        }
      },
      "Ismp": {
        "handle_unsigned": {
          "parameters": [],
          "description": "Call from Ismp pallet",
          "returnType": "void"
        },
        "create_consensus_client": {
          "parameters": [],
          "description": "Call from Ismp pallet",
          "returnType": "void"
        },
        "update_consensus_state": {
          "parameters": [],
          "description": "Call from Ismp pallet",
          "returnType": "void"
        },
        "fund_message": {
          "parameters": [],
          "description": "Call from Ismp pallet",
          "returnType": "void"
        }
      },
      "IsmpParachain": {
        "update_parachain_consensus": {
          "parameters": [],
          "description": "Call from IsmpParachain pallet",
          "returnType": "void"
        },
        "add_parachain": {
          "parameters": [],
          "description": "Call from IsmpParachain pallet",
          "returnType": "void"
        },
        "remove_parachain": {
          "parameters": [],
          "description": "Call from IsmpParachain pallet",
          "returnType": "void"
        }
      },
      "TokenGateway": {
        "teleport": {
          "parameters": [],
          "description": "Call from TokenGateway pallet",
          "returnType": "void"
        },
        "set_token_gateway_addresses": {
          "parameters": [],
          "description": "Call from TokenGateway pallet",
          "returnType": "void"
        },
        "create_erc6160_asset": {
          "parameters": [],
          "description": "Call from TokenGateway pallet",
          "returnType": "void"
        },
        "update_erc6160_asset": {
          "parameters": [],
          "description": "Call from TokenGateway pallet",
          "returnType": "void"
        },
        "set_whitelist_addresses": {
          "parameters": [],
          "description": "Call from TokenGateway pallet",
          "returnType": "void"
        }
      },
      "FlexibleFee": {
        "set_user_default_fee_currency": {
          "parameters": [],
          "description": "Call from FlexibleFee pallet",
          "returnType": "void"
        },
        "set_default_fee_currency_list": {
          "parameters": [],
          "description": "Call from FlexibleFee pallet",
          "returnType": "void"
        },
        "set_extra_fee": {
          "parameters": [],
          "description": "Call from FlexibleFee pallet",
          "returnType": "void"
        },
        "dispatch_permit": {
          "parameters": [],
          "description": "Call from FlexibleFee pallet",
          "returnType": "void"
        }
      },
      "Salp": {
        "fund_retire": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "fund_end": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "edit": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "redeem": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "dissolve_refunded": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        },
        "buyback_vstoken_by_stable_pool": {
          "parameters": [],
          "description": "Call from Salp pallet",
          "returnType": "void"
        }
      },
      "AssetRegistry": {
        "register_token_metadata": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "register_vtoken_metadata": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "register_location": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "force_set_location": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "update_currency_metadata": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        }
      },
      "VtokenMinting": {
        "mint": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "redeem": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "rebond": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "rebond_by_unlock_id": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_unlock_duration": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_minimum_mint": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_minimum_redeem": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "add_support_rebond_token": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "remove_support_rebond_token": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_fees": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_hook_iteration_limit": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_unlocking_total": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_min_time_unit": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_ongoing_time_unit": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "mint_with_lock": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "unlock_incentive_minted_vtoken": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_incentive_coef": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_vtoken_incentive_lock_blocks": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_supported_eth": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        },
        "set_v_currency_issuance": {
          "parameters": [],
          "description": "Call from VtokenMinting pallet",
          "returnType": "void"
        }
      },
      "Slp": {
        "initialize_delegator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "bond": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "unbond_all": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "rebond": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "redelegate": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "liquidize": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "transfer_back": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "transfer_to": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "convert_asset": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "increase_token_pool": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "decrease_token_pool": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "update_ongoing_time_unit": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "refund_currency_due_unbond": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "supplement_fee_reserve": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "charge_host_fee_and_tune_vtoken_exchange_rate": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_operate_origin": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_fee_source": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "add_delegator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "remove_delegator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "add_validator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "remove_validator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_validators_by_delegator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_delegator_ledger": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_minimums_and_maximums": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_currency_delays": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_hosting_fees": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_currency_tune_exchange_rate_limit": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_ongoing_time_unit_update_interval": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "add_supplement_fee_account_to_whitelist": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "remove_supplement_fee_account_from_whitelist": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "confirm_delegator_ledger_query_response": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "fail_delegator_ledger_query_response": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "confirm_validators_by_delegator_query_response": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "fail_validators_by_delegator_query_response": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "confirm_delegator_ledger": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "confirm_validators_by_delegator": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "reset_validators": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "set_validator_boost_list": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "add_to_validator_boost_list": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "remove_from_validator_boot_list": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "convert_treasury_vtoken": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        },
        "clean_outdated_validator_boost_list": {
          "parameters": [],
          "description": "Call from Slp pallet",
          "returnType": "void"
        }
      },
      "XcmInterface": {
        "update_xcm_dest_weight_and_fee": {
          "parameters": [],
          "description": "Call from XcmInterface pallet",
          "returnType": "void"
        },
        "transfer_ethereum_assets": {
          "parameters": [],
          "description": "Call from XcmInterface pallet",
          "returnType": "void"
        }
      },
      "TokenConversion": {
        "vsbond_convert_to_vstoken": {
          "parameters": [],
          "description": "Call from TokenConversion pallet",
          "returnType": "void"
        },
        "vstoken_convert_to_vsbond": {
          "parameters": [],
          "description": "Call from TokenConversion pallet",
          "returnType": "void"
        },
        "set_exchange_fee": {
          "parameters": [],
          "description": "Call from TokenConversion pallet",
          "returnType": "void"
        },
        "set_exchange_rate": {
          "parameters": [],
          "description": "Call from TokenConversion pallet",
          "returnType": "void"
        },
        "set_relaychain_lease": {
          "parameters": [],
          "description": "Call from TokenConversion pallet",
          "returnType": "void"
        }
      },
      "Farming": {
        "create_farming_pool": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "charge": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "deposit": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "claim": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "withdraw_claim": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "force_retire_pool": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "set_retire_limit": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "close_pool": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "reset_pool": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "kill_pool": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "edit_pool": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "force_gauge_claim": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "add_boost_pool_whitelist": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "set_next_round_whitelist": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "start_boost_round": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "end_boost_round": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "charge_boost": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        },
        "refresh": {
          "parameters": [],
          "description": "Call from Farming pallet",
          "returnType": "void"
        }
      },
      "SystemStaking": {
        "token_config": {
          "parameters": [],
          "description": "Call from SystemStaking pallet",
          "returnType": "void"
        },
        "delete_token": {
          "parameters": [],
          "description": "Call from SystemStaking pallet",
          "returnType": "void"
        },
        "refresh_token_info": {
          "parameters": [],
          "description": "Call from SystemStaking pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from SystemStaking pallet",
          "returnType": "void"
        }
      },
      "FeeShare": {
        "create_distribution": {
          "parameters": [],
          "description": "Call from FeeShare pallet",
          "returnType": "void"
        },
        "edit_distribution": {
          "parameters": [],
          "description": "Call from FeeShare pallet",
          "returnType": "void"
        },
        "set_era_length": {
          "parameters": [],
          "description": "Call from FeeShare pallet",
          "returnType": "void"
        },
        "execute_distribute": {
          "parameters": [],
          "description": "Call from FeeShare pallet",
          "returnType": "void"
        },
        "delete_distribution": {
          "parameters": [],
          "description": "Call from FeeShare pallet",
          "returnType": "void"
        },
        "set_usd_config": {
          "parameters": [],
          "description": "Call from FeeShare pallet",
          "returnType": "void"
        }
      },
      "CrossInOut": {
        "cross_out": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        },
        "register_linked_account": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        },
        "change_outer_linked_account": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        },
        "deregister_currency_for_cross_in_out": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        },
        "add_to_register_whitelist": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        },
        "remove_from_register_whitelist": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        },
        "set_crossing_minimum_amount": {
          "parameters": [],
          "description": "Call from CrossInOut pallet",
          "returnType": "void"
        }
      },
      "BbBNC": {
        "set_config": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "create_lock": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "increase_amount": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "increase_unlock_time": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "notify_rewards": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "get_rewards": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "redeem_unlock": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "set_markup_coefficient": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "deposit_markup": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "withdraw_markup": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        },
        "refresh": {
          "parameters": [],
          "description": "Call from BbBNC pallet",
          "returnType": "void"
        }
      },
      "Slpx": {
        "mint": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "redeem": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "add_whitelist": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "remove_whitelist": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_execution_fee": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_transfer_to_fee": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "support_xcm_oracle": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_xcm_oracle_configuration": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_currency_support_xcm_fee": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_delay_block": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "force_add_order": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "mint_with_channel_id": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "evm_create_order": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_hyperbridge_oracle": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_hydration_oracle": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "async_mint": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "update_async_mint_config": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "force_increase_hyperbridge_reserve": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        },
        "set_hyperbridge_fee_exempt_accounts": {
          "parameters": [],
          "description": "Call from Slpx pallet",
          "returnType": "void"
        }
      },
      "FellowshipCollective": {
        "add_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "promote_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "demote_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "cleanup_poll": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "exchange_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        }
      },
      "FellowshipReferenda": {
        "submit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        }
      },
      "StablePool": {
        "create_pool": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "swap": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "redeem_proportion": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "redeem_single": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "redeem_multi": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "modify_a": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "modify_fees": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "modify_recipients": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "edit_token_rate": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "config_vtoken_auto_refresh": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        },
        "remove_vtoken_auto_refresh": {
          "parameters": [],
          "description": "Call from StablePool pallet",
          "returnType": "void"
        }
      },
      "VtokenVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "remove_delegator_vote": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "kill_referendum": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "add_delegator": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "set_referendum_status": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "set_vote_locking_period": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "set_undeciding_timeout": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "notify_vote": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "notify_remove_delegator_vote": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "set_vote_cap_ratio": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "update_referendum_vote_status": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        },
        "delegate_vote": {
          "parameters": [],
          "description": "Call from VtokenVoting pallet",
          "returnType": "void"
        }
      },
      "LendMarket": {
        "add_market": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "activate_market": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "update_rate_model": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "update_market": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "force_update_market": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "add_reward": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "withdraw_missing_reward": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "update_market_reward_speed": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "claim_reward": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "claim_reward_for_market": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "redeem": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "redeem_all": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "borrow": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "repay_borrow": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "repay_borrow_all": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "collateral_asset": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "liquidate_borrow": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "add_reserves": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "reduce_reserves": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "reduce_incentive_reserves": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "update_liquidation_free_collateral": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        },
        "add_market_bond": {
          "parameters": [],
          "description": "Call from LendMarket pallet",
          "returnType": "void"
        }
      },
      "Prices": {
        "set_price": {
          "parameters": [],
          "description": "Call from Prices pallet",
          "returnType": "void"
        },
        "reset_price": {
          "parameters": [],
          "description": "Call from Prices pallet",
          "returnType": "void"
        },
        "set_foreign_asset": {
          "parameters": [],
          "description": "Call from Prices pallet",
          "returnType": "void"
        }
      },
      "Oracle": {
        "feed_values": {
          "parameters": [],
          "description": "Call from Oracle pallet",
          "returnType": "void"
        }
      },
      "OracleMembership": {
        "add_member": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "swap_member": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "reset_members": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "change_key": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "set_prime": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "clear_prime": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        }
      },
      "LeverageStaking": {
        "flash_loan_deposit": {
          "parameters": [],
          "description": "Call from LeverageStaking pallet",
          "returnType": "void"
        }
      },
      "ChannelCommission": {
        "register_channel": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        },
        "remove_channel": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        },
        "update_channel_receive_account": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        },
        "set_channel_commission_token": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        },
        "set_commission_tokens": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        },
        "claim_commissions": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        },
        "set_channel_vtoken_shares": {
          "parameters": [],
          "description": "Call from ChannelCommission pallet",
          "returnType": "void"
        }
      },
      "CloudsConvert": {
        "clouds_to_vebnc": {
          "parameters": [],
          "description": "Call from CloudsConvert pallet",
          "returnType": "void"
        },
        "charge_vbnc": {
          "parameters": [],
          "description": "Call from CloudsConvert pallet",
          "returnType": "void"
        }
      },
      "BuyBack": {
        "set_vtoken": {
          "parameters": [],
          "description": "Call from BuyBack pallet",
          "returnType": "void"
        },
        "charge": {
          "parameters": [],
          "description": "Call from BuyBack pallet",
          "returnType": "void"
        },
        "remove_vtoken": {
          "parameters": [],
          "description": "Call from BuyBack pallet",
          "returnType": "void"
        }
      },
      "SlpV2": {
        "set_protocol_configuration": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "add_delegator": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "remove_delegator": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "add_validator": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "remove_validator": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "set_ledger": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "transfer_to": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "transfer_back": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "update_ongoing_time_unit": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "update_token_exchange_rate": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "astar_dapp_staking": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "notify_astar_dapp_staking": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        },
        "ethereum_staking": {
          "parameters": [],
          "description": "Call from SlpV2 pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "RejectedInvalidAuthorizedUpgrade": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "IndexAssigned": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFreed": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFrozen": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "ValidationFunctionStored": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionApplied": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionDiscarded": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesProcessed": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "UpwardMessageSent": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "TxPause": {
        "CallPaused": {
          "fields": [],
          "description": "Event from TxPause pallet",
          "returnType": "void"
        },
        "CallUnpaused": {
          "fields": [],
          "description": "Event from TxPause pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "UpgradeStarted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationSkipped": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationAdvanced": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "HistoricCleared": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorDisabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorReenabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "ParachainStaking": {
        "NewRound": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "JoinedCollatorCandidates": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CollatorChosen": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBondLessRequested": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBondedMore": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBondedLess": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateWentOffline": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateBackOnline": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateScheduledExit": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CancelledCandidateExit": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CancelledCandidateBondLess": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CandidateLeft": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationDecreaseScheduled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationIncreased": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationDecreased": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorExitScheduled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationRevocationScheduled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorLeft": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationRevoked": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegationKicked": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorExitCancelled": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CancelledDelegationRequest": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "Delegation": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "DelegatorLeftCandidate": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "ReservedForParachainBond": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "ParachainBondAccountSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "ParachainBondReservePercentSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "InflationSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "StakeExpectationsSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "TotalSelectedSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "CollatorCommissionSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        },
        "BlocksPerRoundSet": {
          "fields": [],
          "description": "Event from ParachainStaking pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteUnlocked": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "XcmpMessageSent": {
          "fields": [],
          "description": "Event from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "Attempted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SendFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ProcessXcmError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AliasAuthorized": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AliasAuthorizationRemoved": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AliasesAuthorizationsRemoved": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "CumulusXcm": {
        "InvalidFormat": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "UnsupportedVersion": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "ExecutedDownward": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseMainSuccess": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseFallbackCalled": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "AgendaIncomplete": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "IdentitySet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityCleared": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementRequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementUnrequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementGiven": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "RegistrarAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentitiesSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRenamed": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRevoked": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameQueued": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PreapprovalExpired": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PrimaryUsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "DanglingUsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameUnbound": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingCompleted": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "Executed": {
          "fields": [],
          "description": "Event from Ethereum pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "Log": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Created": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "CreatedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "ExecutedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        }
      },
      "EVMAccounts": {
        "Bound": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        },
        "DeployerAdded": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        },
        "DeployerRemoved": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        }
      },
      "XTokens": {
        "TransferredAssets": {
          "fields": [],
          "description": "Event from XTokens pallet",
          "returnType": "void"
        }
      },
      "Tokens": {
        "Endowed": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "TotalIssuanceSet": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "LockSet": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "LockRemoved": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        }
      },
      "UnknownTokens": {
        "Deposited": {
          "fields": [],
          "description": "Event from UnknownTokens pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from UnknownTokens pallet",
          "returnType": "void"
        }
      },
      "OrmlXcm": {
        "Sent": {
          "fields": [],
          "description": "Event from OrmlXcm pallet",
          "returnType": "void"
        }
      },
      "ZenlinkProtocol": {
        "Transferred": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "PairCreated": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "LiquidityRemoved": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "AssetSwap": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "TransferredToParachain": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "BootstrapContribute": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "BootstrapEnd": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "BootstrapCreated": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "BootstrapClaim": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "BootstrapUpdate": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "BootstrapRefund": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "DistributeReward": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "ChargeReward": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        },
        "WithdrawReward": {
          "fields": [],
          "description": "Event from ZenlinkProtocol pallet",
          "returnType": "void"
        }
      },
      "Ismp": {
        "StateMachineUpdated": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "StateCommitmentVetoed": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "ConsensusClientCreated": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "ConsensusClientFrozen": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "Response": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "Request": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "Errors": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "PostRequestHandled": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "PostResponseHandled": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "GetRequestHandled": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "PostRequestTimeoutHandled": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "PostResponseTimeoutHandled": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        },
        "GetRequestTimeoutHandled": {
          "fields": [],
          "description": "Event from Ismp pallet",
          "returnType": "void"
        }
      },
      "IsmpParachain": {
        "ParachainsAdded": {
          "fields": [],
          "description": "Event from IsmpParachain pallet",
          "returnType": "void"
        },
        "ParachainsRemoved": {
          "fields": [],
          "description": "Event from IsmpParachain pallet",
          "returnType": "void"
        }
      },
      "Hyperbridge": {
        "HostParamsUpdated": {
          "fields": [],
          "description": "Event from Hyperbridge pallet",
          "returnType": "void"
        },
        "RelayerFeeWithdrawn": {
          "fields": [],
          "description": "Event from Hyperbridge pallet",
          "returnType": "void"
        },
        "ProtocolRevenueWithdrawn": {
          "fields": [],
          "description": "Event from Hyperbridge pallet",
          "returnType": "void"
        }
      },
      "TokenGateway": {
        "AssetTeleported": {
          "fields": [],
          "description": "Event from TokenGateway pallet",
          "returnType": "void"
        },
        "AssetReceived": {
          "fields": [],
          "description": "Event from TokenGateway pallet",
          "returnType": "void"
        },
        "AssetRefunded": {
          "fields": [],
          "description": "Event from TokenGateway pallet",
          "returnType": "void"
        },
        "ERC6160AssetRegistrationDispatched": {
          "fields": [],
          "description": "Event from TokenGateway pallet",
          "returnType": "void"
        },
        "WhitelistReset": {
          "fields": [],
          "description": "Event from TokenGateway pallet",
          "returnType": "void"
        }
      },
      "FlexibleFee": {
        "TransferTo": {
          "fields": [],
          "description": "Event from FlexibleFee pallet",
          "returnType": "void"
        },
        "SetDefaultFeeCurrency": {
          "fields": [],
          "description": "Event from FlexibleFee pallet",
          "returnType": "void"
        },
        "SetFeeCurrencyList": {
          "fields": [],
          "description": "Event from FlexibleFee pallet",
          "returnType": "void"
        },
        "SetExtraFee": {
          "fields": [],
          "description": "Event from FlexibleFee pallet",
          "returnType": "void"
        }
      },
      "Salp": {
        "Created": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Contributing": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Contributed": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "ContributeFailed": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Withdrew": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Refunded": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "AllRefunded": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Redeemed": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Edited": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Dissolved": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "AllUnlocked": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Failed": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Success": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Retired": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "End": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Continued": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "RefundedDissolved": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Buyback": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "VstokenUnlocked": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "BuybackByStablePool": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "ReservationCancelled": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "ReservationFullyHandled": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        },
        "ReservationHandled": {
          "fields": [],
          "description": "Event from Salp pallet",
          "returnType": "void"
        }
      },
      "AssetRegistry": {
        "AssetRegistered": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "AssetUpdated": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "CurrencyIdRegistered": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "LocationSet": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "CurrencyIdUpdated": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        }
      },
      "VtokenMinting": {
        "Minted": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "Redeemed": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "RedeemSuccess": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "Rebonded": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "RebondedByUnlockId": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "UnlockDurationSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "MinimumMintSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "MinimumRedeemSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "SupportRebondTokenAdded": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "SupportRebondTokenRemoved": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "FeeSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "HookIterationLimitSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "UnlockingTotalSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "MinTimeUnitSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "FastRedeemFailed": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "SetOngoingTimeUnit": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "IncentivizedMinting": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "VtokenIncentiveCoefSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "VtokenIncentiveLockBlocksSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "SupportedEthSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        },
        "VtokenIssuanceSet": {
          "fields": [],
          "description": "Event from VtokenMinting pallet",
          "returnType": "void"
        }
      },
      "Slp": {
        "DelegatorInitialized": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorBonded": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorBondExtra": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorUnbond": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorUnbondAll": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorRebond": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "Delegated": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "Payout": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "Liquidize": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "Chill": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "TransferBack": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "TransferTo": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ConvertAsset": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorAdded": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorRemoved": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorsAdded": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorsRemoved": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "Refund": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "FundMoveFromExitToEntrance": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "TimeUnitUpdated": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "PoolTokenIncreased": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "HostingFeeCharged": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "PoolTokenDecreased": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "FeeSupplemented": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorsByDelegatorSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "OperateOriginSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "FeeSourceSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorLedgerSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorLedgerQueryResponseConfirmed": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "DelegatorLedgerQueryResponseFailed": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorsByDelegatorQueryResponseConfirmed": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorsByDelegatorQueryResponseFailed": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "MinimumsMaximumsSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "CurrencyDelaysSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "HostingFeesSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "CurrencyTuneExchangeRateLimitSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "OngoingTimeUnitUpdateIntervalSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "SupplementFeeAccountWhitelistAdded": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "SupplementFeeAccountWhitelistRemoved": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorsReset": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorBoostListSet": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "ValidatorBoostListAdded": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "RemovedFromBoostList": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "OutdatedValidatorBoostListCleaned": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        },
        "BurnFeeFailed": {
          "fields": [],
          "description": "Event from Slp pallet",
          "returnType": "void"
        }
      },
      "XcmInterface": {
        "XcmDestWeightAndFeeUpdated": {
          "fields": [],
          "description": "Event from XcmInterface pallet",
          "returnType": "void"
        },
        "TransferredEthereumAssets": {
          "fields": [],
          "description": "Event from XcmInterface pallet",
          "returnType": "void"
        }
      },
      "TokenConversion": {
        "VsbondConvertToVsksm": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "VsksmConvertToVsbond": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "VsbondConvertToVsdot": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "VsdotConvertToVsbond": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "VsbondConvertToVstoken": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "VstokenConvertToVsbond": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "ExchangeFeeSet": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "ExchangeRateSet": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        },
        "RelaychainLeaseSet": {
          "fields": [],
          "description": "Event from TokenConversion pallet",
          "returnType": "void"
        }
      },
      "Farming": {
        "FarmingPoolCreated": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "FarmingPoolReset": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "FarmingPoolClosed": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "FarmingPoolKilled": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "FarmingPoolEdited": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "Charged": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "Claimed": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "WithdrawClaimed": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "GaugeWithdrawn": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "AllForceGaugeClaimed": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "PartiallyForceGaugeClaimed": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "AllRetired": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "PartiallyRetired": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "RetireLimitSet": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "RoundEnd": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "RoundStartError": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "RoundStart": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        },
        "BoostCharged": {
          "fields": [],
          "description": "Event from Farming pallet",
          "returnType": "void"
        }
      },
      "SystemStaking": {
        "NewRound": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "TokenConfigChanged": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "DepositFailed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "MintSuccess": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "MintFailed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "WithdrawSuccess": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "WithdrawFailed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "Redeemed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "RedeemFailed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "VtokenNotFound": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "TokenInfoRefreshed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "Payout": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        },
        "PayoutFailed": {
          "fields": [],
          "description": "Event from SystemStaking pallet",
          "returnType": "void"
        }
      },
      "FeeShare": {
        "Created": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        },
        "Edited": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        },
        "EraLengthSet": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        },
        "Deleted": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        },
        "ExecuteFailed": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        },
        "USDConfigSet": {
          "fields": [],
          "description": "Event from FeeShare pallet",
          "returnType": "void"
        }
      },
      "CrossInOut": {
        "CrossedOut": {
          "fields": [],
          "description": "Event from CrossInOut pallet",
          "returnType": "void"
        },
        "CurrencyDeregistered": {
          "fields": [],
          "description": "Event from CrossInOut pallet",
          "returnType": "void"
        },
        "LinkedAccountRegistered": {
          "fields": [],
          "description": "Event from CrossInOut pallet",
          "returnType": "void"
        },
        "AddedToRegisterList": {
          "fields": [],
          "description": "Event from CrossInOut pallet",
          "returnType": "void"
        },
        "RemovedFromRegisterList": {
          "fields": [],
          "description": "Event from CrossInOut pallet",
          "returnType": "void"
        },
        "CrossingMinimumAmountSet": {
          "fields": [],
          "description": "Event from CrossInOut pallet",
          "returnType": "void"
        }
      },
      "BbBNC": {
        "ConfigSet": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "Supply": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "LockCreated": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "UnlockTimeIncreased": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "AmountIncreased": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "IncentiveSet": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "RewardAdded": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "AllRefreshed": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "PartiallyRefreshed": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "NotifyRewardFailed": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "MarkupDeposited": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        },
        "MarkupWithdrawn": {
          "fields": [],
          "description": "Event from BbBNC pallet",
          "returnType": "void"
        }
      },
      "Slpx": {
        "AddWhitelistAccountId": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "RemoveWhitelistAccountId": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetTransferToFee": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetExecutionFee": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SupportXcmOracle": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetXcmOracleConfiguration": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "XcmOracle": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetCurrencyToSupportXcmFee": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetDelayBlock": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "CreateOrder": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "OrderHandled": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "OrderFailed": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "XcmOracleFailed": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "InsufficientAssets": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetHyperBridgeOracleConfig": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "SetHydrationOracleConfig": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "AsyncMintExecuted": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "AsyncMintConfigUpdated": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        },
        "AsyncMintExecutionFailed": {
          "fields": [],
          "description": "Event from Slpx pallet",
          "returnType": "void"
        }
      },
      "FellowshipCollective": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "RankChanged": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "MemberExchanged": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        }
      },
      "FellowshipReferenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        }
      },
      "StableAsset": {
        "CreatePool": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "TokenSwapped": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "RedeemedProportion": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "RedeemedSingle": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "RedeemedMulti": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "BalanceUpdated": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "YieldCollected": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "FeeCollected": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "AModified": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "FeeModified": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "RecipientModified": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "TokenRateSet": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "TokenRateHardcapConfigured": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "TokenRateHardcapRemoved": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "TokenRateRefreshFailed": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        },
        "RateAdjustmentLimited": {
          "fields": [],
          "description": "Event from StableAsset pallet",
          "returnType": "void"
        }
      },
      "VtokenVoting": {
        "Voted": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "DelegatorVoteRemoved": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "DelegatorAdded": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "ReferendumInfoCreated": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "ReferendumInfoSet": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "VoteLockingPeriodSet": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "UndecidingTimeoutSet": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "ReferendumKilled": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "VoteNotified": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "DelegatorVoteRemovedNotified": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "ResponseReceived": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "VoteCapRatioSet": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "ReferendumStatusUpdated": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "Delegated": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from VtokenVoting pallet",
          "returnType": "void"
        }
      },
      "LendMarket": {
        "CollateralAssetAdded": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "CollateralAssetRemoved": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "Redeemed": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "Borrowed": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "RepaidBorrow": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "LiquidatedBorrow": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "ReservesReduced": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "ReservesAdded": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "NewMarket": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "ActivatedMarket": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "UpdatedMarket": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "RewardAdded": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "RewardWithdrawn": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "MarketRewardSpeedUpdated": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "DistributedSupplierReward": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "DistributedBorrowerReward": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "RewardPaid": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "IncentiveReservesReduced": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "LiquidationFreeCollateralsUpdated": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        },
        "MarketBonded": {
          "fields": [],
          "description": "Event from LendMarket pallet",
          "returnType": "void"
        }
      },
      "Prices": {
        "SetPrice": {
          "fields": [],
          "description": "Event from Prices pallet",
          "returnType": "void"
        },
        "ResetPrice": {
          "fields": [],
          "description": "Event from Prices pallet",
          "returnType": "void"
        }
      },
      "Oracle": {
        "NewFeedData": {
          "fields": [],
          "description": "Event from Oracle pallet",
          "returnType": "void"
        },
        "FeedValueReachingLimit": {
          "fields": [],
          "description": "Event from Oracle pallet",
          "returnType": "void"
        }
      },
      "OracleMembership": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "MembersSwapped": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "MembersReset": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "Dummy": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        }
      },
      "LeverageStaking": {
        "FlashLoanDeposited": {
          "fields": [],
          "description": "Event from LeverageStaking pallet",
          "returnType": "void"
        }
      },
      "ChannelCommission": {
        "ChannelRegistered": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "ChannelRemoved": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "ChannelReceiveAccountUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "CommissionTokenSet": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "ChannelCommissionSet": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "CommissionClaimed": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "ChannelVtokenSharesUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "VtokenIssuanceSnapshotUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "PeriodVtokenTotalMintUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "PeriodVtokenTotalRedeemUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "PeriodChannelVtokenMintUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "PeriodTotalCommissionsUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "ChannelClaimableCommissionUpdated": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "CalculationFailed": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "BifrostCommissionTransferFailed": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "RemovalNotCompleteError": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        },
        "SetClearingEnvironmentFailed": {
          "fields": [],
          "description": "Event from ChannelCommission pallet",
          "returnType": "void"
        }
      },
      "CloudsConvert": {
        "CloudsConverted": {
          "fields": [],
          "description": "Event from CloudsConvert pallet",
          "returnType": "void"
        },
        "VbncCharged": {
          "fields": [],
          "description": "Event from CloudsConvert pallet",
          "returnType": "void"
        }
      },
      "BuyBack": {
        "Charged": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "ConfigSet": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "Removed": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "BuyBackFailed": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "BuyBackSuccess": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "AddLiquidityFailed": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "AddLiquiditySuccess": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "SetSwapOutMinFailed": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        },
        "SetSwapOutMinSuccess": {
          "fields": [],
          "description": "Event from BuyBack pallet",
          "returnType": "void"
        }
      },
      "SlpV2": {
        "AddDelegator": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "RemoveDelegator": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "AddValidator": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "RemoveValidator": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "SetConfiguration": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "SetLedger": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "SendXcmTask": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "NotifyResponseReceived": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "TimeUnitUpdated": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "TokenExchangeRateUpdated": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "TransferTo": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "TransferBack": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        },
        "EthereumStaking": {
          "fields": [],
          "description": "Event from SlpV2 pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from Indices pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "SelfParaId": {
          "type": "unknown",
          "description": "Constant from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "TxPause": {
        "MaxNameLen": {
          "type": "unknown",
          "description": "Constant from TxPause pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "CursorMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "IdentifierMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "SlotDuration": {
          "type": "unknown",
          "description": "Constant from Aura pallet",
          "returnType": "unknown"
        }
      },
      "ParachainStaking": {
        "MinBlocksPerRound": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "LeaveCandidatesDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "CandidateBondLessDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "LeaveDelegatorsDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "RevokeDelegationDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "DelegationBondLessDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "RewardPaymentDelay": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinSelectedCandidates": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxTopDelegationsPerCandidate": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxBottomDelegationsPerCandidate": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MaxDelegationsPerDelegator": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinCollatorStk": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinCandidateStk": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinDelegation": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "MinDelegatorStk": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "AllowInflation": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "PaymentInRound": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "ToMigrateInvulnables": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "InitSeedStk": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from ParachainStaking pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "MaxInboundSuspended": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxActiveOutboundChannels": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxPageSize": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "UniversalLocation": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AdvertisedXcmVersion": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "MaxLockers": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "MaxRemoteLockConsumers": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "BasicDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "ByteDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "SubAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSubAccounts": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxRegistrars": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernameExpiration": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameGracePeriod": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSuffixLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxUsernameLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        },
        "MaxVestingSchedules": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "pot_account": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "EVMAccounts": {
        "FeeMultiplier": {
          "type": "unknown",
          "description": "Constant from EVMAccounts pallet",
          "returnType": "unknown"
        }
      },
      "XTokens": {
        "SelfLocation": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        },
        "BaseXcmWeight": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        },
        "RateLimiterId": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        }
      },
      "Tokens": {
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Tokens pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Tokens pallet",
          "returnType": "unknown"
        }
      },
      "Currencies": {
        "GetNativeCurrencyId": {
          "type": "unknown",
          "description": "Constant from Currencies pallet",
          "returnType": "unknown"
        }
      },
      "ZenlinkProtocol": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from ZenlinkProtocol pallet",
          "returnType": "unknown"
        }
      },
      "TokenGateway": {
        "MaxLengthLimit": {
          "type": "unknown",
          "description": "Constant from TokenGateway pallet",
          "returnType": "unknown"
        }
      },
      "FlexibleFee": {
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "MaxFeeCurrencyOrderListLen": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "MinAssetHubExecutionFee": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "MinRelaychainExecutionFee": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "RelaychainCurrencyId": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "ParachainId": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        },
        "AllowVBNCAsFee": {
          "type": "unknown",
          "description": "Constant from FlexibleFee pallet",
          "returnType": "unknown"
        }
      },
      "Salp": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "MinContribution": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "RelayChainToken": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "LeasePeriod": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "VSBondValidPeriod": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "ReleaseCycle": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "ReleaseRatio": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "RemoveKeysLimit": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "SlotLength": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        },
        "BuybackPalletId": {
          "type": "unknown",
          "description": "Constant from Salp pallet",
          "returnType": "unknown"
        }
      },
      "VtokenMinting": {
        "MaximumUnlockIdOfUser": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MaximumUnlockIdOfTimeUnit": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MaxLockRecords": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "EntranceAccount": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "ExitAccount": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "FeeAccount": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "RedeemFeeAccount": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "IncentivePoolAccount": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "RelayChainToken": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        },
        "MoonbeamChainId": {
          "type": "unknown",
          "description": "Constant from VtokenMinting pallet",
          "returnType": "unknown"
        }
      },
      "Slp": {
        "MaxTypeEntryPerBlock": {
          "type": "unknown",
          "description": "Constant from Slp pallet",
          "returnType": "unknown"
        },
        "MaxRefundPerBlock": {
          "type": "unknown",
          "description": "Constant from Slp pallet",
          "returnType": "unknown"
        },
        "MaxLengthLimit": {
          "type": "unknown",
          "description": "Constant from Slp pallet",
          "returnType": "unknown"
        },
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from Slp pallet",
          "returnType": "unknown"
        }
      },
      "XcmInterface": {
        "ParachainId": {
          "type": "unknown",
          "description": "Constant from XcmInterface pallet",
          "returnType": "unknown"
        }
      },
      "TokenConversion": {
        "RelayCurrencyId": {
          "type": "unknown",
          "description": "Constant from TokenConversion pallet",
          "returnType": "unknown"
        },
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from TokenConversion pallet",
          "returnType": "unknown"
        },
        "VsbondAccount": {
          "type": "unknown",
          "description": "Constant from TokenConversion pallet",
          "returnType": "unknown"
        }
      },
      "Farming": {
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from Farming pallet",
          "returnType": "unknown"
        },
        "Keeper": {
          "type": "unknown",
          "description": "Constant from Farming pallet",
          "returnType": "unknown"
        },
        "RewardIssuer": {
          "type": "unknown",
          "description": "Constant from Farming pallet",
          "returnType": "unknown"
        },
        "FarmingBoost": {
          "type": "unknown",
          "description": "Constant from Farming pallet",
          "returnType": "unknown"
        },
        "WhitelistMaximumLimit": {
          "type": "unknown",
          "description": "Constant from Farming pallet",
          "returnType": "unknown"
        },
        "GaugeRewardIssuer": {
          "type": "unknown",
          "description": "Constant from Farming pallet",
          "returnType": "unknown"
        }
      },
      "SystemStaking": {
        "BenefitReceivingAccount": {
          "type": "unknown",
          "description": "Constant from SystemStaking pallet",
          "returnType": "unknown"
        },
        "MaxTokenLen": {
          "type": "unknown",
          "description": "Constant from SystemStaking pallet",
          "returnType": "unknown"
        },
        "MaxFarmingPoolIdLen": {
          "type": "unknown",
          "description": "Constant from SystemStaking pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from SystemStaking pallet",
          "returnType": "unknown"
        },
        "BlocksPerRound": {
          "type": "unknown",
          "description": "Constant from SystemStaking pallet",
          "returnType": "unknown"
        }
      },
      "FeeShare": {
        "FeeSharePalletId": {
          "type": "unknown",
          "description": "Constant from FeeShare pallet",
          "returnType": "unknown"
        }
      },
      "CrossInOut": {
        "MaxLengthLimit": {
          "type": "unknown",
          "description": "Constant from CrossInOut pallet",
          "returnType": "unknown"
        }
      },
      "BbBNC": {
        "TokenType": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "IncentivePalletId": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "BuyBackAccount": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "Week": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "MaxBlock": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "Multiplier": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "VoteWeightMultiplier": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "MaxPositions": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "MarkupRefreshLimit": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "OneYear": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        },
        "FiveYears": {
          "type": "unknown",
          "description": "Constant from BbBNC pallet",
          "returnType": "unknown"
        }
      },
      "Slpx": {
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from Slpx pallet",
          "returnType": "unknown"
        },
        "ParachainId": {
          "type": "unknown",
          "description": "Constant from Slpx pallet",
          "returnType": "unknown"
        },
        "MaxOrderSize": {
          "type": "unknown",
          "description": "Constant from Slpx pallet",
          "returnType": "unknown"
        },
        "MaxUserOrderSize": {
          "type": "unknown",
          "description": "Constant from Slpx pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Slpx pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipReferenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        }
      },
      "StableAsset": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from StableAsset pallet",
          "returnType": "unknown"
        },
        "FeePrecision": {
          "type": "unknown",
          "description": "Constant from StableAsset pallet",
          "returnType": "unknown"
        },
        "SwapExactOverAmount": {
          "type": "unknown",
          "description": "Constant from StableAsset pallet",
          "returnType": "unknown"
        },
        "APrecision": {
          "type": "unknown",
          "description": "Constant from StableAsset pallet",
          "returnType": "unknown"
        },
        "PoolAssetLimit": {
          "type": "unknown",
          "description": "Constant from StableAsset pallet",
          "returnType": "unknown"
        }
      },
      "VtokenVoting": {
        "ParachainId": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "QueryTimeout": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "ReferendumCheckInterval": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "RelayVCurrency": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        },
        "MaxVotesPerDelegate": {
          "type": "unknown",
          "description": "Constant from VtokenVoting pallet",
          "returnType": "unknown"
        }
      },
      "LendMarket": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from LendMarket pallet",
          "returnType": "unknown"
        },
        "RewardAssetId": {
          "type": "unknown",
          "description": "Constant from LendMarket pallet",
          "returnType": "unknown"
        },
        "LiquidationFreeAssetId": {
          "type": "unknown",
          "description": "Constant from LendMarket pallet",
          "returnType": "unknown"
        },
        "MaxLengthLimit": {
          "type": "unknown",
          "description": "Constant from LendMarket pallet",
          "returnType": "unknown"
        }
      },
      "Prices": {
        "RelayCurrency": {
          "type": "unknown",
          "description": "Constant from Prices pallet",
          "returnType": "unknown"
        }
      },
      "Oracle": {
        "RootOperatorAccountId": {
          "type": "unknown",
          "description": "Constant from Oracle pallet",
          "returnType": "unknown"
        },
        "MaxHasDispatchedSize": {
          "type": "unknown",
          "description": "Constant from Oracle pallet",
          "returnType": "unknown"
        },
        "MaxFeedValues": {
          "type": "unknown",
          "description": "Constant from Oracle pallet",
          "returnType": "unknown"
        }
      },
      "ChannelCommission": {
        "ClearingDuration": {
          "type": "unknown",
          "description": "Constant from ChannelCommission pallet",
          "returnType": "unknown"
        },
        "NameLengthLimit": {
          "type": "unknown",
          "description": "Constant from ChannelCommission pallet",
          "returnType": "unknown"
        }
      },
      "CloudsConvert": {
        "LockedBlocks": {
          "type": "unknown",
          "description": "Constant from CloudsConvert pallet",
          "returnType": "unknown"
        }
      },
      "BuyBack": {
        "TreasuryAccount": {
          "type": "unknown",
          "description": "Constant from BuyBack pallet",
          "returnType": "unknown"
        },
        "BuyBackAccount": {
          "type": "unknown",
          "description": "Constant from BuyBack pallet",
          "returnType": "unknown"
        },
        "LiquidityAccount": {
          "type": "unknown",
          "description": "Constant from BuyBack pallet",
          "returnType": "unknown"
        }
      },
      "SlpV2": {
        "QueryTimeout": {
          "type": "unknown",
          "description": "Constant from SlpV2 pallet",
          "returnType": "unknown"
        },
        "CommissionPalletId": {
          "type": "unknown",
          "description": "Constant from SlpV2 pallet",
          "returnType": "unknown"
        },
        "ParachainId": {
          "type": "unknown",
          "description": "Constant from SlpV2 pallet",
          "returnType": "unknown"
        },
        "MaxValidators": {
          "type": "unknown",
          "description": "Constant from SlpV2 pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "EthereumRuntimeRPCApi": {
        "chain_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_basic": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "{ nonce: FixedSizeArray<4, bigint>; balance: FixedSizeArray<4, bigint>; }",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_price": {
          "parameters": [],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_code_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "author": {
          "parameters": [],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "storage_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeArray<4, bigint>"
            }
          ],
          "returnType": "FixedSizeBinary<32>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "call": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param2",
              "type": "Binary"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param8",
              "type": "boolean"
            },
            {
              "name": "param9",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            },
            {
              "name": "param10",
              "type": "{ chain_id: bigint; address: FixedSizeBinary<20>; nonce: FixedSizeArray<4, bigint>; signature: { r: FixedSizeBinary<32>; s: FixedSizeBinary<32>; odd_y_parity: boolean; }; }[] | undefined"
            }
          ],
          "returnType": "{ value: { value: Binary; logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; weight_info: { ref_time_limit: bigint | undefined; proof_size_limit: bigint | undefined; ref_time_usage: bigint | undefined; proof_size_usage: bigint | undefined; } | undefined; exit_reason: Enum<...>; u...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "create": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "boolean"
            },
            {
              "name": "param8",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            },
            {
              "name": "param9",
              "type": "{ chain_id: bigint; address: FixedSizeBinary<20>; nonce: FixedSizeArray<4, bigint>; signature: { r: FixedSizeBinary<32>; s: FixedSizeBinary<32>; odd_y_parity: boolean; }; }[] | undefined"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 70 more ...; SlpV2: Enum<...>; }>; ... 10 more ....",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_block": {
          "parameters": [],
          "returnType": "{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_receipts": {
          "parameters": [],
          "returnType": "Enum<{ Legacy: { logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; logs_bloom: FixedSizeBinary<256>; used_gas: FixedSizeArray<...>; status_code: number; }; EIP2930: { ...; }; EIP1559: { ...; }; EIP7702: { ...; }; }>[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_transaction_statuses": {
          "parameters": [],
          "returnType": "{ to: FixedSizeBinary<20> | undefined; from: FixedSizeBinary<20>; transaction_hash: FixedSizeBinary<32>; transaction_index: number; contract_address: FixedSizeBinary<...> | undefined; logs: { ...; }[]; logs_bloom: FixedSizeBinary<...>; }[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_all": {
          "parameters": [],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, Enum<...>[] | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "extrinsic_filter": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; EIP7702: { ...; }...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "elasticity": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_limit_multiplier_support": {
          "parameters": [],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "initialize_pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        }
      },
      "ConvertTransactionRuntimeApi": {
        "convert_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; EIP7702: { ...; }..."
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from ConvertTransactionRuntimeApi API"
        }
      },
      "EvmAccountsApi": {
        "evm_address": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from EvmAccountsApi API"
        },
        "bound_account_id": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "SS58String | undefined",
          "description": "Runtime call from EvmAccountsApi API"
        },
        "account_id": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "SS58String",
          "description": "Runtime call from EvmAccountsApi API"
        }
      },
      "IsmpRuntimeApi": {
        "host_state_machine": {
          "parameters": [],
          "returnType": "Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { relay: FixedSizeBinary<4>; para_id: number; }; }>",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "block_events": {
          "parameters": [],
          "returnType": "Enum<{ StateMachineUpdated: { state_machine_id: { state_id: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { ...; }; }>; consensus_state_id: FixedSizeBinary<...>; }; latest_height: bigint; }; ... 10 more ...; GetRequestTimeoutHandled: { ......",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "block_events_with_metadata": {
          "parameters": [],
          "returnType": "[Enum<{ StateMachineUpdated: { state_machine_id: { state_id: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { ...; }; }>; consensus_state_id: FixedSizeBinary<...>; }; latest_height: bigint; }; ... 10 more ...; GetRequestTimeoutHandled: { .....",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "consensus_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<4>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "state_machine_update_time": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ id: { state_id: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { relay: FixedSizeBinary<4>; para_id: number; }; }>; consensus_state_id: FixedSizeBinary<...>; }; height: bigint; }"
            }
          ],
          "returnType": "bigint | undefined",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "challenge_period": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ state_id: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { relay: FixedSizeBinary<4>; para_id: number; }; }>; consensus_state_id: FixedSizeBinary<...>; }"
            }
          ],
          "returnType": "bigint | undefined",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "latest_state_machine_height": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ state_id: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { relay: FixedSizeBinary<4>; para_id: number; }; }>; consensus_state_id: FixedSizeBinary<...>; }"
            }
          ],
          "returnType": "bigint | undefined",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "requests": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>[]"
            }
          ],
          "returnType": "Enum<{ Post: { nonce: bigint; dest: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<4>; Relay: { ...; }; }>; ... 4 more ...; body: Binary; }; Get: { ...; }; }>[]",
          "description": "Runtime call from IsmpRuntimeApi API"
        },
        "responses": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>[]"
            }
          ],
          "returnType": "Enum<{ Post: { response: Binary; timeout_timestamp: bigint; post: { nonce: bigint; dest: Enum<{ Evm: number; Polkadot: number; Kusama: number; Substrate: FixedSizeBinary<4>; Tendermint: FixedSizeBinary<...>; Relay: { ...; }; }>; ... 4 more ...; body: Binary; }; }; Get: { ...; }; }>[]",
          "description": "Runtime call from IsmpRuntimeApi API"
        }
      },
      "IsmpParachainApi": {
        "para_ids": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from IsmpParachainApi API"
        },
        "current_relay_chain_state": {
          "parameters": [],
          "returnType": "{ number: number; state_root: FixedSizeBinary<32>; }",
          "description": "Runtime call from IsmpParachainApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "CollectCollationInfo": {
        "collect_collation_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }",
          "description": "Runtime call from CollectCollationInfo API"
        }
      },
      "AuraApi": {
        "slot_duration": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from AuraApi API"
        },
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuraApi API"
        }
      },
      "AuraUnincludedSegmentApi": {
        "can_build_upon": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from AuraUnincludedSegmentApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: DispatchRawOrigin; Origins: Enum<{ WhitelistedCaller: undefined; FellowshipAdmin: undefined; ReferendumCanceller: undefined; ReferendumKiller: undefined; ... 18 more ...; DelegatedVotingAdmin: undefined; }>; PolkadotXcm: Enum<...>; CumulusXcm: Enum<...>; Ethereum: { ...; }; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 60 more ...; SlpV2: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }; success: true; } | { ...; }; emitted_events: Enum<...>[]; local_xcm?: XcmVersio...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "FlexibleFeeRuntimeApi": {
        "get_fee_token_and_amount": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "bigint"
            },
            {
              "name": "param2",
              "type": "Binary"
            }
          ],
          "returnType": "[Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>, bigint]",
          "description": "Runtime call from FlexibleFeeRuntimeApi API"
        }
      },
      "ZenlinkProtocolApi": {
        "get_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from ZenlinkProtocolApi API"
        },
        "get_pair_by_asset_id": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            },
            {
              "name": "param1",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            }
          ],
          "returnType": "{ status: number; account: SS58String; asset_0: { asset_type: number; chain_id: number; asset_index: bigint; }; asset_1: { asset_type: number; chain_id: number; asset_index: bigint; }; ... 4 more ...; lp_asset_id: { ...; }; } | undefined",
          "description": "Runtime call from ZenlinkProtocolApi API"
        },
        "get_amount_in_price": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }[]"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from ZenlinkProtocolApi API"
        },
        "get_amount_out_price": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }[]"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from ZenlinkProtocolApi API"
        },
        "get_estimate_lptoken": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            },
            {
              "name": "param1",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            },
            {
              "name": "param2",
              "type": "bigint"
            },
            {
              "name": "param3",
              "type": "bigint"
            },
            {
              "name": "param4",
              "type": "bigint"
            },
            {
              "name": "param5",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from ZenlinkProtocolApi API"
        },
        "calculate_remove_liquidity": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            },
            {
              "name": "param1",
              "type": "{ asset_type: number; chain_id: number; asset_index: bigint; }"
            },
            {
              "name": "param2",
              "type": "bigint"
            }
          ],
          "returnType": "FixedSizeArray<2, bigint> | undefined",
          "description": "Runtime call from ZenlinkProtocolApi API"
        }
      },
      "SalpRuntimeApi": {
        "get_contribution": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "[bigint, Enum<{ Idle: undefined; Contributing: undefined; Refunded: undefined; Unlocked: undefined; Redeemed: undefined; MigratedIdle: undefined; }>]",
          "description": "Runtime call from SalpRuntimeApi API"
        }
      },
      "FarmingRuntimeApi": {
        "get_farming_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "[Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>, bigint][]",
          "description": "Runtime call from FarmingRuntimeApi API"
        },
        "get_gauge_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "[Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>, bigint][]",
          "description": "Runtime call from FarmingRuntimeApi API"
        }
      },
      "BbBNCRuntimeApi": {
        "balance_of": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from BbBNCRuntimeApi API"
        },
        "total_supply": {
          "parameters": [
            {
              "name": "param0",
              "type": "number | undefined"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from BbBNCRuntimeApi API"
        },
        "find_block_epoch": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "FixedSizeArray<4, bigint>"
            }
          ],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from BbBNCRuntimeApi API"
        },
        "bonus": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>"
            },
            {
              "name": "param2",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from BbBNCRuntimeApi API"
        },
        "query_pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "[Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>, bigint][]",
          "description": "Runtime call from BbBNCRuntimeApi API"
        }
      },
      "LendMarketApi": {
        "get_account_liquidity": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 70 more ...; SlpV2: Enum<...>; }>; ... 10 more ....",
          "description": "Runtime call from LendMarketApi API"
        },
        "get_market_status": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 70 more ...; SlpV2: Enum<...>; }>; ... 10 more ....",
          "description": "Runtime call from LendMarketApi API"
        },
        "get_liquidation_threshold_liquidity": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 70 more ...; SlpV2: Enum<...>; }>; ... 10 more ....",
          "description": "Runtime call from LendMarketApi API"
        }
      },
      "StablePoolRuntimeApi": {
        "get_swap_output": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number"
            },
            {
              "name": "param2",
              "type": "number"
            },
            {
              "name": "param3",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from StablePoolRuntimeApi API"
        },
        "add_liquidity_amount": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint[]"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from StablePoolRuntimeApi API"
        }
      },
      "VtokenMintingRuntimeApi": {
        "get_v_currency_amount_by_currency_amount": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>"
            },
            {
              "name": "param2",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from VtokenMintingRuntimeApi API"
        },
        "get_currency_amount_by_v_currency_amount": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ Native: Enum<{ ASG: undefined; BNC: undefined; KUSD: undefined; DOT: undefined; KSM: undefined; ETH: undefined; KAR: undefined; ZLK: undefined; PHA: undefined; RMRK: undefined; MOVR: undefined; }>; ... 13 more ...; Lend: number; }>"
            },
            {
              "name": "param2",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from VtokenMintingRuntimeApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Indices": {
        "NotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Permanent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainSystem": {
        "OverlappingUpgrades": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProhibitedByPolkadot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HostConfigurationNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TxPause": {
        "IsPaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IsUnpaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unpausable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MultiBlockMigrations": {
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiBlockMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainStaking": {
        "DelegatorDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorDNEinTopNorBottom": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorDNEInDelegatorSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegationDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateBondBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorBondBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegationBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyOffline": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorAlreadyLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorNotLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorCannotLeaveYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDelegateIfLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateAlreadyLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateNotLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidateCannotLeaveYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotGoOnlineIfLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedMaxDelegationsPerDelegator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegatedCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSetBelowMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RoundLengthMustBeGreaterThanTotalSelectedCollators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoWritingSameValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountWeightHintJoinCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountWeightHintCancelLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateCountToLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowDelegationCountToDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateDelegationCountToDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowCandidateDelegationCountToLeaveCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooLowDelegationCountToLeaveDelegators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingCandidateRequestsDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingCandidateRequestAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingCandidateRequestNotDueYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRequestDNE": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRequestAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRequestNotDueYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDelegateLessThanOrEqualToLowestBottomWhenFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingDelegationRevoke": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmpQueue": {
        "BadQueueConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyResumed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyActiveOutboundChannels": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PolkadotXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAuthorizedAliases": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiresInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AliasNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Identity": {
        "TooManySubAccounts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNamed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeChanged": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StickyJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementGiven": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRegistrars": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSub": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementForDifferentIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementPaymentFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSuffix": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUsernameAuthority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAllocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequiresSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UsernameTaken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPrivileges": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "NotVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AtMaxVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ScheduleIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidScheduleParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SamePerBlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VestingStartAtNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongLockedAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongCliffVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Ethereum": {
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreLogExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EVM": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PaymentOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasPriceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNonce": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidChainId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Reentrancy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransactionMustComeFromEOA": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Undefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CreateOriginNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EVMAccounts": {
        "TruncatedAccountAlreadyUsed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AddressAlreadyBound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundAddressCannotBeUsed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AddressNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XTokens": {
        "AssetHasNoReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDest": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransferableCurrency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmExecutionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAncestry": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DistinctReserveForAssetAndFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssetsBeingSent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIndexNonExistent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeNotEnough": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportedLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinXcmFeeNotDefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RateLimited": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Tokens": {
        "BalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountIntoBalanceFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxLocksExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "KeepAlive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Currencies": {
        "AmountIntoBalanceFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DepositFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "UnknownTokens": {
        "BalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from UnknownTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from UnknownTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnhandledAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from UnknownTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OrmlXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OrmlXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OrmlXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OrmlXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ZenlinkProtocol": {
        "RequireProtocolAdmin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequireProtocolAdminCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFeePoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnsupportedAssetType": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientAssetBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NativeBalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeniedCreatePair": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PairAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PairNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPairReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientTargetAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExcessiveSoldAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPath": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectAssetAmountRange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Deadline": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountIdBadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExecutionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeniedTransferToSelf": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetChainNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvariantCheckFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PairCreateForbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInBootstrap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidContributionAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnqualifiedBootstrap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroContribute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DenyRefund": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisableBootstrap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotQualifiedAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoRewardTokens": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChargeRewardParamsError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistRewardsInBootstrap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ZenlinkProtocol pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Ismp": {
        "InvalidMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ismp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MessageNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ismp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConsensusClientCreationFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ismp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnbondingPeriodUpdateFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ismp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChallengePeriodUpdateFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ismp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TokenGateway": {
        "UnregisteredAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTeleportError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CoprocessorNotConfigured": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DispatchError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetCreationError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetDecimalsNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToConvert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenGateway pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FlexibleFee": {
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConversionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WeightAndFeeNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmExecutionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyNotSupport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxCurrenciesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitCallExecutionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitRunnerError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PercentageCalculationFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FlexibleFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Salp": {
        "FirstSlotTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastSlotBeforeFirstSlot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastSlotTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroContribution": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParaId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFundStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidContributionStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CapExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundAlreadyCreated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughReservedAssetsToRefund": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalanceInRefundPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalanceToUnlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VSBondExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnRedeemableNow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFreeAssetsToRedeem": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalanceInRedeemPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalanceInFund": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFundSameSlot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFundNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRefund": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalanceToContribute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportTokenType": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ResponderNotRelayChain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFindContributionValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ArgumentsError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Salp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRegistry": {
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocationExisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIdNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIdExisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyIdNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyIdExisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "VtokenMinting": {
        "BelowMinimumMint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BelowMinimumRedeem": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRebondToken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportTokenType": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalanceToUnlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenToRebondNotZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OngoingTimeUnitNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenUnlockLedgerNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UserUnlockLedgerNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TimeUnitUnlockLedgerNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnlockDurationNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unexpected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CalculationOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedMaximumUnlockId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRedeems": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CanNotRebond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VeBNCCheckingError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncentiveCoefNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUnlockRecord": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToRemoveLock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncentiveLockBlocksNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VtokenIssuanceNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenMinting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Slp": {
        "OperateOriginNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportedCurrencyId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToAddDelegator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OverFlow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnderFlow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowerThanMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GreaterThanMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorNotBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedActiveMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProblematicLedger": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughToUnbond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedUnlockingRecords": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RebondExceedUnlockingAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DecodingError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EncodingError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VectorEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorSetNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTimeUnit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountNotZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorStillInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TimeUnitNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeSourceNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WeightAndFeeNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinimumsAndMaximumsNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueryNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelaysNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unexpected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueryResponseRemoveError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidHostingFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncreaseTokenPoolError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TuneExchangeRateLimitNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyLatestTuneRecordNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTransferSource": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotProvided": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unsupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorNotLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestNotDue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeavingNotDue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorSetNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorAlreadyLeaving": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountNone": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDelays": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OngoingTimeUnitUpdateIntervalNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastTimeUpdatedOngoingTimeUnitNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFrequent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestAccountNotValid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WhiteListNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorAlreadyTuned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VectorTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiCurrencyError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegateValidator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DividedByZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SharePriceNotValid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorMultilocationNotvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountNotProvided": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToConvert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedMaxLengthLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransferToError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StablePoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StablePoolTokenIndexNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPageNumber": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMoreValidatorBoostListForCurrency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HandleHyperbridgeOracleError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmInterface": {
        "XcmSendFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmInterface pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OperationWeightAndFeeNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmInterface pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToConvert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmInterface pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmInterface pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TokenConversion": {
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportTokenType": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CalculationOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TokenConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Farming": {
        "NotNullable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolDoesNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GaugePoolNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GaugeInfoNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CanNotClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GaugeMaxBlockOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawLimitCountExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ShareInfoNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CanNotDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WhitelistEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RoundNotOver": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RoundLengthNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WhitelistLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NobodyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInWhitelist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PercentOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotCleared": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRemoveAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UserFarmingPoolOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Farming pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "SystemStaking": {
        "InvalidTokenConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SystemStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedMaxTokenLen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SystemStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedMaxFarmingPoolidLen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SystemStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenInfoNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SystemStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SystemStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConversionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SystemStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FeeShare": {
        "NotSupportProportion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DistributionNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceOracleNotReady": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceIsZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IntervalIsZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValueIsZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokensProportionsNotCleared": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FeeShare pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CrossInOut": {
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyNotSupportCrossInAndOut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMultilocationMapping": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoCrossingMinimumSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLowerThanMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ListOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CrossInOut pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "BbBNC": {
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BelowMinimumMint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ArgumentsError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedsMaxPositions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BbBNC pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Slpx": {
        "AccountAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WhitelistOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSetExecutionFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FreeBalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrderQueueOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyListOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorConvertVtoken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorEncode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorValidating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorDelivering": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorVtokenMiting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorTransferTo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorChargeFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorArguments": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unsupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AsyncMintTooFrequent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AsyncMintIssuanceRatioTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AsyncMintConfigNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slpx pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FellowshipCollective": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotPolling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoneRemaining": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Corruption": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RankTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SameMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FellowshipReferenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StableAsset": {
        "InconsistentStorage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ArgumentsMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ArgumentsError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Math": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MintUnderMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SwapUnderMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RedeemUnderMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RedeemOverMax": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenRateNotCleared": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StableAsset pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StablePool": {
        "SwapUnderMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StablePool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MintUnderMin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StablePool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CantMint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StablePool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RedeemOverMax": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StablePool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenRateNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StablePool pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "VtokenVoting": {
        "XcmFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VTokenNotSupport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DerivativeIndexOccupied": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingUpdateReferendumStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoData": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCompleted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotKilled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStandardVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConviction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfRange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallDispatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallDecodeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccessPollFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NeedPollIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VtokenVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "LendMarket": {
        "InsufficientLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMuchRepay": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOperation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientCollateral": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidatorIsBorrower": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DepositsAreNotCollateral": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientShortfall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRateModelParam": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MarketNotActivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceOracleNotReady": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceIsZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCurrencyId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidLendTokenId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MarketDoesNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MarketAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NewMarketMustHavePendingState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SupplyCapacityExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BorrowCapacityExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientCash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFactor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSupplyCap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidExchangeRate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayerIsSigner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodecError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollateralReserved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MarketBondDoesNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConversionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LendMarket pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Oracle": {
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Oracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyFeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Oracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OracleMembership": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OracleMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OracleMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OracleMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "LeverageStaking": {
        "ArgumentsError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LeverageStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportTokenType": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LeverageStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ChannelCommission": {
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChannelNameTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConversionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChannelNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransferError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VtokenNotConfiguredForCommission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCommissionRate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionTokenAlreadySet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidVtoken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoChangesMade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DivisionByZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RemovalNotComplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenToVtokenConversionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChannelCommission pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CloudsConvert": {
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CloudsConvert pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CalculationOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CloudsConvert pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LessThanExpected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CloudsConvert pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LessThanExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CloudsConvert pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "BuyBack": {
        "NotEnoughBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BuyBack pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyIdNotExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BuyBack pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyIdError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BuyBack pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroDuration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BuyBack pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroMinSwapValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from BuyBack pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "SlpV2": {
        "DelegatorIndexOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorsOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnlockRecordOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnsupportedStakingProtocol": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorIndexNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConfigurationNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LedgerNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmFeeNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingStatusNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TimeUnitNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegatorIndexAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DerivativeAccountIdFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatingFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeliveringFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CalculateProtocolFeeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncreaseTokenPoolFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UpdateIntervalTooShort": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UpdateTokenExchangeRateAmountTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParameter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SlpV2 pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "astar": {
    "chainInfo": {
      "name": "astar",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:23.266Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "IdentityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SuperOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SubsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "Registrars": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "AuthorityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UnbindingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "UnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AggregatedUnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "NewValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ValidationData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "DidSetValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastRelayChainBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAhead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelayStateProof": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelevantMessagingState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HostConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastDmqMqcHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastHrmpMqcHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ProcessedDownwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpWatermark": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpOutboundMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingUpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardDeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AnnouncedHrmpMessagesPerCandidate": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedXcmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedDmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "CustomValidationHeadData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "ParachainInfo": {
        "ParachainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainInfo pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Inflation": {
        "ActiveInflationConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Inflation pallet",
          "returnType": "unknown"
        },
        "InflationParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from Inflation pallet",
          "returnType": "unknown"
        },
        "DoRecalculation": {
          "required": [],
          "optional": [],
          "description": "Storage item from Inflation pallet",
          "returnType": "unknown"
        }
      },
      "DappStaking": {
        "ActiveProtocolState": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "NextDAppId": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "IntegratedDApps": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "CounterForIntegratedDApps": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "Ledger": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "StakerInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "ContractStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "CurrentEraInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "EraRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "PeriodEnd": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "StaticTierParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "TierConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "DAppTiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "HistoryCleanupMarker": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        },
        "Safeguard": {
          "required": [],
          "optional": [],
          "description": "Storage item from DappStaking pallet",
          "returnType": "unknown"
        }
      },
      "Assets": {
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "NextAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        }
      },
      "PriceAggregator": {
        "CurrentBlockValues": {
          "required": [],
          "optional": [],
          "description": "Storage item from PriceAggregator pallet",
          "returnType": "unknown"
        },
        "IntermediateValueAggregator": {
          "required": [],
          "optional": [],
          "description": "Storage item from PriceAggregator pallet",
          "returnType": "unknown"
        },
        "ValuesCircularBuffer": {
          "required": [],
          "optional": [],
          "description": "Storage item from PriceAggregator pallet",
          "returnType": "unknown"
        }
      },
      "Oracle": {
        "RawValues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Oracle pallet",
          "returnType": "unknown"
        },
        "Values": {
          "required": [],
          "optional": [],
          "description": "Storage item from Oracle pallet",
          "returnType": "unknown"
        },
        "HasDispatched": {
          "required": [],
          "optional": [],
          "description": "Storage item from Oracle pallet",
          "returnType": "unknown"
        }
      },
      "OracleMembership": {
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from OracleMembership pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from OracleMembership pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "CollatorSelection": {
        "Invulnerables": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "Candidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "NonCandidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "LastAuthoredBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "DesiredCandidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "CandidacyBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "SlashDestination": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        }
      },
      "AuraExt": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        },
        "SlotInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "InboundXcmpSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "SignalMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "XcAssetConfig": {
        "AssetIdToLocation": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcAssetConfig pallet",
          "returnType": "unknown"
        },
        "AssetLocationToId": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcAssetConfig pallet",
          "returnType": "unknown"
        },
        "AssetLocationUnitsPerSecond": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcAssetConfig pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "EVM": {
        "AccountCodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountCodesMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountStorages": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        }
      },
      "Ethereum": {
        "Pending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CounterForPending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentReceipts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentTransactionStatuses": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        }
      },
      "DynamicEvmBaseFee": {
        "BaseFeePerGas": {
          "required": [],
          "optional": [],
          "description": "Storage item from DynamicEvmBaseFee pallet",
          "returnType": "unknown"
        }
      },
      "Contracts": {
        "PristineCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        },
        "CodeInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        },
        "Nonce": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        },
        "ContractInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        },
        "DeletionQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        },
        "DeletionQueueCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        },
        "MigrationInProgress": {
          "required": [],
          "optional": [],
          "description": "Storage item from Contracts pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "Sudo": {
        "Key": {
          "required": [],
          "optional": [],
          "description": "Storage item from Sudo pallet",
          "returnType": "unknown"
        }
      },
      "CouncilMembership": {
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from CouncilMembership pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from CouncilMembership pallet",
          "returnType": "unknown"
        }
      },
      "TechnicalCommitteeMembership": {
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommitteeMembership pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommitteeMembership pallet",
          "returnType": "unknown"
        }
      },
      "CommunityCouncilMembership": {
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncilMembership pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncilMembership pallet",
          "returnType": "unknown"
        }
      },
      "Council": {
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        },
        "ProposalOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        },
        "CostOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        },
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from Council pallet",
          "returnType": "unknown"
        }
      },
      "TechnicalCommittee": {
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "ProposalOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "CostOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        }
      },
      "CommunityCouncil": {
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        },
        "ProposalOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        },
        "CostOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        },
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityCouncil pallet",
          "returnType": "unknown"
        }
      },
      "Democracy": {
        "PublicPropCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "PublicProps": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "DepositOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "LowestUnbaked": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "VotingOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "LastTabledWasExternal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "NextExternal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "Blacklist": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "Cancellations": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "CommunityTreasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from CommunityTreasury pallet",
          "returnType": "unknown"
        }
      },
      "SafeMode": {
        "EnteredUntil": {
          "required": [],
          "optional": [],
          "description": "Storage item from SafeMode pallet",
          "returnType": "unknown"
        },
        "Deposits": {
          "required": [],
          "optional": [],
          "description": "Storage item from SafeMode pallet",
          "returnType": "unknown"
        }
      },
      "TxPause": {
        "PausedCalls": {
          "required": [],
          "optional": [],
          "description": "Storage item from TxPause pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "Cursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "Historic": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "add_registrar": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_subs": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "clear_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "request_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "cancel_request": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fee": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_account_id": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fields": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "provide_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "rename_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "quit_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_username_for": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "accept_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_expired_approval": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_primary_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "unbind_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "set_validation_data": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        },
        "sudo_send_upward_message": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "vest": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vest_other": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "merge_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_remove_vesting_schedule": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "Inflation": {
        "force_set_inflation_params": {
          "parameters": [],
          "description": "Call from Inflation pallet",
          "returnType": "void"
        },
        "force_inflation_recalculation": {
          "parameters": [],
          "description": "Call from Inflation pallet",
          "returnType": "void"
        },
        "force_readjust_config": {
          "parameters": [],
          "description": "Call from Inflation pallet",
          "returnType": "void"
        }
      },
      "DappStaking": {
        "unbond_and_unstake": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "maintenance_mode": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "register": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "set_dapp_reward_beneficiary": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "set_dapp_owner": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "unregister": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "lock": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "claim_unlocked": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "relock_unlocking": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "stake": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "unstake": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "claim_staker_rewards": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "claim_bonus_reward": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "claim_dapp_reward": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "unstake_from_unregistered": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "cleanup_expired_entries": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "force": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "claim_staker_rewards_for": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "claim_bonus_reward_for": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "move_stake": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        },
        "set_static_tier_params": {
          "parameters": [],
          "description": "Call from DappStaking pallet",
          "returnType": "void"
        }
      },
      "Assets": {
        "create": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "start_destroy": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "destroy_accounts": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "destroy_approvals": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "finish_destroy": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "freeze_asset": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "thaw_asset": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_set_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_clear_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_asset_status": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_cancel_approval": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_approved": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "touch": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_min_balance": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "touch_other": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "refund_other": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "block": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        }
      },
      "Oracle": {
        "feed_values": {
          "parameters": [],
          "description": "Call from Oracle pallet",
          "returnType": "void"
        }
      },
      "OracleMembership": {
        "add_member": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "swap_member": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "reset_members": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "change_key": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "set_prime": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        },
        "clear_prime": {
          "parameters": [],
          "description": "Call from OracleMembership pallet",
          "returnType": "void"
        }
      },
      "CollatorSelection": {
        "set_invulnerables": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_desired_candidates": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_candidacy_bond": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "register_as_candidate": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "leave_intent": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "withdraw_bond": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_slash_destination": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "add_invulnerable": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "remove_invulnerable": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "suspend_xcm_execution": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "resume_xcm_execution": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_suspend_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_drop_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_resume_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "send": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "XcAssetConfig": {
        "register_asset_location": {
          "parameters": [],
          "description": "Call from XcAssetConfig pallet",
          "returnType": "void"
        },
        "set_asset_units_per_second": {
          "parameters": [],
          "description": "Call from XcAssetConfig pallet",
          "returnType": "void"
        },
        "change_existing_asset_location": {
          "parameters": [],
          "description": "Call from XcAssetConfig pallet",
          "returnType": "void"
        },
        "remove_payment_asset": {
          "parameters": [],
          "description": "Call from XcAssetConfig pallet",
          "returnType": "void"
        },
        "remove_asset": {
          "parameters": [],
          "description": "Call from XcAssetConfig pallet",
          "returnType": "void"
        }
      },
      "XTokens": {
        "transfer": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiasset": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_with_fee": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiasset_with_fee": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multicurrencies": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiassets": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "withdraw": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "call": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create2": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "transact": {
          "parameters": [],
          "description": "Call from Ethereum pallet",
          "returnType": "void"
        }
      },
      "DynamicEvmBaseFee": {
        "set_base_fee_per_gas": {
          "parameters": [],
          "description": "Call from DynamicEvmBaseFee pallet",
          "returnType": "void"
        }
      },
      "Contracts": {
        "call_old_weight": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "instantiate_with_code_old_weight": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "instantiate_old_weight": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "upload_code": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "remove_code": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "call": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "instantiate_with_code": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "instantiate": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        },
        "migrate": {
          "parameters": [],
          "description": "Call from Contracts pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "sudo": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_unchecked_weight": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "set_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_as": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "remove_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        }
      },
      "CouncilMembership": {
        "add_member": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        },
        "swap_member": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        },
        "reset_members": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        },
        "change_key": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        },
        "set_prime": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        },
        "clear_prime": {
          "parameters": [],
          "description": "Call from CouncilMembership pallet",
          "returnType": "void"
        }
      },
      "TechnicalCommitteeMembership": {
        "add_member": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "swap_member": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "reset_members": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "change_key": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "set_prime": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "clear_prime": {
          "parameters": [],
          "description": "Call from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        }
      },
      "CommunityCouncilMembership": {
        "add_member": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "swap_member": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "reset_members": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "change_key": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "set_prime": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "clear_prime": {
          "parameters": [],
          "description": "Call from CommunityCouncilMembership pallet",
          "returnType": "void"
        }
      },
      "Council": {
        "set_members": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "propose": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "disapprove_proposal": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "close": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        },
        "release_proposal_cost": {
          "parameters": [],
          "description": "Call from Council pallet",
          "returnType": "void"
        }
      },
      "TechnicalCommittee": {
        "set_members": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "propose": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "disapprove_proposal": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "close": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "release_proposal_cost": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        }
      },
      "CommunityCouncil": {
        "set_members": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "propose": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "disapprove_proposal": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "close": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        },
        "release_proposal_cost": {
          "parameters": [],
          "description": "Call from CommunityCouncil pallet",
          "returnType": "void"
        }
      },
      "Democracy": {
        "propose": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "second": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "emergency_cancel": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "external_propose": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "external_propose_majority": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "external_propose_default": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "fast_track": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "veto_external": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "cancel_referendum": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "clear_public_proposals": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "blacklist": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "cancel_proposal": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "propose_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "reject_proposal": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "approve_proposal": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "CommunityTreasury": {
        "propose_spend": {
          "parameters": [],
          "description": "Call from CommunityTreasury pallet",
          "returnType": "void"
        },
        "reject_proposal": {
          "parameters": [],
          "description": "Call from CommunityTreasury pallet",
          "returnType": "void"
        },
        "approve_proposal": {
          "parameters": [],
          "description": "Call from CommunityTreasury pallet",
          "returnType": "void"
        }
      },
      "CollectiveProxy": {
        "execute_call": {
          "parameters": [],
          "description": "Call from CollectiveProxy pallet",
          "returnType": "void"
        }
      },
      "SafeMode": {
        "enter": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "force_enter": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "extend": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "force_extend": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "force_exit": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "force_slash_deposit": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "release_deposit": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        },
        "force_release_deposit": {
          "parameters": [],
          "description": "Call from SafeMode pallet",
          "returnType": "void"
        }
      },
      "TxPause": {
        "pause": {
          "parameters": [],
          "description": "Call from TxPause pallet",
          "returnType": "void"
        },
        "unpause": {
          "parameters": [],
          "description": "Call from TxPause pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "force_set_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_set_active_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_onboard_mbms": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "clear_historic": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "IdentitySet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityCleared": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementRequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementUnrequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementGiven": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "RegistrarAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentitiesSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRenamed": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRevoked": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameQueued": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PreapprovalExpired": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PrimaryUsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "DanglingUsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameUnbound": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "ValidationFunctionStored": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionApplied": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionDiscarded": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesProcessed": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "UpwardMessageSent": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingCompleted": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "Inflation": {
        "InflationParametersForceChanged": {
          "fields": [],
          "description": "Event from Inflation pallet",
          "returnType": "void"
        },
        "ForcedInflationRecalculation": {
          "fields": [],
          "description": "Event from Inflation pallet",
          "returnType": "void"
        },
        "NewInflationConfiguration": {
          "fields": [],
          "description": "Event from Inflation pallet",
          "returnType": "void"
        }
      },
      "DappStaking": {
        "MaintenanceMode": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "NewEra": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "NewSubperiod": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "DAppRegistered": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "DAppRewardDestinationUpdated": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "DAppOwnerChanged": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "DAppUnregistered": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Unlocking": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "ClaimedUnlocked": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Relock": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Stake": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Unstake": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Reward": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "BonusReward": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "DAppReward": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "UnstakeFromUnregistered": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "ExpiredEntriesRemoved": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "Force": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "StakeMoved": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        },
        "NewTierParameters": {
          "fields": [],
          "description": "Event from DappStaking pallet",
          "returnType": "void"
        }
      },
      "Assets": {
        "Created": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetFrozen": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetThawed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AccountsDestroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovalsDestroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "DestructionStarted": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "TransferredApproved": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetStatusChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetMinBalanceChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Touched": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Blocked": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        }
      },
      "PriceAggregator": {
        "AverageAggregatedValue": {
          "fields": [],
          "description": "Event from PriceAggregator pallet",
          "returnType": "void"
        }
      },
      "Oracle": {
        "NewFeedData": {
          "fields": [],
          "description": "Event from Oracle pallet",
          "returnType": "void"
        }
      },
      "OracleMembership": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "MembersSwapped": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "MembersReset": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        },
        "Dummy": {
          "fields": [],
          "description": "Event from OracleMembership pallet",
          "returnType": "void"
        }
      },
      "CollatorSelection": {
        "NewInvulnerables": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "NewDesiredCandidates": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "NewCandidacyBond": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateAdded": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateRemoved": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateSlashed": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "XcmpMessageSent": {
          "fields": [],
          "description": "Event from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "Attempted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "CumulusXcm": {
        "InvalidFormat": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "UnsupportedVersion": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "ExecutedDownward": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        }
      },
      "XcAssetConfig": {
        "AssetRegistered": {
          "fields": [],
          "description": "Event from XcAssetConfig pallet",
          "returnType": "void"
        },
        "UnitsPerSecondChanged": {
          "fields": [],
          "description": "Event from XcAssetConfig pallet",
          "returnType": "void"
        },
        "AssetLocationChanged": {
          "fields": [],
          "description": "Event from XcAssetConfig pallet",
          "returnType": "void"
        },
        "SupportedAssetRemoved": {
          "fields": [],
          "description": "Event from XcAssetConfig pallet",
          "returnType": "void"
        },
        "AssetRemoved": {
          "fields": [],
          "description": "Event from XcAssetConfig pallet",
          "returnType": "void"
        }
      },
      "XTokens": {
        "TransferredAssets": {
          "fields": [],
          "description": "Event from XTokens pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "Log": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Created": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "CreatedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "ExecutedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "Executed": {
          "fields": [],
          "description": "Event from Ethereum pallet",
          "returnType": "void"
        }
      },
      "DynamicEvmBaseFee": {
        "NewBaseFeePerGas": {
          "fields": [],
          "description": "Event from DynamicEvmBaseFee pallet",
          "returnType": "void"
        }
      },
      "Contracts": {
        "Instantiated": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "Terminated": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "CodeStored": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "ContractEmitted": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "CodeRemoved": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "ContractCodeUpdated": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "Called": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "DelegateCalled": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "StorageDepositTransferredAndHeld": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        },
        "StorageDepositTransferredAndReleased": {
          "fields": [],
          "description": "Event from Contracts pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "Sudid": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyRemoved": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "SudoAsDone": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        }
      },
      "CouncilMembership": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from CouncilMembership pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from CouncilMembership pallet",
          "returnType": "void"
        },
        "MembersSwapped": {
          "fields": [],
          "description": "Event from CouncilMembership pallet",
          "returnType": "void"
        },
        "MembersReset": {
          "fields": [],
          "description": "Event from CouncilMembership pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from CouncilMembership pallet",
          "returnType": "void"
        },
        "Dummy": {
          "fields": [],
          "description": "Event from CouncilMembership pallet",
          "returnType": "void"
        }
      },
      "TechnicalCommitteeMembership": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "MembersSwapped": {
          "fields": [],
          "description": "Event from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "MembersReset": {
          "fields": [],
          "description": "Event from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        },
        "Dummy": {
          "fields": [],
          "description": "Event from TechnicalCommitteeMembership pallet",
          "returnType": "void"
        }
      },
      "CommunityCouncilMembership": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "MembersSwapped": {
          "fields": [],
          "description": "Event from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "MembersReset": {
          "fields": [],
          "description": "Event from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from CommunityCouncilMembership pallet",
          "returnType": "void"
        },
        "Dummy": {
          "fields": [],
          "description": "Event from CommunityCouncilMembership pallet",
          "returnType": "void"
        }
      },
      "Council": {
        "Proposed": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "Disapproved": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "MemberExecuted": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "Closed": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "ProposalCostBurned": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        },
        "ProposalCostReleased": {
          "fields": [],
          "description": "Event from Council pallet",
          "returnType": "void"
        }
      },
      "TechnicalCommittee": {
        "Proposed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Disapproved": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "MemberExecuted": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Closed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "ProposalCostBurned": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "ProposalCostReleased": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        }
      },
      "CommunityCouncil": {
        "Proposed": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "Disapproved": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "MemberExecuted": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "Closed": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "ProposalCostBurned": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        },
        "ProposalCostReleased": {
          "fields": [],
          "description": "Event from CommunityCouncil pallet",
          "returnType": "void"
        }
      },
      "Democracy": {
        "Proposed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Tabled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "ExternalTabled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Started": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Passed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "NotPassed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Delegated": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Vetoed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Blacklisted": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Seconded": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "ProposalCanceled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "MetadataTransferred": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Proposed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "CommunityTreasury": {
        "Proposed": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "Spending": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from CommunityTreasury pallet",
          "returnType": "void"
        }
      },
      "CollectiveProxy": {
        "CollectiveProxyExecuted": {
          "fields": [],
          "description": "Event from CollectiveProxy pallet",
          "returnType": "void"
        }
      },
      "SafeMode": {
        "Entered": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "Extended": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "Exited": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "DepositPlaced": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "DepositReleased": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "CannotDeposit": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        },
        "CannotRelease": {
          "fields": [],
          "description": "Event from SafeMode pallet",
          "returnType": "void"
        }
      },
      "TxPause": {
        "CallPaused": {
          "fields": [],
          "description": "Event from TxPause pallet",
          "returnType": "void"
        },
        "CallUnpaused": {
          "fields": [],
          "description": "Event from TxPause pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "UpgradeStarted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationSkipped": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationAdvanced": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "HistoricCleared": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "BasicDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "ByteDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "SubAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSubAccounts": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxRegistrars": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernameExpiration": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameGracePeriod": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSuffixLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxUsernameLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "SelfParaId": {
          "type": "unknown",
          "description": "Constant from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        },
        "MaxVestingSchedules": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "DappStaking": {
        "BaseNativeCurrencyPrice": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "EraRewardSpanLength": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "RewardRetentionInPeriods": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "MaxNumberOfContracts": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "MaxUnlockingChunks": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "MinimumLockedAmount": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "UnlockingPeriod": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "MaxNumberOfStakedContracts": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "MinimumStakeAmount": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "NumberOfTiers": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "RankingEnabled": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        },
        "MaxBonusSafeMovesPerPeriod": {
          "type": "unknown",
          "description": "Constant from DappStaking pallet",
          "returnType": "unknown"
        }
      },
      "Assets": {
        "RemoveItemsLimit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "AssetDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "AssetAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "ApprovalDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        }
      },
      "PriceAggregator": {
        "MaxValuesPerBlock": {
          "type": "unknown",
          "description": "Constant from PriceAggregator pallet",
          "returnType": "unknown"
        },
        "CircularBufferLength": {
          "type": "unknown",
          "description": "Constant from PriceAggregator pallet",
          "returnType": "unknown"
        },
        "AggregationDuration": {
          "type": "unknown",
          "description": "Constant from PriceAggregator pallet",
          "returnType": "unknown"
        }
      },
      "Oracle": {
        "RootOperatorAccountId": {
          "type": "unknown",
          "description": "Constant from Oracle pallet",
          "returnType": "unknown"
        },
        "MaxHasDispatchedSize": {
          "type": "unknown",
          "description": "Constant from Oracle pallet",
          "returnType": "unknown"
        },
        "MaxFeedValues": {
          "type": "unknown",
          "description": "Constant from Oracle pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "SlotDuration": {
          "type": "unknown",
          "description": "Constant from Aura pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "MaxInboundSuspended": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxActiveOutboundChannels": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxPageSize": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "XTokens": {
        "SelfLocation": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        },
        "BaseXcmWeight": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        },
        "RateLimiterId": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Contracts": {
        "Schedule": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "DepositPerByte": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "DefaultDepositLimit": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "DepositPerItem": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "CodeHashLockupDepositPercent": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "MaxCodeLen": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "MaxStorageKeyLen": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "MaxTransientStorageSize": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "MaxDelegateDependencies": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "UnsafeUnstableInterface": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "MaxDebugBufferLen": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "Environment": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        },
        "ApiVersion": {
          "type": "unknown",
          "description": "Constant from Contracts pallet",
          "returnType": "unknown"
        }
      },
      "Council": {
        "MaxProposalWeight": {
          "type": "unknown",
          "description": "Constant from Council pallet",
          "returnType": "unknown"
        }
      },
      "TechnicalCommittee": {
        "MaxProposalWeight": {
          "type": "unknown",
          "description": "Constant from TechnicalCommittee pallet",
          "returnType": "unknown"
        }
      },
      "CommunityCouncil": {
        "MaxProposalWeight": {
          "type": "unknown",
          "description": "Constant from CommunityCouncil pallet",
          "returnType": "unknown"
        }
      },
      "Democracy": {
        "EnactmentPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "LaunchPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "VotingPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MinimumDeposit": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "InstantAllowed": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "FastTrackVotingPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "CooloffPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxProposals": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxDeposits": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxBlacklisted": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalBond": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "ProposalBondMinimum": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "ProposalBondMaximum": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "CommunityTreasury": {
        "ProposalBond": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "ProposalBondMinimum": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "ProposalBondMaximum": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from CommunityTreasury pallet",
          "returnType": "unknown"
        }
      },
      "SafeMode": {
        "EnterDuration": {
          "type": "unknown",
          "description": "Constant from SafeMode pallet",
          "returnType": "unknown"
        },
        "ExtendDuration": {
          "type": "unknown",
          "description": "Constant from SafeMode pallet",
          "returnType": "unknown"
        },
        "EnterDepositAmount": {
          "type": "unknown",
          "description": "Constant from SafeMode pallet",
          "returnType": "unknown"
        },
        "ExtendDepositAmount": {
          "type": "unknown",
          "description": "Constant from SafeMode pallet",
          "returnType": "unknown"
        },
        "ReleaseDelay": {
          "type": "unknown",
          "description": "Constant from SafeMode pallet",
          "returnType": "unknown"
        }
      },
      "TxPause": {
        "MaxNameLen": {
          "type": "unknown",
          "description": "Constant from TxPause pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "CursorMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "IdentifierMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "AuraApi": {
        "slot_duration": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from AuraApi API"
        },
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuraApi API"
        }
      },
      "AuraUnincludedSegmentApi": {
        "can_build_upon": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from AuraUnincludedSegmentApi API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "TransactionPaymentCallApi": {
        "query_call_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 41 more ...; MultiBlockMigrations: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_call_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 41 more ...; MultiBlockMigrations: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "CollectCollationInfo": {
        "collect_collation_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }",
          "description": "Runtime call from CollectCollationInfo API"
        }
      },
      "EthereumRuntimeRPCApi": {
        "chain_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_basic": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "{ nonce: FixedSizeArray<4, bigint>; balance: FixedSizeArray<4, bigint>; }",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_price": {
          "parameters": [],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_code_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "author": {
          "parameters": [],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "storage_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeArray<4, bigint>"
            }
          ],
          "returnType": "FixedSizeBinary<32>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "call": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param2",
              "type": "Binary"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param8",
              "type": "boolean"
            },
            {
              "name": "param9",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: { value: Binary; logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; weight_info: { ref_time_limit: bigint | undefined; proof_size_limit: bigint | undefined; ref_time_usage: bigint | undefined; proof_size_usage: bigint | undefined; } | undefined; exit_reason: Enum<...>; u...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "create": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "boolean"
            },
            {
              "name": "param8",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 46 more ...; MultiBlockMigrations: { ...; }; }>;...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_block": {
          "parameters": [],
          "returnType": "{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_receipts": {
          "parameters": [],
          "returnType": "Enum<{ Legacy: { logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; logs_bloom: FixedSizeBinary<256>; used_gas: FixedSizeArray<...>; status_code: number; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_transaction_statuses": {
          "parameters": [],
          "returnType": "{ to: FixedSizeBinary<20> | undefined; from: FixedSizeBinary<20>; transaction_hash: FixedSizeBinary<32>; transaction_index: number; contract_address: FixedSizeBinary<...> | undefined; logs: { ...; }[]; logs_bloom: FixedSizeBinary<...>; }[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_all": {
          "parameters": [],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, Enum<...>[] | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "extrinsic_filter": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "elasticity": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_limit_multiplier_support": {
          "parameters": [],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "initialize_pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        }
      },
      "ConvertTransactionRuntimeApi": {
        "convert_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from ConvertTransactionRuntimeApi API"
        }
      },
      "ContractsApi": {
        "call": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "SS58String"
            },
            {
              "name": "param2",
              "type": "bigint"
            },
            {
              "name": "param3",
              "type": "{ ref_time: bigint; proof_size: bigint; } | undefined"
            },
            {
              "name": "param4",
              "type": "bigint | undefined"
            },
            {
              "name": "param5",
              "type": "Binary"
            }
          ],
          "returnType": "{ result: ResultPayload<{ data: Binary; flags: number; }, Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 46 more ...; MultiBlockMigrations: { ...;...",
          "description": "Runtime call from ContractsApi API"
        },
        "instantiate": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "bigint"
            },
            {
              "name": "param2",
              "type": "{ ref_time: bigint; proof_size: bigint; } | undefined"
            },
            {
              "name": "param3",
              "type": "bigint | undefined"
            },
            {
              "name": "param4",
              "type": "Enum<{ Upload: Binary; Existing: FixedSizeBinary<32>; }>"
            },
            {
              "name": "param5",
              "type": "Binary"
            },
            {
              "name": "param6",
              "type": "Binary"
            }
          ],
          "returnType": "{ result: ResultPayload<{ result: { data: Binary; flags: number; }; account_id: SS58String; }, Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ ...; }>; ... 46 more ...; MultiBlockMigrations: { ...; }; }>; ... 10 more ...; Trie: Enum<...>; }>>; ... 4 more ...; eve...",
          "description": "Runtime call from ContractsApi API"
        },
        "upload_code": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "bigint | undefined"
            },
            {
              "name": "param3",
              "type": "Enum<{ Enforced: undefined; Relaxed: undefined; }>"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 46 more ...; MultiBlockMigrations: { ...; }; }>;...",
          "description": "Runtime call from ContractsApi API"
        },
        "get_storage": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Binary | undefined; success: true; } | { value: Enum<{ DoesntExist: undefined; KeyDecodingFailed: undefined; MigrationInProgress: undefined; }>; success: false; }",
          "description": "Runtime call from ContractsApi API"
        }
      },
      "DappStakingApi": {
        "periods_per_cycle": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from DappStakingApi API"
        },
        "eras_per_voting_subperiod": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from DappStakingApi API"
        },
        "eras_per_build_and_earn_subperiod": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from DappStakingApi API"
        },
        "blocks_per_era": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from DappStakingApi API"
        },
        "get_dapp_tier_assignment": {
          "parameters": [],
          "returnType": "[number, number][]",
          "description": "Runtime call from DappStakingApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: DispatchRawOrigin; PolkadotXcm: Enum<{ Xcm: { parents: number; interior: XcmV5Junctions; }; Response: { parents: number; interior: XcmV5Junctions; }; }>; ... 4 more ...; CommunityCouncil: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 41 more ...; MultiBlockMigrations: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: ResultPayload<{ actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }, { ...; }>; emitted_events: Enum<...>[]; local_xcm?: XcmVersionedXcm | unde...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "TrustedQueryApi": {
        "is_trusted_reserve": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedAsset"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: Enum<{ VersionedAssetConversionFailed: undefined; VersionedLocationConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from TrustedQueryApi API"
        },
        "is_trusted_teleporter": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedAsset"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: Enum<{ VersionedAssetConversionFailed: undefined; VersionedLocationConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from TrustedQueryApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Identity": {
        "TooManySubAccounts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNamed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeChanged": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StickyJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementGiven": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRegistrars": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSub": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementForDifferentIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementPaymentFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSuffix": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUsernameAuthority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAllocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequiresSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UsernameTaken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPrivileges": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainSystem": {
        "OverlappingUpgrades": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProhibitedByPolkadot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HostConfigurationNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "NotVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AtMaxVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ScheduleIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidScheduleParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Inflation": {
        "InvalidInflationParameters": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Inflation pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "DappStaking": {
        "Disabled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceededMaxNumberOfContracts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NewDAppIdUnavailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OriginNotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockedAmountBelowThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotAvailableForDappStaking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyUnlockingChunks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RemainingStakePreventsFullUnlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUnlockedChunksToClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUnlockingChunks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnavailableStakeFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnclaimedRewards": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InternalStakeError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientStakeAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PeriodEndsInNextEra": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnstakeFromPastPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnstakeAmountTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoStakingInfo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InternalUnstakeError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardPayoutFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoClaimableRewards": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InternalClaimStakerError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEligibleForBonusReward": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InternalClaimBonusError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidClaimEra": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDAppTierInfo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InternalClaimDAppError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractStillActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyStakedContracts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoExpiredEntries": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ForceNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTierParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SameContracts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DappStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Assets": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unknown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinBalanceZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnavailableConsumer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldDie": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldBurn": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiveAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotLive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Oracle": {
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Oracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyFeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Oracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OracleMembership": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OracleMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OracleMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OracleMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CollatorSelection": {
        "TooManyCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unknown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Permission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInvulnerable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInvulnerable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAllowedCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BondStillLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoCandidacyBond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmpQueue": {
        "BadQueueConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyResumed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyActiveOutboundChannels": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PolkadotXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcAssetConfig": {
        "AssetAlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcAssetConfig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetDoesNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcAssetConfig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiLocationNotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcAssetConfig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XTokens": {
        "AssetHasNoReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDest": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransferableCurrency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmExecutionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAncestry": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DistinctReserveForAssetAndFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssetsBeingSent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIndexNonExistent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeNotEnough": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportedLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinXcmFeeNotDefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RateLimited": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EVM": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PaymentOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasPriceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNonce": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidChainId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Reentrancy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransactionMustComeFromEOA": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Undefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Ethereum": {
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreLogExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "DynamicEvmBaseFee": {
        "ValueOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DynamicEvmBaseFee pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Contracts": {
        "InvalidSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallFlags": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfGas": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutputBufferTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransferFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxCallDepthReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeInfoNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DecodingFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractTrapped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValueTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TerminatedWhileReentrant": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InputForwarded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RandomSubjectTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyTopics": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoChainExtension": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XCMDecodeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateContract": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TerminatedInConstructor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReentranceDenied": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StateChangeDenied": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StorageDepositNotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StorageDepositLimitExhausted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractReverted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeRejected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Indeterministic": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MigrationInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMigrationPerformed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxDelegateDependenciesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegateDependencyNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegateDependencyAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotAddSelfAsDelegateDependency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfTransientStorage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Contracts pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Sudo": {
        "RequireSudo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Sudo pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CouncilMembership": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CouncilMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CouncilMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CouncilMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TechnicalCommitteeMembership": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommitteeMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommitteeMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommitteeMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CommunityCouncilMembership": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncilMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncilMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncilMembership pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Council": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyProposals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrimeAccountNotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Council pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TechnicalCommittee": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyProposals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrimeAccountNotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CommunityCouncil": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyProposals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrimeAccountNotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityCouncil pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Democracy": {
        "ValueLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCanceled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalBlacklisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSimpleMajority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVetoed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReferendumInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoneWaiting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VotesExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InstantNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongUpperBound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VotingPeriodLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InsufficientProposersBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CommunityTreasury": {
        "InsufficientProposersBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityTreasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityTreasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityTreasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityTreasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CommunityTreasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "SafeMode": {
        "Entered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Exited": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotConfigured": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDeposited": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReleaseYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CurrencyError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SafeMode pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TxPause": {
        "IsPaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IsUnpaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unpausable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TxPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MultiBlockMigrations": {
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiBlockMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "paseo_asset_hub": {
    "chainInfo": {
      "name": "paseo_asset_hub",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:23.353Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicWeightReclaimed": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "UnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AggregatedUnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "NewValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ValidationData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "DidSetValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastRelayChainBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAhead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelayStateProof": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelevantMessagingState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HostConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastDmqMqcHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastHrmpMqcHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ProcessedDownwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastProcessedDownwardMessage": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpWatermark": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastProcessedHrmpMessage": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpOutboundMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingUpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardDeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AnnouncedHrmpMessagesPerCandidate": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedXcmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedDmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "CustomValidationHeadData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "ParachainInfo": {
        "ParachainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainInfo pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "Cursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "Historic": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "CollatorSelection": {
        "Invulnerables": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "CandidateList": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "LastAuthoredBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "DesiredCandidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "CandidacyBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        }
      },
      "AuraExt": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        },
        "RelaySlotInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "InboundXcmpSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "SignalMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AuthorizedAliases": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "ToRococoXcmRouter": {
        "Bridge": {
          "required": [],
          "optional": [],
          "description": "Storage item from ToRococoXcmRouter pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "SnowbridgeSystemFrontend": {
        "ExportOperatingMode": {
          "required": [],
          "optional": [],
          "description": "Storage item from SnowbridgeSystemFrontend pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Assets": {
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        },
        "NextAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Assets pallet",
          "returnType": "unknown"
        }
      },
      "Uniques": {
        "Class": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "OwnershipAcceptance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "ClassAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "ClassMetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "InstanceMetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "Attribute": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "ItemPriceOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "CollectionMaxSupply": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        }
      },
      "Nfts": {
        "Collection": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "OwnershipAcceptance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "CollectionAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "CollectionRoleOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "Item": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "CollectionMetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "ItemMetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "Attribute": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "ItemPriceOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "ItemAttributesApprovalsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "NextCollectionId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "PendingSwapOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "CollectionConfigOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        },
        "ItemConfigOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nfts pallet",
          "returnType": "unknown"
        }
      },
      "ForeignAssets": {
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "NextAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssets pallet",
          "returnType": "unknown"
        }
      },
      "NftFractionalization": {
        "NftToAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from NftFractionalization pallet",
          "returnType": "unknown"
        }
      },
      "PoolAssets": {
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssets pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssets pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssets pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssets pallet",
          "returnType": "unknown"
        },
        "NextAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssets pallet",
          "returnType": "unknown"
        }
      },
      "AssetConversion": {
        "Pools": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetConversion pallet",
          "returnType": "unknown"
        },
        "NextPoolAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetConversion pallet",
          "returnType": "unknown"
        }
      },
      "AssetsFreezer": {
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetsFreezer pallet",
          "returnType": "unknown"
        },
        "FrozenBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetsFreezer pallet",
          "returnType": "unknown"
        }
      },
      "ForeignAssetsFreezer": {
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssetsFreezer pallet",
          "returnType": "unknown"
        },
        "FrozenBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from ForeignAssetsFreezer pallet",
          "returnType": "unknown"
        }
      },
      "PoolAssetsFreezer": {
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssetsFreezer pallet",
          "returnType": "unknown"
        },
        "FrozenBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from PoolAssetsFreezer pallet",
          "returnType": "unknown"
        }
      },
      "Revive": {
        "PristineCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        },
        "CodeInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        },
        "AccountInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        },
        "ImmutableDataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        },
        "DeletionQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        },
        "DeletionQueueCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        },
        "OriginalAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Revive pallet",
          "returnType": "unknown"
        }
      },
      "AssetRewards": {
        "PoolStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRewards pallet",
          "returnType": "unknown"
        },
        "Pools": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRewards pallet",
          "returnType": "unknown"
        },
        "PoolCost": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRewards pallet",
          "returnType": "unknown"
        },
        "NextPoolId": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRewards pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MigrationProcess": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "AutoLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "SignedMigrationMaxLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      },
      "Sudo": {
        "Key": {
          "required": [],
          "optional": [],
          "description": "Storage item from Sudo pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "set_validation_data": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        },
        "sudo_send_upward_message": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "force_set_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_set_active_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_onboard_mbms": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "clear_historic": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "CollatorSelection": {
        "set_invulnerables": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_desired_candidates": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_candidacy_bond": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "register_as_candidate": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "leave_intent": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "add_invulnerable": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "remove_invulnerable": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "update_bond": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "take_candidate_slot": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "suspend_xcm_execution": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "resume_xcm_execution": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_suspend_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_drop_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        },
        "update_resume_threshold": {
          "parameters": [],
          "description": "Call from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "send": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "add_authorized_alias": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "remove_authorized_alias": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "remove_all_authorized_aliases": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "ToRococoXcmRouter": {
        "report_bridge_status": {
          "parameters": [],
          "description": "Call from ToRococoXcmRouter pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "SnowbridgeSystemFrontend": {
        "set_operating_mode": {
          "parameters": [],
          "description": "Call from SnowbridgeSystemFrontend pallet",
          "returnType": "void"
        },
        "register_token": {
          "parameters": [],
          "description": "Call from SnowbridgeSystemFrontend pallet",
          "returnType": "void"
        },
        "add_tip": {
          "parameters": [],
          "description": "Call from SnowbridgeSystemFrontend pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "if_else": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as_fallible": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Assets": {
        "create": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "start_destroy": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "destroy_accounts": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "destroy_approvals": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "finish_destroy": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "freeze_asset": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "thaw_asset": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_set_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_clear_metadata": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_asset_status": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "force_cancel_approval": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_approved": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "touch": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "set_min_balance": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "touch_other": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "refund_other": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "block": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Assets pallet",
          "returnType": "void"
        }
      },
      "Uniques": {
        "create": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "destroy": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "redeposit": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "freeze_collection": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "thaw_collection": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "force_item_status": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_attribute": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "clear_attribute": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_collection_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "clear_collection_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_accept_ownership": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_collection_max_supply": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_price": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "buy_item": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        }
      },
      "Nfts": {
        "create": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "destroy": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "force_mint": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "redeposit": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "lock_item_transfer": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "unlock_item_transfer": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "lock_collection": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "force_collection_owner": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "force_collection_config": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "clear_all_transfer_approvals": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "lock_item_properties": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_attribute": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "force_set_attribute": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "clear_attribute": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "approve_item_attributes": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "cancel_item_attributes_approval": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_collection_metadata": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "clear_collection_metadata": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_accept_ownership": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_collection_max_supply": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "update_mint_settings": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_price": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "buy_item": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "pay_tips": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "create_swap": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "cancel_swap": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "claim_swap": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "mint_pre_signed": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        },
        "set_attributes_pre_signed": {
          "parameters": [],
          "description": "Call from Nfts pallet",
          "returnType": "void"
        }
      },
      "ForeignAssets": {
        "create": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "start_destroy": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "destroy_accounts": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "destroy_approvals": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "finish_destroy": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "freeze_asset": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "thaw_asset": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "force_set_metadata": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "force_clear_metadata": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "force_asset_status": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "force_cancel_approval": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "transfer_approved": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "touch": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "set_min_balance": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "touch_other": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "refund_other": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "block": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from ForeignAssets pallet",
          "returnType": "void"
        }
      },
      "NftFractionalization": {
        "fractionalize": {
          "parameters": [],
          "description": "Call from NftFractionalization pallet",
          "returnType": "void"
        },
        "unify": {
          "parameters": [],
          "description": "Call from NftFractionalization pallet",
          "returnType": "void"
        }
      },
      "PoolAssets": {
        "create": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "start_destroy": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "destroy_accounts": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "destroy_approvals": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "finish_destroy": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "freeze_asset": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "thaw_asset": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "force_set_metadata": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "force_clear_metadata": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "force_asset_status": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "force_cancel_approval": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "transfer_approved": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "touch": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "set_min_balance": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "touch_other": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "refund_other": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "block": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from PoolAssets pallet",
          "returnType": "void"
        }
      },
      "AssetConversion": {
        "create_pool": {
          "parameters": [],
          "description": "Call from AssetConversion pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from AssetConversion pallet",
          "returnType": "void"
        },
        "remove_liquidity": {
          "parameters": [],
          "description": "Call from AssetConversion pallet",
          "returnType": "void"
        },
        "swap_exact_tokens_for_tokens": {
          "parameters": [],
          "description": "Call from AssetConversion pallet",
          "returnType": "void"
        },
        "swap_tokens_for_exact_tokens": {
          "parameters": [],
          "description": "Call from AssetConversion pallet",
          "returnType": "void"
        },
        "touch": {
          "parameters": [],
          "description": "Call from AssetConversion pallet",
          "returnType": "void"
        }
      },
      "Revive": {
        "eth_transact": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "call": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "instantiate": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "instantiate_with_code": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "eth_instantiate_with_code": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "eth_call": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "upload_code": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "remove_code": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "map_account": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "unmap_account": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        },
        "dispatch_as_fallback_account": {
          "parameters": [],
          "description": "Call from Revive pallet",
          "returnType": "void"
        }
      },
      "AssetRewards": {
        "create_pool": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "stake": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "unstake": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "harvest_rewards": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "set_pool_reward_rate_per_block": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "set_pool_admin": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "set_pool_expiry_block": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "deposit_reward_tokens": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        },
        "cleanup_pool": {
          "parameters": [],
          "description": "Call from AssetRewards pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "control_auto_migration": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "continue_migrate": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_top": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_child": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "set_signed_max_limits": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "force_set_progress": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "AssetConversionMigration": {
        "migrate_to_new_account": {
          "parameters": [],
          "description": "Call from AssetConversionMigration pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "sudo": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_unchecked_weight": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "set_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_as": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "remove_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "RejectedInvalidAuthorizedUpgrade": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "ValidationFunctionStored": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionApplied": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionDiscarded": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesProcessed": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "UpwardMessageSent": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "UpgradeStarted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationSkipped": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationAdvanced": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "HistoricCleared": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "MintedCredit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BurnedDebt": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Held": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BurnedHeld": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TransferOnHold": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TransferAndHold": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Released": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unexpected": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "AssetTxPayment": {
        "AssetTxFeePaid": {
          "fields": [],
          "description": "Event from AssetTxPayment pallet",
          "returnType": "void"
        },
        "AssetRefundFailed": {
          "fields": [],
          "description": "Event from AssetTxPayment pallet",
          "returnType": "void"
        }
      },
      "CollatorSelection": {
        "NewInvulnerables": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "InvulnerableAdded": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "InvulnerableRemoved": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "NewDesiredCandidates": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "NewCandidacyBond": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateAdded": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateBondUpdated": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateRemoved": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateReplaced": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "InvalidInvulnerableSkipped": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "NewQueued": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorDisabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorReenabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "XcmpMessageSent": {
          "fields": [],
          "description": "Event from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "Attempted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SendFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ProcessXcmError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AliasAuthorized": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AliasAuthorizationRemoved": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AliasesAuthorizationsRemoved": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "CumulusXcm": {
        "InvalidFormat": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "UnsupportedVersion": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "ExecutedDownward": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        }
      },
      "ToRococoXcmRouter": {
        "DeliveryFeeFactorDecreased": {
          "fields": [],
          "description": "Event from ToRococoXcmRouter pallet",
          "returnType": "void"
        },
        "DeliveryFeeFactorIncreased": {
          "fields": [],
          "description": "Event from ToRococoXcmRouter pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "SnowbridgeSystemFrontend": {
        "MessageSent": {
          "fields": [],
          "description": "Event from SnowbridgeSystemFrontend pallet",
          "returnType": "void"
        },
        "ExportOperatingModeChanged": {
          "fields": [],
          "description": "Event from SnowbridgeSystemFrontend pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseMainSuccess": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseFallbackCalled": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureKilled": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Assets": {
        "Created": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetFrozen": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetThawed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AccountsDestroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovalsDestroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "DestructionStarted": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "TransferredApproved": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetStatusChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "AssetMinBalanceChanged": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Touched": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Blocked": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Assets pallet",
          "returnType": "void"
        }
      },
      "Uniques": {
        "Created": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionFrozen": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionThawed": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemStatusChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionMetadataSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionMetadataCleared": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Redeposited": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "AttributeSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "AttributeCleared": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "OwnershipAcceptanceChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionMaxSupplySet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemPriceSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemPriceRemoved": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemBought": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        }
      },
      "Nfts": {
        "Created": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemTransferLocked": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemTransferUnlocked": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemPropertiesLocked": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "CollectionLocked": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "TransferApproved": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "AllApprovalsCancelled": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "CollectionConfigChanged": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "CollectionMetadataSet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "CollectionMetadataCleared": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemMetadataSet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemMetadataCleared": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "Redeposited": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "AttributeSet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "AttributeCleared": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemAttributesApprovalAdded": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemAttributesApprovalRemoved": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "OwnershipAcceptanceChanged": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "CollectionMaxSupplySet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "CollectionMintSettingsUpdated": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "NextCollectionIdIncremented": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemPriceSet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemPriceRemoved": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "ItemBought": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "TipSent": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "SwapCreated": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "SwapCancelled": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "SwapClaimed": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "PreSignedAttributesSet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        },
        "PalletAttributeSet": {
          "fields": [],
          "description": "Event from Nfts pallet",
          "returnType": "void"
        }
      },
      "ForeignAssets": {
        "Created": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "AssetFrozen": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "AssetThawed": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "AccountsDestroyed": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "ApprovalsDestroyed": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "DestructionStarted": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "TransferredApproved": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "AssetStatusChanged": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "AssetMinBalanceChanged": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Touched": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Blocked": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from ForeignAssets pallet",
          "returnType": "void"
        }
      },
      "NftFractionalization": {
        "NftFractionalized": {
          "fields": [],
          "description": "Event from NftFractionalization pallet",
          "returnType": "void"
        },
        "NftUnified": {
          "fields": [],
          "description": "Event from NftFractionalization pallet",
          "returnType": "void"
        }
      },
      "PoolAssets": {
        "Created": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "AssetFrozen": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "AssetThawed": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "AccountsDestroyed": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "ApprovalsDestroyed": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "DestructionStarted": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "TransferredApproved": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "AssetStatusChanged": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "AssetMinBalanceChanged": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Touched": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Blocked": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from PoolAssets pallet",
          "returnType": "void"
        }
      },
      "AssetConversion": {
        "PoolCreated": {
          "fields": [],
          "description": "Event from AssetConversion pallet",
          "returnType": "void"
        },
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from AssetConversion pallet",
          "returnType": "void"
        },
        "LiquidityRemoved": {
          "fields": [],
          "description": "Event from AssetConversion pallet",
          "returnType": "void"
        },
        "SwapExecuted": {
          "fields": [],
          "description": "Event from AssetConversion pallet",
          "returnType": "void"
        },
        "SwapCreditExecuted": {
          "fields": [],
          "description": "Event from AssetConversion pallet",
          "returnType": "void"
        },
        "Touched": {
          "fields": [],
          "description": "Event from AssetConversion pallet",
          "returnType": "void"
        }
      },
      "AssetsFreezer": {
        "Frozen": {
          "fields": [],
          "description": "Event from AssetsFreezer pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from AssetsFreezer pallet",
          "returnType": "void"
        }
      },
      "ForeignAssetsFreezer": {
        "Frozen": {
          "fields": [],
          "description": "Event from ForeignAssetsFreezer pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from ForeignAssetsFreezer pallet",
          "returnType": "void"
        }
      },
      "PoolAssetsFreezer": {
        "Frozen": {
          "fields": [],
          "description": "Event from PoolAssetsFreezer pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from PoolAssetsFreezer pallet",
          "returnType": "void"
        }
      },
      "Revive": {
        "ContractEmitted": {
          "fields": [],
          "description": "Event from Revive pallet",
          "returnType": "void"
        },
        "Instantiated": {
          "fields": [],
          "description": "Event from Revive pallet",
          "returnType": "void"
        }
      },
      "AssetRewards": {
        "Staked": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "Unstaked": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "RewardsHarvested": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "PoolCreated": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "PoolRewardRateModified": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "PoolAdminModified": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "PoolExpiryBlockModified": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        },
        "PoolCleanedUp": {
          "fields": [],
          "description": "Event from AssetRewards pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "Migrated": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "AutoMigrationFinished": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Halted": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "AssetConversionMigration": {
        "MigratedToNewAccount": {
          "fields": [],
          "description": "Event from AssetConversionMigration pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "Sudid": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyRemoved": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "SudoAsDone": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "SelfParaId": {
          "type": "unknown",
          "description": "Constant from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "CursorMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "IdentifierMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "CollatorSelection": {
        "PotId": {
          "type": "unknown",
          "description": "Constant from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "MaxCandidates": {
          "type": "unknown",
          "description": "Constant from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "MinEligibleCollators": {
          "type": "unknown",
          "description": "Constant from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "MaxInvulnerables": {
          "type": "unknown",
          "description": "Constant from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "KickThreshold": {
          "type": "unknown",
          "description": "Constant from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "pot_account": {
          "type": "unknown",
          "description": "Constant from CollatorSelection pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "KeyDeposit": {
          "type": "unknown",
          "description": "Constant from Session pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "SlotDuration": {
          "type": "unknown",
          "description": "Constant from Aura pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "MaxInboundSuspended": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxActiveOutboundChannels": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxPageSize": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "UniversalLocation": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AdvertisedXcmVersion": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "MaxLockers": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "MaxRemoteLockConsumers": {
          "type": "unknown",
          "description": "Constant from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Assets": {
        "RemoveItemsLimit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "AssetDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "AssetAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "ApprovalDeposit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from Assets pallet",
          "returnType": "unknown"
        }
      },
      "Uniques": {
        "CollectionDeposit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "ItemDeposit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "AttributeDepositBase": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "DepositPerByte": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "KeyLimit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "ValueLimit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        }
      },
      "Nfts": {
        "CollectionDeposit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "ItemDeposit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "AttributeDepositBase": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "DepositPerByte": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "KeyLimit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "ValueLimit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "ApprovalsLimit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "ItemAttributesApprovalsLimit": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "MaxTips": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "MaxDeadlineDuration": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "MaxAttributesPerCall": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        },
        "Features": {
          "type": "unknown",
          "description": "Constant from Nfts pallet",
          "returnType": "unknown"
        }
      },
      "ForeignAssets": {
        "RemoveItemsLimit": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "AssetDeposit": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "AssetAccountDeposit": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "ApprovalDeposit": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from ForeignAssets pallet",
          "returnType": "unknown"
        }
      },
      "NftFractionalization": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from NftFractionalization pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from NftFractionalization pallet",
          "returnType": "unknown"
        },
        "NewAssetSymbol": {
          "type": "unknown",
          "description": "Constant from NftFractionalization pallet",
          "returnType": "unknown"
        },
        "NewAssetName": {
          "type": "unknown",
          "description": "Constant from NftFractionalization pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from NftFractionalization pallet",
          "returnType": "unknown"
        }
      },
      "PoolAssets": {
        "RemoveItemsLimit": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        },
        "AssetDeposit": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        },
        "AssetAccountDeposit": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        },
        "MetadataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        },
        "ApprovalDeposit": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from PoolAssets pallet",
          "returnType": "unknown"
        }
      },
      "AssetConversion": {
        "LPFee": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        },
        "PoolSetupFee": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        },
        "PoolSetupFeeAsset": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        },
        "LiquidityWithdrawalFee": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        },
        "MintMinLiquidity": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        },
        "MaxSwapPathLength": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from AssetConversion pallet",
          "returnType": "unknown"
        }
      },
      "Revive": {
        "DepositPerByte": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        },
        "DepositPerItem": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        },
        "CodeHashLockupDepositPercent": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        },
        "UnsafeUnstableInterface": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        },
        "AllowEVMBytecode": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        },
        "ChainId": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        },
        "NativeToEthRatio": {
          "type": "unknown",
          "description": "Constant from Revive pallet",
          "returnType": "unknown"
        }
      },
      "AssetRewards": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from AssetRewards pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MaxKeyLen": {
          "type": "unknown",
          "description": "Constant from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "AuraApi": {
        "slot_duration": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from AuraApi API"
        },
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuraApi API"
        }
      },
      "AuraUnincludedSegmentApi": {
        "can_build_upon": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from AuraUnincludedSegmentApi API"
        }
      },
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "NftsApi": {
        "owner": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "SS58String | undefined",
          "description": "Runtime call from NftsApi API"
        },
        "collection_owner": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "SS58String | undefined",
          "description": "Runtime call from NftsApi API"
        },
        "attribute": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number"
            },
            {
              "name": "param2",
              "type": "Binary"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from NftsApi API"
        },
        "custom_attribute": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "number"
            },
            {
              "name": "param2",
              "type": "number"
            },
            {
              "name": "param3",
              "type": "Binary"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from NftsApi API"
        },
        "system_attribute": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            },
            {
              "name": "param2",
              "type": "Binary"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from NftsApi API"
        },
        "collection_attribute": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from NftsApi API"
        }
      },
      "AssetConversionApi": {
        "quote_price_tokens_for_exact_tokens": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ parents: number; interior: XcmV5Junctions; }"
            },
            {
              "name": "param1",
              "type": "{ parents: number; interior: XcmV5Junctions; }"
            },
            {
              "name": "param2",
              "type": "bigint"
            },
            {
              "name": "param3",
              "type": "boolean"
            }
          ],
          "returnType": "bigint | undefined",
          "description": "Runtime call from AssetConversionApi API"
        },
        "quote_price_exact_tokens_for_tokens": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ parents: number; interior: XcmV5Junctions; }"
            },
            {
              "name": "param1",
              "type": "{ parents: number; interior: XcmV5Junctions; }"
            },
            {
              "name": "param2",
              "type": "bigint"
            },
            {
              "name": "param3",
              "type": "boolean"
            }
          ],
          "returnType": "bigint | undefined",
          "description": "Runtime call from AssetConversionApi API"
        },
        "get_reserves": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ parents: number; interior: XcmV5Junctions; }"
            },
            {
              "name": "param1",
              "type": "{ parents: number; interior: XcmV5Junctions; }"
            }
          ],
          "returnType": "FixedSizeArray<2, bigint> | undefined",
          "description": "Runtime call from AssetConversionApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: Enum<{ Root: undefined; Signed: SS58String; None: undefined; Authorized: undefined; }>; PolkadotXcm: Enum<{ Xcm: { parents: number; interior: XcmV5Junctions; }; Response: { ...; }; }>; CumulusXcm: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 27 more ...; Sudo: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: ResultPayload<{ actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }, { ...; }>; emitted_events: Enum<...>[]; local_xcm?: XcmVersionedXcm | unde...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "TrustedQueryApi": {
        "is_trusted_reserve": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedAsset"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: Enum<{ VersionedAssetConversionFailed: undefined; VersionedLocationConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from TrustedQueryApi API"
        },
        "is_trusted_teleporter": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedAsset"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: Enum<{ VersionedAssetConversionFailed: undefined; VersionedLocationConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from TrustedQueryApi API"
        }
      },
      "AuthorizedAliasersApi": {
        "authorized_aliasers": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: { location: XcmVersionedLocation; expiry?: bigint | undefined; }[]; success: true; } | { value: { type: \"LocationVersionConversionFailed\"; value: undefined; }; success: false; }",
          "description": "Runtime call from AuthorizedAliasersApi API"
        },
        "is_authorized_alias": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: { type: \"LocationVersionConversionFailed\"; value: undefined; }; success: false; }",
          "description": "Runtime call from AuthorizedAliasersApi API"
        }
      },
      "TransactionPaymentCallApi": {
        "query_call_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 27 more ...; Sudo: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_call_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 27 more ...; Sudo: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        }
      },
      "FungiblesApi": {
        "query_account_balances": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "{ value: XcmVersionedAssets; success: true; } | { value: Enum<{ AssetIdConversionFailed: undefined; AmountToBalanceConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from FungiblesApi API"
        }
      },
      "CollectCollationInfo": {
        "collect_collation_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }",
          "description": "Runtime call from CollectCollationInfo API"
        }
      },
      "AssetRewards": {
        "pool_creation_cost": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from AssetRewards API"
        }
      },
      "GetCoreSelectorApi": {
        "core_selector": {
          "parameters": [],
          "returnType": "FixedSizeBinary<2>",
          "description": "Runtime call from GetCoreSelectorApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      },
      "ReviveApi": {
        "block_gas_limit": {
          "parameters": [],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from ReviveApi API"
        },
        "balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from ReviveApi API"
        },
        "gas_price": {
          "parameters": [],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from ReviveApi API"
        },
        "nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from ReviveApi API"
        },
        "call": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param2",
              "type": "bigint"
            },
            {
              "name": "param3",
              "type": "{ ref_time: bigint; proof_size: bigint; } | undefined"
            },
            {
              "name": "param4",
              "type": "bigint | undefined"
            },
            {
              "name": "param5",
              "type": "Binary"
            }
          ],
          "returnType": "{ result: ResultPayload<{ data: Binary; flags: number; }, Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 36 more ...; Sudo: { ...; }; }>; ... 10 m...",
          "description": "Runtime call from ReviveApi API"
        },
        "instantiate": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "bigint"
            },
            {
              "name": "param2",
              "type": "{ ref_time: bigint; proof_size: bigint; } | undefined"
            },
            {
              "name": "param3",
              "type": "bigint | undefined"
            },
            {
              "name": "param4",
              "type": "Enum<{ Upload: Binary; Existing: FixedSizeBinary<32>; }>"
            },
            {
              "name": "param5",
              "type": "Binary"
            },
            {
              "name": "param6",
              "type": "FixedSizeBinary<32> | undefined"
            }
          ],
          "returnType": "{ result: ResultPayload<{ result: { data: Binary; flags: number; }; addr: FixedSizeBinary<20>; }, Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ ...; }>; ... 10 more ...; Trie: Enum<...>; }>>; gas_consumed: { ...; }; gas_required: { ...; }; storage_deposit: Enum<...>; }",
          "description": "Runtime call from ReviveApi API"
        },
        "eth_transact": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ nonce: FixedSizeArray<4, bigint> | undefined; value: FixedSizeArray<4, bigint> | undefined; to: FixedSizeBinary<20> | undefined; ... 12 more ...; \"r#type\": number | undefined; }"
            }
          ],
          "returnType": "{ value: { gas_required: { ref_time: bigint; proof_size: bigint; }; storage_deposit: bigint; eth_gas: FixedSizeArray<4, bigint>; data: Binary; }; success: true; } | { ...; }",
          "description": "Runtime call from ReviveApi API"
        },
        "upload_code": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "bigint | undefined"
            }
          ],
          "returnType": "{ value: { code_hash: FixedSizeBinary<32>; deposit: bigint; }; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<...>; ... 36 more ...; Sudo: { ...; }; }>; ... 10 more ...; Trie: Enum<...>; }>; success: false; }",
          "description": "Runtime call from ReviveApi API"
        },
        "get_storage": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Binary | undefined; success: true; } | { value: Enum<{ DoesntExist: undefined; KeyDecodingFailed: undefined; }>; success: false; }",
          "description": "Runtime call from ReviveApi API"
        },
        "get_storage_var_key": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Binary | undefined; success: true; } | { value: Enum<{ DoesntExist: undefined; KeyDecodingFailed: undefined; }>; success: false; }",
          "description": "Runtime call from ReviveApi API"
        },
        "trace_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "Enum<{ CallTracer?: { with_logs: boolean; only_top_call: boolean; } | undefined; PrestateTracer?: { diff_mode: boolean; disable_storage: boolean; disable_code: boolean; } | undefined; }>"
            }
          ],
          "returnType": "[number, Enum<{ Call: { value: FixedSizeArray<4, bigint> | undefined; to: FixedSizeBinary<20>; calls: ...[]; error: string | undefined; from: FixedSizeBinary<20>; ... 6 more ...; call_type: Enum<...>; }; Prestate: Enum<...>; }>][]",
          "description": "Runtime call from ReviveApi API"
        },
        "trace_tx": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "number"
            },
            {
              "name": "param2",
              "type": "Enum<{ CallTracer?: { with_logs: boolean; only_top_call: boolean; } | undefined; PrestateTracer?: { diff_mode: boolean; disable_storage: boolean; disable_code: boolean; } | undefined; }>"
            }
          ],
          "returnType": "Enum<{ Call: { value: FixedSizeArray<4, bigint> | undefined; to: FixedSizeBinary<20>; calls: ...[]; error: string | undefined; from: FixedSizeBinary<20>; ... 6 more ...; call_type: Enum<...>; }; Prestate: Enum<...>; }> | undefined",
          "description": "Runtime call from ReviveApi API"
        },
        "trace_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ nonce: FixedSizeArray<4, bigint> | undefined; value: FixedSizeArray<4, bigint> | undefined; to: FixedSizeBinary<20> | undefined; ... 12 more ...; \"r#type\": number | undefined; }"
            },
            {
              "name": "param1",
              "type": "Enum<{ CallTracer?: { with_logs: boolean; only_top_call: boolean; } | undefined; PrestateTracer?: { diff_mode: boolean; disable_storage: boolean; disable_code: boolean; } | undefined; }>"
            }
          ],
          "returnType": "{ value: Enum<{ Data: Binary; Message: string; }>; success: false; } | { value: Enum<{ Call: { value: FixedSizeArray<4, bigint> | undefined; to: FixedSizeBinary<20>; ... 9 more ...; call_type: Enum<...>; }; Prestate: Enum<...>; }>; success: true; }",
          "description": "Runtime call from ReviveApi API"
        },
        "block_author": {
          "parameters": [],
          "returnType": "FixedSizeBinary<20> | undefined",
          "description": "Runtime call from ReviveApi API"
        },
        "address": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from ReviveApi API"
        },
        "runtime_pallets_address": {
          "parameters": [],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from ReviveApi API"
        },
        "code": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from ReviveApi API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainSystem": {
        "OverlappingUpgrades": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProhibitedByPolkadot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HostConfigurationNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MultiBlockMigrations": {
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiBlockMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CollatorSelection": {
        "TooManyCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewEligibleCollators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyInvulnerables": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInvulnerable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInvulnerable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsertToCandidateListFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RemoveFromCandidateListFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DepositTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UpdateCandidateListFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetIsNotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IdenticalDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUnreserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmpQueue": {
        "BadQueueConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyResumed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyActiveOutboundChannels": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PolkadotXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAuthorizedAliases": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiresInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AliasNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncompleteWithError": {
          "type": "PlainDescriptor<{ index: number; error: Enum<{ Overflow: undefined; Unimplemented: undefined; UntrustedReserveLocation: undefined; UntrustedTeleportLocation: undefined; LocationFull: undefined; LocationNotInvertible: undefined; ... 34 more ...; ExceedsStackLimit: undefined; }>; }>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<{ index: number; error: Enum<{ Overflow: undefined; Unimplemented: undefined; UntrustedReserveLocation: undefined; UntrustedTeleportLocation: undefined; LocationFull: undefined; LocationNotInvertible: undefined; ... 34 more ...; ExceedsStackLimit: undefined; }>; }>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "SnowbridgeSystemFrontend": {
        "UnsupportedLocationVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocationConversionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Halted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnsupportedAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SwapError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BurnError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TipAmountZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from SnowbridgeSystemFrontend pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Assets": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unknown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinBalanceZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnavailableConsumer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldDie": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldBurn": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiveAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotLive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContainsFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContainsHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Assets pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Uniques": {
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownCollection": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unaccepted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Locked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyAlreadySet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownItem": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotForSale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AttributeNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongAttribute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Nfts": {
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownCollection": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ApprovalExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollectionIdInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ItemsNonTransferable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unaccepted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ItemLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockedItemAttributes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockedCollectionAttributes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockedItemMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockedCollectionMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownItem": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MetadataNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AttributeNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotForSale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReachedApprovalLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadlineExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongDuration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MethodDisabled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongSetting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InconsistentItemConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RolesNotCleared": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MintNotStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MintEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectData": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxAttributesLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongNamespace": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollectionNotEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WitnessRequired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nfts pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ForeignAssets": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unknown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinBalanceZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnavailableConsumer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldDie": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldBurn": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiveAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotLive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContainsFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContainsHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "NftFractionalization": {
        "IncorrectAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NftFractionalization pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NftFractionalization pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NftNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NftFractionalization pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NftNotFractionalized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NftFractionalization pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PoolAssets": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unknown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinBalanceZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnavailableConsumer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldDie": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WouldBurn": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiveAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotLive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContainsFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContainsHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssets pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetConversion": {
        "InvalidAssetPair": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongDesiredAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountOneLessThanMinimal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountTwoLessThanMinimal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReserveLeftLessThanMinimal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountOutTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetOneDepositDidNotMeetMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTwoDepositDidNotMeetMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetOneWithdrawalDidNotMeetMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTwoWithdrawalDidNotMeetMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OptimalAmountLessThanDesired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidityMinted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProvidedMinimumNotSufficientForSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProvidedMaximumNotSufficientForSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPath": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonUniquePath": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectPoolAssetId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BelowMinimum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversion pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetsFreezer": {
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetsFreezer pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ForeignAssetsFreezer": {
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ForeignAssetsFreezer pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PoolAssetsFreezer": {
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PoolAssetsFreezer pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Revive": {
        "InvalidSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallFlags": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfGas": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransferFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxCallDepthReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeInfoNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DecodingFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractTrapped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValueTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TerminatedWhileReentrant": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InputForwarded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyTopics": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateContract": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TerminatedInConstructor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReentranceDenied": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReenteredPallet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StateChangeDenied": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StorageDepositNotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StorageDepositLimitExhausted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContractReverted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeRejected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BlobTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StaticMemoryTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BasicBlockTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidInstruction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxDelegateDependenciesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegateDependencyNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelegateDependencyAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotAddSelfAsDelegateDependency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OutOfTransientStorage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSyscall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidStorageFlags": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExecutionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceConversionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidImmutableAccess": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountUnmapped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountAlreadyMapped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidGenericTransaction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RefcountOverOrUnderflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnsupportedPrecompileAddress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReturnDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Revive pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRewards": {
        "NotEnoughTokens": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonExistentPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonExistentStaker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonExistentAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BlockNumberConversionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiryBlockMustBeInTheFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiryCut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardRateCut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonEmptyPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRewards pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StateTrieMigration": {
        "MaxSignedLimits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "KeyTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedMigrationNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadChildRoot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetConversionMigration": {
        "InvalidAssetPair": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversionMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversionMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversionMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PartialTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetConversionMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Sudo": {
        "RequireSudo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Sudo pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "westend": {
    "chainInfo": {
      "name": "westend",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:23.436Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicWeightReclaimed": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "GenesisSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Randomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "PendingEpochConfigChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SegmentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "UnderConstruction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Initialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "AuthorVrfRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochStart": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Lateness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextEpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SkippedEpochs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "ValidatorCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinimumValidatorCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Invulnerables": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Bonded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinNominatorBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinValidatorBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinimumActiveStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MinCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Ledger": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Payee": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxValidatorsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Nominators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForNominators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "VirtualStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CounterForVirtualStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxNominatorsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ActiveEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStartSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersOverview": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersClipped": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasStakersPaged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ClaimedRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasValidatorPrefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasValidatorReward": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasRewardPoints": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ErasTotalStake": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ForceEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "MaxStakedRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SlashRewardFraction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CanceledSlashPayout": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "BondedEras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ValidatorSlashInEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "NominatorSlashInEra": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SlashingSpans": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SpanSlash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentPlannedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ChillThreshold": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Offences": {
        "Reports": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        },
        "ConcurrentReportsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        }
      },
      "Historical": {
        "HistoricalSessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        },
        "StoredRange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        }
      },
      "Parameters": {
        "Parameters": {
          "required": [],
          "optional": [],
          "description": "Storage item from Parameters pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "State": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "PendingChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "NextForced": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Stalled": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "CurrentSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "AuthorityDiscovery": {
        "Keys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "IdentityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SuperOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SubsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "Registrars": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "AuthorityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UnbindingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Recovery": {
        "Recoverable": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        },
        "ActiveRecoveries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        },
        "Proxy": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "Sudo": {
        "Key": {
          "required": [],
          "optional": [],
          "description": "Storage item from Sudo pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "ElectionProviderMultiPhase": {
        "Round": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "CurrentPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "QueuedSolution": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "Snapshot": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "DesiredTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SnapshotMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionNextIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedSubmissionsMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinimumUntrustedScore": {
          "required": [],
          "optional": [],
          "description": "Storage item from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        }
      },
      "VoterList": {
        "ListNodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "CounterForListNodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "ListBags": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "NextNodeAutoRebagged": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        },
        "Lock": {
          "required": [],
          "optional": [],
          "description": "Storage item from VoterList pallet",
          "returnType": "unknown"
        }
      },
      "NominationPools": {
        "TotalValueLocked": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MinJoinBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MinCreateBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPoolMembersPerPool": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "GlobalMaxCommission": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "PoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForPoolMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "BondedPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForBondedPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "RewardPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForRewardPools": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "SubPoolsStorage": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForSubPoolsStorage": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "Metadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "LastPoolId": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "ReversePoolIdLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "CounterForReversePoolIdLookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        },
        "ClaimPermissions": {
          "required": [],
          "optional": [],
          "description": "Storage item from NominationPools pallet",
          "returnType": "unknown"
        }
      },
      "FastUnstake": {
        "Head": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "Queue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "CounterForQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        },
        "ErasToCheckPerBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from FastUnstake pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "LastSpendPeriod": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "DelegatedStaking": {
        "Delegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "CounterForDelegators": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "Agents": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "CounterForAgents": {
          "required": [],
          "optional": [],
          "description": "Storage item from DelegatedStaking pallet",
          "returnType": "unknown"
        }
      },
      "Configuration": {
        "ActiveConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "PendingConfigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "BypassConsistencyCheck": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        }
      },
      "ParasShared": {
        "CurrentSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "AllowedRelayParents": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        }
      },
      "ParaInclusion": {
        "V1": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInclusion pallet",
          "returnType": "unknown"
        }
      },
      "ParaInherent": {
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        },
        "OnChainVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        }
      },
      "ParaScheduler": {
        "ValidatorGroups": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "SessionStartBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "ClaimQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "PvfActiveVoteMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PvfActiveVoteList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Parachains": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ParaLifecycles": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Heads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "MostRecentContext": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CurrentCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeMeta": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodePruning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgradesAt": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "AuthorizedCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAheadSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeCooldowns": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ActionsQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingParasGenesis": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHashRefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        }
      },
      "Initializer": {
        "HasInitialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        },
        "BufferedSessionChanges": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        }
      },
      "Dmp": {
        "DownwardMessageQueues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DownwardMessageQueueHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        }
      },
      "Hrmp": {
        "HrmpOpenChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpAcceptedChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpWatermarks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannels": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpIngressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpEgressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelContents": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelDigests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        }
      },
      "ParaSessionInfo": {
        "AssignmentKeysUnsafe": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "EarliestStoredSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "Sessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "AccountKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "SessionExecutorParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        }
      },
      "ParasDisputes": {
        "LastPrunedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Disputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "BackersOnDisputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Frozen": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        }
      },
      "ParasSlashing": {
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        },
        "ValidatorSetCounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        }
      },
      "OnDemandAssignmentProvider": {
        "ParaIdAffinity": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "QueueStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "FreeEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "AffinityEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "Revenue": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "Credits": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "CoretimeAssignmentProvider": {
        "CoreSchedules": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "CoreDescriptors": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "PendingSwap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "Paras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "NextFreeParaId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "Leases": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "AuctionCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "AuctionInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "ReservedAmounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "Winning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "Funds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NewRaise": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "EndingsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NextFundIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "AssignedSlots": {
        "PermanentSlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "PermanentSlotCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "TemporarySlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "TemporarySlotCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "ActiveTemporarySlotCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "MaxTemporarySlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "MaxPermanentSlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        }
      },
      "StakingAhClient": {
        "ValidatorSet": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        },
        "IncompleteValidatorSetReport": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        },
        "ValidatorPoints": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        },
        "Mode": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        },
        "NextSessionChangesValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        },
        "ValidatorSetAppliedAt": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        },
        "BufferedOffences": {
          "required": [],
          "optional": [],
          "description": "Storage item from StakingAhClient pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "Cursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "Historic": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AuthorizedAliases": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "AssetRate": {
        "ConversionRateToNative": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRate pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "ValidatorSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "GenesisBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        }
      },
      "Mmr": {
        "RootHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "NumberOfLeaves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "Nodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        }
      },
      "BeefyMmrLeaf": {
        "BeefyAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from BeefyMmrLeaf pallet",
          "returnType": "unknown"
        },
        "BeefyNextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from BeefyMmrLeaf pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Babe": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "plan_config_change": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "claim": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "free": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "bond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "validate": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "nominate": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_payee": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_controller": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "increase_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "scale_validator_count": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_no_eras": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_new_era": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_invulnerables": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_unstake": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_new_era_always": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "cancel_deferred_slash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "payout_stakers": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "rebond": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "reap_stash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "kick": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_staking_configs": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "chill_other": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "force_apply_min_commission": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "set_min_commission": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "payout_stakers_by_page": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "update_payee": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "deprecate_controller_batch": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "restore_ledger": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "migrate_currency": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "manual_slash": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "set_parameter": {
          "parameters": [],
          "description": "Call from Parameters pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "note_stalled": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "if_else": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as_fallible": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "add_registrar": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_subs": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "clear_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "request_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "cancel_request": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fee": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_account_id": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fields": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "provide_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "rename_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "quit_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_username_for": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "accept_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_expired_approval": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_primary_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "unbind_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        }
      },
      "Recovery": {
        "as_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "set_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "create_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "initiate_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "vouch_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "claim_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "close_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "remove_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "cancel_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "vest": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vest_other": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "merge_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_remove_vesting_schedule": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "sudo": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_unchecked_weight": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "set_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_as": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "remove_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "ElectionProviderMultiPhase": {
        "submit_unsigned": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "set_minimum_untrusted_score": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "set_emergency_election_result": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "submit": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "governance_fallback": {
          "parameters": [],
          "description": "Call from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        }
      },
      "VoterList": {
        "rebag": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        },
        "put_in_front_of": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        },
        "put_in_front_of_other": {
          "parameters": [],
          "description": "Call from VoterList pallet",
          "returnType": "void"
        }
      },
      "NominationPools": {
        "join": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "bond_extra": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_payout": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "unbond": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "pool_withdraw_unbonded": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "withdraw_unbonded": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "create_with_pool_id": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "nominate": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_state": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_configs": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "update_roles": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "chill": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "bond_extra_other": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_claim_permission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_payout_other": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_max": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_change_rate": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "claim_commission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "adjust_pool_deposit": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "set_commission_claim_permission": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "apply_slash": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "migrate_delegation": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        },
        "migrate_pool_to_delegate_stake": {
          "parameters": [],
          "description": "Call from NominationPools pallet",
          "returnType": "void"
        }
      },
      "FastUnstake": {
        "register_fast_unstake": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        },
        "control": {
          "parameters": [],
          "description": "Call from FastUnstake pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "Configuration": {
        "set_validation_upgrade_cooldown": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_code_retention_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_code_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_pov_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_head_data_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_coretime_cores": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_group_rotation_frequency": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_paras_availability_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduling_lookahead": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators_per_core": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_post_conclusion_acceptance_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_no_show_slots": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_n_delay_tranches": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_zeroth_delay_tranche_width": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_needed_approvals": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_relay_vrf_modulo_samples": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_count": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_downward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_open_request_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_sender_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_recipient_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_capacity": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_total_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_inbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_outbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_pvf_voting_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_bypass_consistency_check": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_async_backing_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_executor_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_base_fee": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_fee_variability": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_queue_max_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_target_queue_utilization": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_backing_votes": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_node_feature": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_approval_voting_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduler_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        }
      },
      "ParaInherent": {
        "enter": {
          "parameters": [],
          "description": "Call from ParaInherent pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "force_set_current_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_current_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_note_new_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_queue_action": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "add_trusted_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "poke_unused_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "include_pvf_check_statement": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_most_recent_context": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "remove_upgrade_cooldown": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "authorize_force_set_current_code_hash": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "apply_authorized_force_set_current_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        }
      },
      "Initializer": {
        "force_approve": {
          "parameters": [],
          "description": "Call from Initializer pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "hrmp_init_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_accept_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_close_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_clean_hrmp": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_open": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_close": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_cancel_open_request": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_open_hrmp_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_system_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "poke_channel_deposits": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_channel_with_system": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "force_unfreeze": {
          "parameters": [],
          "description": "Call from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "ParasSlashing": {
        "report_dispute_lost_unsigned": {
          "parameters": [],
          "description": "Call from ParasSlashing pallet",
          "returnType": "void"
        }
      },
      "OnDemandAssignmentProvider": {
        "place_order_allow_death": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "place_order_keep_alive": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "place_order_with_credits": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "force_register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "swap": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "remove_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "reserve": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "add_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "set_current_head": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "force_lease": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "clear_all_leases": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "trigger_onboard": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        }
      },
      "ParasSudoWrapper": {
        "sudo_schedule_para_initialize": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_schedule_para_cleanup": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_schedule_parathread_upgrade": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_schedule_parachain_downgrade": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_queue_downward_xcm": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_establish_hrmp_channel": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "new_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "bid": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "cancel_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "create": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "edit": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "add_memo": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "poke": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute_all": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "AssignedSlots": {
        "assign_perm_parachain_slot": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "assign_temp_parachain_slot": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "unassign_parachain_slot": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "set_max_permanent_slots": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "set_max_temporary_slots": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "request_core_count": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "request_revenue_at": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "credit_account": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "assign_core": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        }
      },
      "StakingAhClient": {
        "validator_set": {
          "parameters": [],
          "description": "Call from StakingAhClient pallet",
          "returnType": "void"
        },
        "set_mode": {
          "parameters": [],
          "description": "Call from StakingAhClient pallet",
          "returnType": "void"
        },
        "force_on_migration_end": {
          "parameters": [],
          "description": "Call from StakingAhClient pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "force_set_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_set_active_cursor": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "force_onboard_mbms": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "clear_historic": {
          "parameters": [],
          "description": "Call from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "send": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "add_authorized_alias": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "remove_authorized_alias": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "remove_all_authorized_aliases": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "create": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "update": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "remove": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        }
      },
      "RootTesting": {
        "fill_block": {
          "parameters": [],
          "description": "Call from RootTesting pallet",
          "returnType": "void"
        },
        "trigger_defensive": {
          "parameters": [],
          "description": "Call from RootTesting pallet",
          "returnType": "void"
        }
      },
      "MetaTx": {
        "dispatch": {
          "parameters": [],
          "description": "Call from MetaTx pallet",
          "returnType": "void"
        }
      },
      "Beefy": {
        "report_double_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_double_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "set_new_genesis": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        }
      },
      "IdentityMigrator": {
        "reap_identity": {
          "parameters": [],
          "description": "Call from IdentityMigrator pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from IdentityMigrator pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "RejectedInvalidAuthorizedUpgrade": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "IndexAssigned": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFreed": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFrozen": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "EraPaid": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SlashReported": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "OldSlashingReportDiscarded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakersElected": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Bonded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Unbonded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Kicked": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakingElectionFailed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Chilled": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "PayoutStarted": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ValidatorPrefsSet": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SnapshotVotersSizeExceeded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "SnapshotTargetsSizeExceeded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ForceEra": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "ControllerBatchDeprecated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "CurrencyMigrated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        }
      },
      "Offences": {
        "Offence": {
          "fields": [],
          "description": "Event from Offences pallet",
          "returnType": "void"
        }
      },
      "Historical": {
        "RootStored": {
          "fields": [],
          "description": "Event from Historical pallet",
          "returnType": "void"
        },
        "RootsPruned": {
          "fields": [],
          "description": "Event from Historical pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "Updated": {
          "fields": [],
          "description": "Event from Parameters pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "NewQueued": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorDisabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        },
        "ValidatorReenabled": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "NewAuthorities": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Paused": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Resumed": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseMainSuccess": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "IfElseFallbackCalled": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "IdentitySet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityCleared": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementRequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementUnrequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementGiven": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "RegistrarAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentitiesSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRenamed": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRevoked": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameQueued": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PreapprovalExpired": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PrimaryUsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "DanglingUsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameUnbound": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        }
      },
      "Recovery": {
        "RecoveryCreated": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryInitiated": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryVouched": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryClosed": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "AccountRecovered": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryRemoved": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingCreated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingCompleted": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "AgendaIncomplete": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "Sudid": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyRemoved": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "SudoAsDone": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureKilled": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "DepositPoked": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "ElectionProviderMultiPhase": {
        "SolutionStored": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "ElectionFinalized": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "ElectionFailed": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "Rewarded": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        },
        "PhaseTransitioned": {
          "fields": [],
          "description": "Event from ElectionProviderMultiPhase pallet",
          "returnType": "void"
        }
      },
      "VoterList": {
        "Rebagged": {
          "fields": [],
          "description": "Event from VoterList pallet",
          "returnType": "void"
        },
        "ScoreUpdated": {
          "fields": [],
          "description": "Event from VoterList pallet",
          "returnType": "void"
        }
      },
      "NominationPools": {
        "Created": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Bonded": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PaidOut": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Unbonded": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "StateChanged": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "RolesUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolSlashed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "UnbondingPoolSlashed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolMaxCommissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionChangeRateUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionClaimPermissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolCommissionClaimed": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MinBalanceDeficitAdjusted": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MinBalanceExcessAdjusted": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MemberClaimPermissionUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "MetadataUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolNominationMade": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "PoolNominatorChilled": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        },
        "GlobalParamsUpdated": {
          "fields": [],
          "description": "Event from NominationPools pallet",
          "returnType": "void"
        }
      },
      "FastUnstake": {
        "Unstaked": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "BatchChecked": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "BatchFinished": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        },
        "InternalError": {
          "fields": [],
          "description": "Event from FastUnstake pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteUnlocked": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "DelegatedStaking": {
        "Delegated": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "Released": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        },
        "MigratedDelegation": {
          "fields": [],
          "description": "Event from DelegatedStaking pallet",
          "returnType": "void"
        }
      },
      "ParaInclusion": {
        "CandidateBacked": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateIncluded": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateTimedOut": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "UpwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "CurrentCodeUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CurrentHeadUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CodeUpgradeScheduled": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "NewHeadNoted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "ActionQueued": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckStarted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckAccepted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckRejected": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "UpgradeCooldownRemoved": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CodeAuthorized": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "OpenChannelRequested": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelCanceled": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelAccepted": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "ChannelClosed": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpChannelForceOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpSystemChannelOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelDepositsUpdated": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "DisputeInitiated": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "DisputeConcluded": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "Revert": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "OnDemandAssignmentProvider": {
        "OnDemandOrderPlaced": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "SpotPriceSet": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "AccountCredited": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "Registered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Deregistered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Swapped": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "NewLeasePeriod": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        },
        "Leased": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "AuctionStarted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "AuctionClosed": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "ReserveConfiscated": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "BidAccepted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "WinningOffset": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "Created": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Contributed": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Withdrew": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "PartiallyRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AllRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Dissolved": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "HandleBidResult": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Edited": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "MemoUpdated": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AddedToNewRaise": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "AssignedSlots": {
        "PermanentSlotAssigned": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        },
        "TemporarySlotAssigned": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        },
        "MaxPermanentSlotsChanged": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        },
        "MaxTemporarySlotsChanged": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "RevenueInfoRequested": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        },
        "CoreAssigned": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        }
      },
      "StakingAhClient": {
        "ValidatorSetReceived": {
          "fields": [],
          "description": "Event from StakingAhClient pallet",
          "returnType": "void"
        },
        "CouldNotMergeAndDropped": {
          "fields": [],
          "description": "Event from StakingAhClient pallet",
          "returnType": "void"
        },
        "SetTooSmallAndDropped": {
          "fields": [],
          "description": "Event from StakingAhClient pallet",
          "returnType": "void"
        },
        "Unexpected": {
          "fields": [],
          "description": "Event from StakingAhClient pallet",
          "returnType": "void"
        }
      },
      "MultiBlockMigrations": {
        "UpgradeStarted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "UpgradeFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationSkipped": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationAdvanced": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationCompleted": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "MigrationFailed": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        },
        "HistoricCleared": {
          "fields": [],
          "description": "Event from MultiBlockMigrations pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "Attempted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SendFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ProcessXcmError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasAuthorized": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasAuthorizationRemoved": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AliasesAuthorizationsRemoved": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "AssetRateCreated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateRemoved": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateUpdated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        }
      },
      "RootTesting": {
        "DefensiveTestCall": {
          "fields": [],
          "description": "Event from RootTesting pallet",
          "returnType": "void"
        }
      },
      "MetaTx": {
        "Dispatched": {
          "fields": [],
          "description": "Event from MetaTx pallet",
          "returnType": "void"
        }
      },
      "IdentityMigrator": {
        "IdentityReaped": {
          "fields": [],
          "description": "Event from IdentityMigrator pallet",
          "returnType": "void"
        },
        "DepositUpdated": {
          "fields": [],
          "description": "Event from IdentityMigrator pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochDuration": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "ExpectedBlockTime": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "HistoryDepth": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "SessionsPerEra": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "BondingDuration": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "SlashDeferDuration": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxExposurePageSize": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxValidatorSet": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxUnlockingChunks": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "KeyDeposit": {
          "type": "unknown",
          "description": "Constant from Session pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "BasicDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "ByteDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "SubAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSubAccounts": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxRegistrars": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernameExpiration": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameGracePeriod": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSuffixLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxUsernameLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Recovery": {
        "ConfigDepositBase": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "FriendDepositFactor": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "MaxFriends": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "RecoveryDeposit": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        },
        "MaxVestingSchedules": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "ElectionProviderMultiPhase": {
        "BetterSignedThreshold": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "OffchainRepeat": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerTxPriority": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxSubmissions": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedMaxRefunds": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedRewardBase": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedDepositByte": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "SignedDepositWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MaxWinners": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MaxBackersPerWinner": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxLength": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxWeight": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxVotesPerVoter": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        },
        "MinerMaxWinners": {
          "type": "unknown",
          "description": "Constant from ElectionProviderMultiPhase pallet",
          "returnType": "unknown"
        }
      },
      "VoterList": {
        "BagThresholds": {
          "type": "unknown",
          "description": "Constant from VoterList pallet",
          "returnType": "unknown"
        },
        "MaxAutoRebagPerBlock": {
          "type": "unknown",
          "description": "Constant from VoterList pallet",
          "returnType": "unknown"
        }
      },
      "NominationPools": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxPointsToBalance": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        },
        "MaxUnbonding": {
          "type": "unknown",
          "description": "Constant from NominationPools pallet",
          "returnType": "unknown"
        }
      },
      "FastUnstake": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from FastUnstake pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "pot_account": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "DelegatedStaking": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from DelegatedStaking pallet",
          "returnType": "unknown"
        },
        "SlashRewardFraction": {
          "type": "unknown",
          "description": "Constant from DelegatedStaking pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "UnsignedPriority": {
          "type": "unknown",
          "description": "Constant from Paras pallet",
          "returnType": "unknown"
        }
      },
      "OnDemandAssignmentProvider": {
        "TrafficDefaultValue": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "MaxHistoricalRevenue": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "ParaDeposit": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "LeasePeriod": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        },
        "LeaseOffset": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "EndingPeriod": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SampleLength": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SlotRangeCount": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "LeasePeriodsPerSlot": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "MinContribution": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "RemoveKeysLimit": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "AssignedSlots": {
        "PermanentSlotLeasePeriodLength": {
          "type": "unknown",
          "description": "Constant from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "TemporarySlotLeasePeriodLength": {
          "type": "unknown",
          "description": "Constant from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "MaxTemporarySlotPerLeasePeriod": {
          "type": "unknown",
          "description": "Constant from AssignedSlots pallet",
          "returnType": "unknown"
        }
      },
      "Coretime": {
        "BrokerId": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        },
        "BrokerPotLocation": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        }
      },
      "MultiBlockMigrations": {
        "CursorMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        },
        "IdentifierMaxLen": {
          "type": "unknown",
          "description": "Constant from MultiBlockMigrations pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "UniversalLocation": {
          "type": "unknown",
          "description": "Constant from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AdvertisedXcmVersion": {
          "type": "unknown",
          "description": "Constant from XcmPallet pallet",
          "returnType": "unknown"
        },
        "MaxLockers": {
          "type": "unknown",
          "description": "Constant from XcmPallet pallet",
          "returnType": "unknown"
        },
        "MaxRemoteLockConsumers": {
          "type": "unknown",
          "description": "Constant from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; system_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "RuntimeViewFunction": {
        "execute_view_function": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ prefix: FixedSizeBinary<16>; suffix: FixedSizeBinary<16>; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Binary; success: true; } | { value: Enum<{ NotImplemented: undefined; NotFound: { prefix: FixedSizeBinary<16>; suffix: FixedSizeBinary<16>; }; Codec: undefined; }>; success: false; }",
          "description": "Runtime call from RuntimeViewFunction API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: Enum<{ Invalid: Enum<{ Call: undefined; Payment: undefined; Future: undefined; Stale: undefined; BadProof: undefined; AncientBirthBlock: undefined; ExhaustsResources: undefined; Custom: number; ... 4 more ...; UnknownOrigin: undefined; }>; Unknown: TransactionValidityUnknownTransaction; }>; success: false; ...",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "ParachainHost": {
        "validators": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validator_groups": {
          "parameters": [],
          "returnType": "[number[][], { session_start_block: number; group_rotation_frequency: number; now: number; }]",
          "description": "Runtime call from ParachainHost API"
        },
        "availability_cores": {
          "parameters": [],
          "returnType": "Enum<{ Occupied: { next_up_on_available?: { para_id: number; collator: FixedSizeBinary<32> | undefined; } | undefined; occupied_since: number; time_out_at: number; next_up_on_time_out?: { ...; } | undefined; availability: { ...; }; group_responsible: number; candidate_hash: FixedSizeBinary<...>; candidate_descriptor...",
          "description": "Runtime call from ParachainHost API"
        },
        "persisted_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "assumed_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "[{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; }, FixedSizeBinary<32>] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "check_validation_outputs": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "session_index_for_child": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<32>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_events": {
          "parameters": [],
          "returnType": "Enum<{ CandidateBacked: [{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<...>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, Binary, number, number]; ...",
          "description": "Runtime call from ParachainHost API"
        },
        "dmq_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ sent_at: number; msg: Binary; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "inbound_hrmp_channels_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "[number, { data: Binary; sent_at: number; }[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_by_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "on_chain_votes": {
          "parameters": [],
          "returnType": "{ session: number; backing_validators_per_candidate: [{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; ... 7 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, [...][]][]; disputes: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "session_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ dispute_period: number; no_show_slots: number; n_delay_tranches: number; zeroth_delay_tranche_width: number; needed_approvals: number; relay_vrf_modulo_samples: number; active_validator_indices: number[]; ... 5 more ...; n_cores: number; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_pvf_check_statement": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ session_index: number; accept: boolean; subject: FixedSizeBinary<32>; validator_index: number; }"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<64>"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "pvfs_require_precheck": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "FixedSizeBinary<32> | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "disputes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { start: number; validators_for: { bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }; validators_against: { ...; }; concluded_at: number | undefined; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "session_executor_params": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "PolkadotPrimitivesV6ExecutorParamsExecutorParam[] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "unapplied_slashes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { keys: [number, FixedSizeBinary<32>][]; kind: SlashingOffenceKind; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_report_dispute_lost": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ kind: SlashingOffenceKind; validator_index: number; time_slot: { session_index: number; candidate_hash: FixedSizeBinary<32>; }; validator_id: FixedSizeBinary<...>; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "minimum_backing_votes": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "para_backing_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ constraints: { max_code_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ump_remaining_bytes: number; ... 7 more ...; future_validation_code: [...] | undefined; }; pending_availability: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "async_backing_params": {
          "parameters": [],
          "returnType": "{ max_candidate_depth: number; allowed_ancestry_len: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "disabled_validators": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from ParachainHost API"
        },
        "node_features": {
          "parameters": [],
          "returnType": "{ bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "approval_voting_params": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "claim_queue": {
          "parameters": [],
          "returnType": "[number, number[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "candidates_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { core_index: number; validation_code_hash: FixedSizeBinary<32>; para_id: number; version: number; session_index: number; relay_parent: FixedSizeBinary<32>; ... 5 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_bomb_limit": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "backing_constraints": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ max_code_size: number; max_head_data_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ... 8 more ...; future_validation_code: [...] | undefined; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "scheduling_lookahead": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "para_ids": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from ParachainHost API"
        }
      },
      "BeefyApi": {
        "beefy_genesis": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "validator_set": {
          "parameters": [],
          "returnType": "{ id: bigint; validators: FixedSizeBinary<33>[]; } | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_double_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ first: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; second: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_fork_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ vote: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; header: { ...; }; ancestry_proof: Binary; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_future_block_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<33>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_ancestry_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        }
      },
      "MmrApi": {
        "mmr_root": {
          "parameters": [],
          "returnType": "{ value: FixedSizeBinary<32>; success: true; } | { value: MmrPrimitivesError; success: false; }",
          "description": "Runtime call from MmrApi API"
        },
        "mmr_leaf_count": {
          "parameters": [],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: bigint; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "generate_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number[]"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: [Binary[], { items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }]; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof_stateless": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "Binary[]"
            },
            {
              "name": "param2",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        }
      },
      "BeefyMmrApi": {
        "authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        },
        "next_authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        }
      },
      "GrandpaApi": {
        "grandpa_authorities": {
          "parameters": [],
          "returnType": "[FixedSizeBinary<32>, bigint][]",
          "description": "Runtime call from GrandpaApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ set_id: bigint; equivocation: GrandpaEquivocation; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from GrandpaApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GrandpaApi API"
        },
        "current_set_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from GrandpaApi API"
        }
      },
      "BabeApi": {
        "configuration": {
          "parameters": [],
          "returnType": "{ c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; slot_duration: bigint; epoch_length: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; }",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch_start": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "next_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BabeApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ offender: FixedSizeBinary<32>; slot: bigint; first_header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<...>; digest: DigestItem[]; }; second_header: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BabeApi API"
        }
      },
      "AuthorityDiscoveryApi": {
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuthorityDiscoveryApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "TransactionPaymentCallApi": {
        "query_call_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 50 more ...; IdentityMigrator: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_call_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 50 more ...; IdentityMigrator: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentCallApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: XcmVersionedAssetId[]; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "XcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: bigint; success: true; } | { value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: Enum<{ Root: undefined; Signed: SS58String; None: undefined; Authorized: undefined; }>; Origins: WestendRuntimeGovernanceOriginsPalletCustomOriginsOrigin; ParachainsOrigin: { ...; }; XcmPallet: Enum<...>; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 50 more ...; IdentityMigrator: Enum<...>; }>"
            },
            {
              "name": "param2",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }; success: true; } | { ...; }; emitted_events: Enum<...>[]; local_xcm?: XcmVersio...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "XcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: Enum<{ Complete: { used: { ref_time: bigint; proof_size: bigint; }; }; Incomplete: { ...; }; Error: { ...; }; }>; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true...",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "NominationPoolsApi": {
        "pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "points_to_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "balance_to_points": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_pending_slash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_pending_slash": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_needs_delegate_migration": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_needs_delegate_migration": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "member_total_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from NominationPoolsApi API"
        },
        "pool_accounts": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "FixedSizeArray<2, SS58String>",
          "description": "Runtime call from NominationPoolsApi API"
        }
      },
      "StakingApi": {
        "nominations_quota": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from StakingApi API"
        },
        "eras_stakers_page_count": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from StakingApi API"
        },
        "pending_rewards": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from StakingApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      },
      "TrustedQueryApi": {
        "is_trusted_reserve": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedAsset"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: Enum<{ VersionedAssetConversionFailed: undefined; VersionedLocationConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from TrustedQueryApi API"
        },
        "is_trusted_teleporter": {
          "parameters": [
            {
              "name": "param0",
              "type": "XcmVersionedAsset"
            },
            {
              "name": "param1",
              "type": "XcmVersionedLocation"
            }
          ],
          "returnType": "{ value: boolean; success: true; } | { value: Enum<{ VersionedAssetConversionFailed: undefined; VersionedLocationConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from TrustedQueryApi API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Babe": {
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Indices": {
        "NotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Permanent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Staking": {
        "NotController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPaired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyTargets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSlashIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMoreChunks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUnlockChunk": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundedTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEraToReward": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNumberOfNominations": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSortedAndUnique": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectHistoryDepth": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectSlashingSpans": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyTargets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotChillOther": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyNominators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyValidators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ControllerDeprecated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotRestoreLedger": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardDestinationRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VirtualStakerNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReapStash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Restricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Grandpa": {
        "PauseFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ResumeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChangePending": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooSoon": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Identity": {
        "TooManySubAccounts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNamed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeChanged": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StickyJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementGiven": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRegistrars": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSub": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementForDifferentIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementPaymentFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSuffix": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUsernameAuthority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAllocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequiresSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UsernameTaken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyUnbinding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPrivileges": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Recovery": {
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFriends": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxFriends": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSorted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRecoverable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRecoverable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFriend": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelayPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVouched": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Threshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StillActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "NotVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AtMaxVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ScheduleIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidScheduleParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Sudo": {
        "RequireSudo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Sudo pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ElectionProviderMultiPhase": {
        "PreDispatchEarlySubmission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchWrongWinnerCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchWeakSubmission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedQueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedCannotPayDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedInvalidWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedTooMuchWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OcwCallWrongEra": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingSnapshotMetadata": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSubmissionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FallbackFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyWinners": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreDispatchDifferentRound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ElectionProviderMultiPhase pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "VoterList": {
        "List": {
          "type": "PlainDescriptor<Enum<{ Duplicate: undefined; NotHeavier: undefined; NotInSameBag: undefined; NodeNotFound: undefined; Locked: undefined; }>>",
          "description": "Error from VoterList pallet",
          "returnType": "PlainDescriptor<Enum<{ Duplicate: undefined; NotHeavier: undefined; NotInSameBag: undefined; NodeNotFound: undefined; Locked: undefined; }>>"
        },
        "Locked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from VoterList pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "NominationPools": {
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolMemberNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardPoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SubPoolsNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountBelongsToOtherPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FullyUnbonding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxUnbondingLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotWithdrawAny": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinimumBondNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OverflowRisk": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDestroying": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNominator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotKickerOrDestroying": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOpen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPools": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPoolMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CanNotChangeState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoesNotHavePermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MetadataExceedsMaxLen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Defensive": {
          "type": "PlainDescriptor<Enum<{ NotEnoughSpaceInUnbondPool: undefined; PoolNotFound: undefined; RewardPoolNotFound: undefined; SubPoolsNotFound: undefined; BondedStashKilledPrematurely: undefined; DelegationUnsupported: undefined; SlashNotApplied: undefined; }>>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<Enum<{ NotEnoughSpaceInUnbondPool: undefined; PoolNotFound: undefined; RewardPoolNotFound: undefined; SubPoolsNotFound: undefined; BondedStashKilledPrematurely: undefined; DelegationUnsupported: undefined; SlashNotApplied: undefined; }>>"
        },
        "PartialUnbondNotAllowedPermissionlessly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxCommissionRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionExceedsMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionExceedsGlobalMaximum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionChangeThrottled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CommissionChangeRateNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPendingCommission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoCommissionCurrentSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolIdInUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BondExtraRestricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToAdjust": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlashTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMigrated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Restricted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NominationPools pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FastUnstake": {
        "NotController": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFullyBonded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyHead": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FastUnstake pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "DelegatedStaking": {
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStaking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRewardDestination": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDelegation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAgent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnappliedSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToSlash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DelegatedStaking pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Configuration": {
        "InvalidNewValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Configuration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInclusion": {
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrematureCodeUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NewCodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedRelayParent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssignment": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidGroupIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataHashMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectDownwardMessageHandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUpwardMessages": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HrmpWatermarkMishandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOutboundHrmp": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidationCodeHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaHeadMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInherent": {
        "TooManyInclusionInherents": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParentHeader": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InherentDataFilteredDuringExecution": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Paras": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOnboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOffboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementStale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckInvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckDoubleVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckSubjectInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgradeCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBlockNumber": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Hrmp": {
        "OpenHrmpChannelToSelf": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelInvalidRecipient": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroCapacity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelCapacityExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroMessageSize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelMessageSizeExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelAlreadyUnderway": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CancelHrmpOpenChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChannelCreationNotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasDisputes": {
        "DuplicateDisputeStatementSets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AncientDisputeStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SingleSidedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaliciousBacker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingBackingVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnconfirmedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasSlashing": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSessionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCandidateHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidatorIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexIdMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateSlashingReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OnDemandAssignmentProvider": {
        "QueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpotPriceHigherThanMaxAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientCredits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CoretimeAssignmentProvider": {
        "AssignmentsEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedInsert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Registrar": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDeregister": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReserved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Slots": {
        "ParaNotOnboarding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasSudoWrapper": {
        "ParaDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedsMaxMessageSize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unroutable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CouldntCleanup": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyCores": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Auctions": {
        "AuctionInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeasePeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCurrentAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AuctionEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyLeasedOut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Crowdloan": {
        "FirstPeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FirstPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodBeforeFirstPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotEndInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EndTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParaId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CapExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionPeriodOver": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidOrLeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundNotEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoContributions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReadyToDissolve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MemoTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInNewRaise": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VrfDelayInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoLeasePeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssignedSlots": {
        "ParaDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlotAlreadyAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlotNotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OngoingLeaseExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPermanentSlotsExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxTemporarySlotsExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Coretime": {
        "NotBroker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestedFutureRevenue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTransferFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StakingAhClient": {
        "Blocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StakingAhClient pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MultiBlockMigrations": {
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiBlockMigrations pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmPallet": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAuthorizedAliases": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExpiresInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AliasNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncompleteWithError": {
          "type": "PlainDescriptor<{ index: number; error: Enum<{ Overflow: undefined; Unimplemented: undefined; UntrustedReserveLocation: undefined; UntrustedTeleportLocation: undefined; LocationFull: undefined; LocationNotInvertible: undefined; ... 34 more ...; ExceedsStackLimit: undefined; }>; }>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<{ index: number; error: Enum<{ Overflow: undefined; Unimplemented: undefined; UntrustedReserveLocation: undefined; UntrustedTeleportLocation: undefined; LocationFull: undefined; LocationNotInvertible: undefined; ... 34 more ...; ExceedsStackLimit: undefined; }>; }>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRate": {
        "UnknownAssetKind": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MetaTx": {
        "BadProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MetaTx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Future": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MetaTx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Stale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MetaTx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AncientBirthBlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MetaTx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MetaTx pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Invalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MetaTx pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Beefy": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDoubleVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidForkVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFutureBlockVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProofSession": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "rococo": {
    "chainInfo": {
      "name": "rococo",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:23.529Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "GenesisSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Randomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "PendingEpochConfigChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SegmentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "UnderConstruction": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Initialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "AuthorVrfRandomness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochStart": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "Lateness": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "EpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "NextEpochConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        },
        "SkippedEpochs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "Parameters": {
        "Parameters": {
          "required": [],
          "optional": [],
          "description": "Storage item from Parameters pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "Offences": {
        "Reports": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        },
        "ConcurrentReportsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Offences pallet",
          "returnType": "unknown"
        }
      },
      "Historical": {
        "HistoricalSessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        },
        "StoredRange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Historical pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "State": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "PendingChange": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "NextForced": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Stalled": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "CurrentSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        },
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "AuthorityDiscovery": {
        "Keys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuthorityDiscovery pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipCollective": {
        "MemberCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "IdToIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "IndexToId": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        },
        "VotingCleanup": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipCollective pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipReferenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from FellowshipReferenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Claims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Total": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Signing": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        },
        "Preclaims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "IdentityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SuperOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SubsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "Registrars": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "AccountOfUsername": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Society": {
        "Parameters": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Pot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Founder": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Head": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Rules": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Payouts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "MemberCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "MemberByIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "SuspendedMembers": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "RoundCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Bids": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Candidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Skeptic": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Votes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "VoteClearCursor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "NextHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "ChallengeRoundCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "Defending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        },
        "DefenderVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Society pallet",
          "returnType": "unknown"
        }
      },
      "Recovery": {
        "Recoverable": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        },
        "ActiveRecoveries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        },
        "Proxy": {
          "required": [],
          "optional": [],
          "description": "Storage item from Recovery pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "Vesting": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "AssetRate": {
        "ConversionRateToNative": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRate pallet",
          "returnType": "unknown"
        }
      },
      "Bounties": {
        "BountyCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "Bounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyDescriptions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyApprovals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bounties pallet",
          "returnType": "unknown"
        }
      },
      "ChildBounties": {
        "ChildBountyCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ParentChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBounties": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBountyDescriptions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildrenCuratorFees": {
          "required": [],
          "optional": [],
          "description": "Storage item from ChildBounties pallet",
          "returnType": "unknown"
        }
      },
      "Nis": {
        "QueueTotals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        },
        "Queues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        },
        "Summary": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        },
        "Receipts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Nis pallet",
          "returnType": "unknown"
        }
      },
      "NisCounterpartBalances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from NisCounterpartBalances pallet",
          "returnType": "unknown"
        }
      },
      "Configuration": {
        "ActiveConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "PendingConfigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        },
        "BypassConsistencyCheck": {
          "required": [],
          "optional": [],
          "description": "Storage item from Configuration pallet",
          "returnType": "unknown"
        }
      },
      "ParasShared": {
        "CurrentSessionIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorIndices": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "ActiveValidatorKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        },
        "AllowedRelayParents": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasShared pallet",
          "returnType": "unknown"
        }
      },
      "ParaInclusion": {
        "V1": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInclusion pallet",
          "returnType": "unknown"
        }
      },
      "ParaInherent": {
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        },
        "OnChainVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaInherent pallet",
          "returnType": "unknown"
        }
      },
      "ParaScheduler": {
        "ValidatorGroups": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "AvailabilityCores": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "SessionStartBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        },
        "ClaimQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaScheduler pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "PvfActiveVoteMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PvfActiveVoteList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Parachains": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ParaLifecycles": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "Heads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "MostRecentContext": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CurrentCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodeMeta": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "PastCodePruning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeUpgradesAt": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "FutureCodeHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAheadSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpgradeCooldowns": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingUpgrades": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "ActionsQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "UpcomingParasGenesis": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHashRefs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        },
        "CodeByHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Paras pallet",
          "returnType": "unknown"
        }
      },
      "Initializer": {
        "HasInitialized": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        },
        "BufferedSessionChanges": {
          "required": [],
          "optional": [],
          "description": "Storage item from Initializer pallet",
          "returnType": "unknown"
        }
      },
      "Dmp": {
        "DownwardMessageQueues": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DownwardMessageQueueHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dmp pallet",
          "returnType": "unknown"
        }
      },
      "Hrmp": {
        "HrmpOpenChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpOpenChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpAcceptedChannelRequestCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpCloseChannelRequestsList": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpWatermarks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannels": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpIngressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpEgressChannelsIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelContents": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        },
        "HrmpChannelDigests": {
          "required": [],
          "optional": [],
          "description": "Storage item from Hrmp pallet",
          "returnType": "unknown"
        }
      },
      "ParaSessionInfo": {
        "AssignmentKeysUnsafe": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "EarliestStoredSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "Sessions": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "AccountKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        },
        "SessionExecutorParams": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParaSessionInfo pallet",
          "returnType": "unknown"
        }
      },
      "ParasDisputes": {
        "LastPrunedSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Disputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "BackersOnDisputes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Included": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        },
        "Frozen": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasDisputes pallet",
          "returnType": "unknown"
        }
      },
      "ParasSlashing": {
        "UnappliedSlashes": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        },
        "ValidatorSetCounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParasSlashing pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "OnDemandAssignmentProvider": {
        "ParaIdAffinity": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "QueueStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "FreeEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "AffinityEntries": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "Revenue": {
          "required": [],
          "optional": [],
          "description": "Storage item from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "CoretimeAssignmentProvider": {
        "CoreSchedules": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "CoreDescriptors": {
          "required": [],
          "optional": [],
          "description": "Storage item from CoretimeAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "PendingSwap": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "Paras": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        },
        "NextFreeParaId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "Leases": {
          "required": [],
          "optional": [],
          "description": "Storage item from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "AuctionCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "AuctionInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "ReservedAmounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        },
        "Winning": {
          "required": [],
          "optional": [],
          "description": "Storage item from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "Funds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NewRaise": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "EndingsCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        },
        "NextFundIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "XcmPallet": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmPallet pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "ValidatorSetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "NextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "SetIdSession": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        },
        "GenesisBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Beefy pallet",
          "returnType": "unknown"
        }
      },
      "Mmr": {
        "RootHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "NumberOfLeaves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        },
        "Nodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Mmr pallet",
          "returnType": "unknown"
        }
      },
      "MmrLeaf": {
        "BeefyAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from MmrLeaf pallet",
          "returnType": "unknown"
        },
        "BeefyNextAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from MmrLeaf pallet",
          "returnType": "unknown"
        }
      },
      "AssignedSlots": {
        "PermanentSlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "PermanentSlotCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "TemporarySlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "TemporarySlotCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "ActiveTemporarySlotCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "MaxTemporarySlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "MaxPermanentSlots": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssignedSlots pallet",
          "returnType": "unknown"
        }
      },
      "ValidatorManager": {
        "ValidatorsToRetire": {
          "required": [],
          "optional": [],
          "description": "Storage item from ValidatorManager pallet",
          "returnType": "unknown"
        },
        "ValidatorsToAdd": {
          "required": [],
          "optional": [],
          "description": "Storage item from ValidatorManager pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MigrationProcess": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "AutoLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "SignedMigrationMaxLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      },
      "Sudo": {
        "Key": {
          "required": [],
          "optional": [],
          "description": "Storage item from Sudo pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Babe": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        },
        "plan_config_change": {
          "parameters": [],
          "description": "Call from Babe pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "claim": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "free": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "set_parameter": {
          "parameters": [],
          "description": "Call from Parameters pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "report_equivocation": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "report_equivocation_unsigned": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        },
        "note_stalled": {
          "parameters": [],
          "description": "Call from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "FellowshipCollective": {
        "add_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "promote_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "demote_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "remove_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "cleanup_poll": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        },
        "exchange_member": {
          "parameters": [],
          "description": "Call from FellowshipCollective pallet",
          "returnType": "void"
        }
      },
      "FellowshipReferenda": {
        "submit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from FellowshipReferenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "mint_claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "claim_attest": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "attest": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        },
        "move_claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "add_registrar": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_subs": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "clear_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "request_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "cancel_request": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fee": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_account_id": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fields": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "provide_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "rename_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "quit_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_username_for": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "accept_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_expired_approval": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_primary_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_dangling_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        }
      },
      "Society": {
        "bid": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "unbid": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "vouch": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "unvouch": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "defender_vote": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "waive_repay": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "found_society": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "judge_suspended_member": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "set_parameters": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "punish_skeptic": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "claim_membership": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "bestow_membership": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "kick_candidate": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "resign_candidacy": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "drop_candidate": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "cleanup_candidacy": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        },
        "cleanup_challenge": {
          "parameters": [],
          "description": "Call from Society pallet",
          "returnType": "void"
        }
      },
      "Recovery": {
        "as_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "set_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "create_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "initiate_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "vouch_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "claim_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "close_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "remove_recovery": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        },
        "cancel_recovered": {
          "parameters": [],
          "description": "Call from Recovery pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "vest": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vest_other": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "merge_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "force_remove_vesting_schedule": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "create": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "update": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        },
        "remove": {
          "parameters": [],
          "description": "Call from AssetRate pallet",
          "returnType": "void"
        }
      },
      "Bounties": {
        "propose_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "approve_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "propose_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "unassign_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "accept_curator": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "award_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "claim_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "close_bounty": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        },
        "extend_bounty_expiry": {
          "parameters": [],
          "description": "Call from Bounties pallet",
          "returnType": "void"
        }
      },
      "ChildBounties": {
        "add_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "propose_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "accept_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "unassign_curator": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "award_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "claim_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        },
        "close_child_bounty": {
          "parameters": [],
          "description": "Call from ChildBounties pallet",
          "returnType": "void"
        }
      },
      "Nis": {
        "place_bid": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "retract_bid": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "fund_deficit": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "thaw_private": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "thaw_communal": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "communify": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        },
        "privatize": {
          "parameters": [],
          "description": "Call from Nis pallet",
          "returnType": "void"
        }
      },
      "NisCounterpartBalances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from NisCounterpartBalances pallet",
          "returnType": "void"
        }
      },
      "Configuration": {
        "set_validation_upgrade_cooldown": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_code_retention_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_code_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_pov_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_head_data_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_coretime_cores": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_availability_timeouts": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_group_rotation_frequency": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_paras_availability_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduling_lookahead": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators_per_core": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_validators": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_dispute_post_conclusion_acceptance_period": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_no_show_slots": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_n_delay_tranches": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_zeroth_delay_tranche_width": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_needed_approvals": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_relay_vrf_modulo_samples": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_count": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_queue_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_downward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_max_upward_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_open_request_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_sender_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_recipient_deposit": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_capacity": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_total_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_inbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_channel_max_message_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_parachain_outbound_channels": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_hrmp_max_message_num_per_candidate": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_pvf_voting_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_validation_upgrade_delay": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_bypass_consistency_check": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_async_backing_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_executor_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_base_fee": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_fee_variability": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_queue_max_size": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_target_queue_utilization": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_on_demand_ttl": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_minimum_backing_votes": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_node_feature": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_approval_voting_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        },
        "set_scheduler_params": {
          "parameters": [],
          "description": "Call from Configuration pallet",
          "returnType": "void"
        }
      },
      "ParaInherent": {
        "enter": {
          "parameters": [],
          "description": "Call from ParaInherent pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "force_set_current_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_current_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_note_new_head": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_queue_action": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "add_trusted_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "poke_unused_validation_code": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "include_pvf_check_statement": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        },
        "force_set_most_recent_context": {
          "parameters": [],
          "description": "Call from Paras pallet",
          "returnType": "void"
        }
      },
      "Initializer": {
        "force_approve": {
          "parameters": [],
          "description": "Call from Initializer pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "hrmp_init_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_accept_open_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_close_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_clean_hrmp": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_open": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_process_hrmp_close": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "hrmp_cancel_open_request": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "force_open_hrmp_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_system_channel": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "poke_channel_deposits": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        },
        "establish_channel_with_system": {
          "parameters": [],
          "description": "Call from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "force_unfreeze": {
          "parameters": [],
          "description": "Call from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "ParasSlashing": {
        "report_dispute_lost_unsigned": {
          "parameters": [],
          "description": "Call from ParasSlashing pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "OnDemandAssignmentProvider": {
        "place_order_allow_death": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "place_order_keep_alive": {
          "parameters": [],
          "description": "Call from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "force_register": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "deregister": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "swap": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "remove_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "reserve": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "add_lock": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "schedule_code_upgrade": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        },
        "set_current_head": {
          "parameters": [],
          "description": "Call from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "force_lease": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "clear_all_leases": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        },
        "trigger_onboard": {
          "parameters": [],
          "description": "Call from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "new_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "bid": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        },
        "cancel_auction": {
          "parameters": [],
          "description": "Call from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "create": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "withdraw": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "refund": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "dissolve": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "edit": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "add_memo": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "poke": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        },
        "contribute_all": {
          "parameters": [],
          "description": "Call from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "request_core_count": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "request_revenue_at": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        },
        "assign_core": {
          "parameters": [],
          "description": "Call from Coretime pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "send": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "Beefy": {
        "report_double_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_double_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "set_new_genesis": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_fork_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        },
        "report_future_block_voting_unsigned": {
          "parameters": [],
          "description": "Call from Beefy pallet",
          "returnType": "void"
        }
      },
      "IdentityMigrator": {
        "reap_identity": {
          "parameters": [],
          "description": "Call from IdentityMigrator pallet",
          "returnType": "void"
        },
        "poke_deposit": {
          "parameters": [],
          "description": "Call from IdentityMigrator pallet",
          "returnType": "void"
        }
      },
      "ParasSudoWrapper": {
        "sudo_schedule_para_initialize": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_schedule_para_cleanup": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_schedule_parathread_upgrade": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_schedule_parachain_downgrade": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_queue_downward_xcm": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        },
        "sudo_establish_hrmp_channel": {
          "parameters": [],
          "description": "Call from ParasSudoWrapper pallet",
          "returnType": "void"
        }
      },
      "AssignedSlots": {
        "assign_perm_parachain_slot": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "assign_temp_parachain_slot": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "unassign_parachain_slot": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "set_max_permanent_slots": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        },
        "set_max_temporary_slots": {
          "parameters": [],
          "description": "Call from AssignedSlots pallet",
          "returnType": "void"
        }
      },
      "ValidatorManager": {
        "register_validators": {
          "parameters": [],
          "description": "Call from ValidatorManager pallet",
          "returnType": "void"
        },
        "deregister_validators": {
          "parameters": [],
          "description": "Call from ValidatorManager pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "control_auto_migration": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "continue_migrate": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_top": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_child": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "set_signed_max_limits": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "force_set_progress": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "RootTesting": {
        "fill_block": {
          "parameters": [],
          "description": "Call from RootTesting pallet",
          "returnType": "void"
        },
        "trigger_defensive": {
          "parameters": [],
          "description": "Call from RootTesting pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "sudo": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_unchecked_weight": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "set_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "sudo_as": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        },
        "remove_key": {
          "parameters": [],
          "description": "Call from Sudo pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Indices": {
        "IndexAssigned": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFreed": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        },
        "IndexFrozen": {
          "fields": [],
          "description": "Event from Indices pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "Parameters": {
        "Updated": {
          "fields": [],
          "description": "Event from Parameters pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Offences": {
        "Offence": {
          "fields": [],
          "description": "Event from Offences pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "Grandpa": {
        "NewAuthorities": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Paused": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        },
        "Resumed": {
          "fields": [],
          "description": "Event from Grandpa pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "FellowshipCollective": {
        "MemberAdded": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "RankChanged": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "MemberRemoved": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        },
        "MemberExchanged": {
          "fields": [],
          "description": "Event from FellowshipCollective pallet",
          "returnType": "void"
        }
      },
      "FellowshipReferenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from FellowshipReferenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "Claimed": {
          "fields": [],
          "description": "Event from Claims pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "IdentitySet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityCleared": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementRequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementUnrequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementGiven": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "RegistrarAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRevoked": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameQueued": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PreapprovalExpired": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PrimaryUsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "DanglingUsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        }
      },
      "Society": {
        "Founded": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Bid": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Vouch": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "AutoUnbid": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Unbid": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Unvouch": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Inducted": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "SuspendedMemberJudgement": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "CandidateSuspended": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "MemberSuspended": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Challenged": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Vote": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "DefenderVote": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "NewParams": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Unfounded": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        },
        "Elevated": {
          "fields": [],
          "description": "Event from Society pallet",
          "returnType": "void"
        }
      },
      "Recovery": {
        "RecoveryCreated": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryInitiated": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryVouched": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryClosed": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "AccountRecovered": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        },
        "RecoveryRemoved": {
          "fields": [],
          "description": "Event from Recovery pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingCompleted": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "AssetRate": {
        "AssetRateCreated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateRemoved": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        },
        "AssetRateUpdated": {
          "fields": [],
          "description": "Event from AssetRate pallet",
          "returnType": "void"
        }
      },
      "Bounties": {
        "BountyProposed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyRejected": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyBecameActive": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyAwarded": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyClaimed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyCanceled": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyExtended": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "BountyApproved": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorProposed": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorUnassigned": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        },
        "CuratorAccepted": {
          "fields": [],
          "description": "Event from Bounties pallet",
          "returnType": "void"
        }
      },
      "ChildBounties": {
        "Added": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Claimed": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from ChildBounties pallet",
          "returnType": "void"
        }
      },
      "Nis": {
        "BidPlaced": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "BidRetracted": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "BidDropped": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Funded": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Nis pallet",
          "returnType": "void"
        }
      },
      "NisCounterpartBalances": {
        "Endowed": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from NisCounterpartBalances pallet",
          "returnType": "void"
        }
      },
      "ParaInclusion": {
        "CandidateBacked": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateIncluded": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "CandidateTimedOut": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        },
        "UpwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParaInclusion pallet",
          "returnType": "void"
        }
      },
      "Paras": {
        "CurrentCodeUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CurrentHeadUpdated": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "CodeUpgradeScheduled": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "NewHeadNoted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "ActionQueued": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckStarted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckAccepted": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        },
        "PvfCheckRejected": {
          "fields": [],
          "description": "Event from Paras pallet",
          "returnType": "void"
        }
      },
      "Hrmp": {
        "OpenChannelRequested": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelCanceled": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelAccepted": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "ChannelClosed": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpChannelForceOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "HrmpSystemChannelOpened": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        },
        "OpenChannelDepositsUpdated": {
          "fields": [],
          "description": "Event from Hrmp pallet",
          "returnType": "void"
        }
      },
      "ParasDisputes": {
        "DisputeInitiated": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "DisputeConcluded": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        },
        "Revert": {
          "fields": [],
          "description": "Event from ParasDisputes pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "OnDemandAssignmentProvider": {
        "OnDemandOrderPlaced": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        },
        "SpotPriceSet": {
          "fields": [],
          "description": "Event from OnDemandAssignmentProvider pallet",
          "returnType": "void"
        }
      },
      "Registrar": {
        "Registered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Deregistered": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        },
        "Swapped": {
          "fields": [],
          "description": "Event from Registrar pallet",
          "returnType": "void"
        }
      },
      "Slots": {
        "NewLeasePeriod": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        },
        "Leased": {
          "fields": [],
          "description": "Event from Slots pallet",
          "returnType": "void"
        }
      },
      "Auctions": {
        "AuctionStarted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "AuctionClosed": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "ReserveConfiscated": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "BidAccepted": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        },
        "WinningOffset": {
          "fields": [],
          "description": "Event from Auctions pallet",
          "returnType": "void"
        }
      },
      "Crowdloan": {
        "Created": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Contributed": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Withdrew": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "PartiallyRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AllRefunded": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Dissolved": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "HandleBidResult": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "Edited": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "MemoUpdated": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        },
        "AddedToNewRaise": {
          "fields": [],
          "description": "Event from Crowdloan pallet",
          "returnType": "void"
        }
      },
      "Coretime": {
        "RevenueInfoRequested": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        },
        "CoreAssigned": {
          "fields": [],
          "description": "Event from Coretime pallet",
          "returnType": "void"
        }
      },
      "XcmPallet": {
        "Attempted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from XcmPallet pallet",
          "returnType": "void"
        }
      },
      "IdentityMigrator": {
        "IdentityReaped": {
          "fields": [],
          "description": "Event from IdentityMigrator pallet",
          "returnType": "void"
        },
        "DepositUpdated": {
          "fields": [],
          "description": "Event from IdentityMigrator pallet",
          "returnType": "void"
        }
      },
      "AssignedSlots": {
        "PermanentSlotAssigned": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        },
        "TemporarySlotAssigned": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        },
        "MaxPermanentSlotsChanged": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        },
        "MaxTemporarySlotsChanged": {
          "fields": [],
          "description": "Event from AssignedSlots pallet",
          "returnType": "void"
        }
      },
      "ValidatorManager": {
        "ValidatorsRegistered": {
          "fields": [],
          "description": "Event from ValidatorManager pallet",
          "returnType": "void"
        },
        "ValidatorsDeregistered": {
          "fields": [],
          "description": "Event from ValidatorManager pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "Migrated": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "AutoMigrationFinished": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Halted": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "RootTesting": {
        "DefensiveTestCall": {
          "fields": [],
          "description": "Event from RootTesting pallet",
          "returnType": "void"
        }
      },
      "Sudo": {
        "Sudid": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyChanged": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "KeyRemoved": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        },
        "SudoAsDone": {
          "fields": [],
          "description": "Event from Sudo pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Babe": {
        "EpochDuration": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "ExpectedBlockTime": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Babe pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Indices": {
        "Deposit": {
          "type": "unknown",
          "description": "Constant from Indices pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Grandpa": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Grandpa pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "FellowshipReferenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from FellowshipReferenda pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Prefix": {
          "type": "unknown",
          "description": "Constant from Claims pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "BasicDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "ByteDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "SubAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSubAccounts": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxRegistrars": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernameExpiration": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSuffixLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxUsernameLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Society": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "GraceStrikes": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "PeriodSpend": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "VotingPeriod": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "ClaimPeriod": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "MaxLockDuration": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "ChallengePeriod": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "MaxPayouts": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        },
        "MaxBids": {
          "type": "unknown",
          "description": "Constant from Society pallet",
          "returnType": "unknown"
        }
      },
      "Recovery": {
        "ConfigDepositBase": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "FriendDepositFactor": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "MaxFriends": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        },
        "RecoveryDeposit": {
          "type": "unknown",
          "description": "Constant from Recovery pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        },
        "MaxVestingSchedules": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Bounties": {
        "BountyDepositBase": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyDepositPayoutDelay": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyUpdatePeriod": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMultiplier": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMax": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "CuratorDepositMin": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "BountyValueMinimum": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        },
        "MaximumReasonLength": {
          "type": "unknown",
          "description": "Constant from Bounties pallet",
          "returnType": "unknown"
        }
      },
      "ChildBounties": {
        "MaxActiveChildBountyCount": {
          "type": "unknown",
          "description": "Constant from ChildBounties pallet",
          "returnType": "unknown"
        },
        "ChildBountyValueMinimum": {
          "type": "unknown",
          "description": "Constant from ChildBounties pallet",
          "returnType": "unknown"
        }
      },
      "Nis": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "QueueCount": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MaxQueueLen": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "FifoQueueLen": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "BasePeriod": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MinBid": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MinReceipt": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "IntakePeriod": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "MaxIntakeWeight": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        },
        "ThawThrottle": {
          "type": "unknown",
          "description": "Constant from Nis pallet",
          "returnType": "unknown"
        }
      },
      "NisCounterpartBalances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from NisCounterpartBalances pallet",
          "returnType": "unknown"
        }
      },
      "Paras": {
        "UnsignedPriority": {
          "type": "unknown",
          "description": "Constant from Paras pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "OnDemandAssignmentProvider": {
        "TrafficDefaultValue": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "MaxHistoricalRevenue": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from OnDemandAssignmentProvider pallet",
          "returnType": "unknown"
        }
      },
      "Registrar": {
        "ParaDeposit": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        },
        "DataDepositPerByte": {
          "type": "unknown",
          "description": "Constant from Registrar pallet",
          "returnType": "unknown"
        }
      },
      "Slots": {
        "LeasePeriod": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        },
        "LeaseOffset": {
          "type": "unknown",
          "description": "Constant from Slots pallet",
          "returnType": "unknown"
        }
      },
      "Auctions": {
        "EndingPeriod": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SampleLength": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "SlotRangeCount": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        },
        "LeasePeriodsPerSlot": {
          "type": "unknown",
          "description": "Constant from Auctions pallet",
          "returnType": "unknown"
        }
      },
      "Crowdloan": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "MinContribution": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        },
        "RemoveKeysLimit": {
          "type": "unknown",
          "description": "Constant from Crowdloan pallet",
          "returnType": "unknown"
        }
      },
      "Coretime": {
        "BrokerId": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        },
        "BrokerPotLocation": {
          "type": "unknown",
          "description": "Constant from Coretime pallet",
          "returnType": "unknown"
        }
      },
      "Beefy": {
        "MaxAuthorities": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxNominators": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        },
        "MaxSetIdSessionEntries": {
          "type": "unknown",
          "description": "Constant from Beefy pallet",
          "returnType": "unknown"
        }
      },
      "AssignedSlots": {
        "PermanentSlotLeasePeriodLength": {
          "type": "unknown",
          "description": "Constant from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "TemporarySlotLeasePeriodLength": {
          "type": "unknown",
          "description": "Constant from AssignedSlots pallet",
          "returnType": "unknown"
        },
        "MaxTemporarySlotPerLeasePeriod": {
          "type": "unknown",
          "description": "Constant from AssignedSlots pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MaxKeyLen": {
          "type": "unknown",
          "description": "Constant from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; state_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "RococoXcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "RococoXcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: DispatchRawOrigin; Origins: WestendRuntimeGovernanceOriginsPalletCustomOriginsOrigin; ParachainsOrigin: { ...; }; XcmPallet: XcmPalletOrigin; Void: undefined; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 52 more ...; Sudo: Enum<...>; }>"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }; success: true; } | { ...; }; emitted_events: Enum<...>[]; local_xcm?: RococoXcm...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "RococoXcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: XcmV4TraitsOutcome; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true; }",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: { value: undefined; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; ... 6 more ...; Unauthorized: undefined; }>; ... 65 more ...; Sudo: { ...; }; }>; ... 9 mor...",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: TransactionValidityError; success: false; } | { value: { priority: bigint; requires: Binary[]; provides: Binary[]; longevity: bigint; propagate: boolean; }; success: true; }",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "ParachainHost": {
        "validators": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validator_groups": {
          "parameters": [],
          "returnType": "[number[][], { session_start_block: number; group_rotation_frequency: number; now: number; }]",
          "description": "Runtime call from ParachainHost API"
        },
        "availability_cores": {
          "parameters": [],
          "returnType": "CoreState[]",
          "description": "Runtime call from ParachainHost API"
        },
        "persisted_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "assumed_validation_data": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "[{ max_pov_size: number; relay_parent_number: number; parent_head: Binary; relay_parent_storage_root: FixedSizeBinary<32>; }, FixedSizeBinary<32>] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "check_validation_outputs": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "session_index_for_child": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { validation_code_hash: FixedSizeBinary<32>; signature: FixedSizeBinary<64>; para_id: number; collator: FixedSizeBinary<32>; ... 4 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "candidate_events": {
          "parameters": [],
          "returnType": "CandidateEvent[]",
          "description": "Runtime call from ParachainHost API"
        },
        "dmq_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ sent_at: number; msg: Binary; }[]",
          "description": "Runtime call from ParachainHost API"
        },
        "inbound_hrmp_channels_contents": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "[number, { data: Binary; sent_at: number; }[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_by_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "on_chain_votes": {
          "parameters": [],
          "returnType": "{ session: number; backing_validators_per_candidate: [{ descriptor: { validation_code_hash: FixedSizeBinary<32>; signature: FixedSizeBinary<64>; ... 6 more ...; para_head: FixedSizeBinary<...>; }; commitments_hash: FixedSizeBinary<...>; }, [...][]][]; disputes: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "session_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ dispute_period: number; no_show_slots: number; n_delay_tranches: number; zeroth_delay_tranche_width: number; needed_approvals: number; relay_vrf_modulo_samples: number; active_validator_indices: number[]; ... 5 more ...; n_cores: number; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_pvf_check_statement": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ session_index: number; accept: boolean; subject: FixedSizeBinary<32>; validator_index: number; }"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<64>"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "pvfs_require_precheck": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from ParachainHost API"
        },
        "validation_code_hash": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "OccupiedCoreAssumption"
            }
          ],
          "returnType": "FixedSizeBinary<32> | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "disputes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { start: number; validators_for: { bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }; validators_against: { ...; }; concluded_at: number | undefined; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "session_executor_params": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "PolkadotPrimitivesV6ExecutorParamsExecutorParam[] | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "unapplied_slashes": {
          "parameters": [],
          "returnType": "[number, FixedSizeBinary<32>, { keys: [number, FixedSizeBinary<32>][]; kind: SlashingOffenceKind; }][]",
          "description": "Runtime call from ParachainHost API"
        },
        "key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "submit_report_dispute_lost": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ kind: SlashingOffenceKind; validator_index: number; time_slot: { session_index: number; candidate_hash: FixedSizeBinary<32>; }; validator_id: FixedSizeBinary<...>; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from ParachainHost API"
        },
        "minimum_backing_votes": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "para_backing_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ constraints: { max_code_size: number; max_pov_size: number; validation_code_hash: FixedSizeBinary<32>; min_relay_parent_number: number; ump_remaining: number; ump_remaining_bytes: number; ... 7 more ...; future_validation_code: [...] | undefined; }; pending_availability: { ...; }[]; } | undefined",
          "description": "Runtime call from ParachainHost API"
        },
        "async_backing_params": {
          "parameters": [],
          "returnType": "{ max_candidate_depth: number; allowed_ancestry_len: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "disabled_validators": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from ParachainHost API"
        },
        "node_features": {
          "parameters": [],
          "returnType": "{ bytes: Uint8Array<ArrayBufferLike>; bitsLen: number; }",
          "description": "Runtime call from ParachainHost API"
        },
        "approval_voting_params": {
          "parameters": [],
          "returnType": "number",
          "description": "Runtime call from ParachainHost API"
        },
        "claim_queue": {
          "parameters": [],
          "returnType": "[number, number[]][]",
          "description": "Runtime call from ParachainHost API"
        },
        "candidates_pending_availability": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ descriptor: { validation_code_hash: FixedSizeBinary<32>; signature: FixedSizeBinary<64>; para_id: number; collator: FixedSizeBinary<32>; ... 4 more ...; para_head: FixedSizeBinary<...>; }; commitments: { ...; }; }[]",
          "description": "Runtime call from ParachainHost API"
        }
      },
      "BeefyApi": {
        "beefy_genesis": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "validator_set": {
          "parameters": [],
          "returnType": "{ id: bigint; validators: FixedSizeBinary<33>[]; } | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_double_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ first: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; second: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_fork_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ vote: { id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }; header: { ...; }; ancestry_proof: Binary; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "submit_report_future_block_voting_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ id: FixedSizeBinary<33>; signature: FixedSizeBinary<65>; commitment: { payload: [FixedSizeBinary<2>, Binary][]; block_number: number; validator_set_id: bigint; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<33>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        },
        "generate_ancestry_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BeefyApi API"
        }
      },
      "MmrApi": {
        "mmr_root": {
          "parameters": [],
          "returnType": "{ value: FixedSizeBinary<32>; success: true; } | { value: MmrPrimitivesError; success: false; }",
          "description": "Runtime call from MmrApi API"
        },
        "mmr_leaf_count": {
          "parameters": [],
          "returnType": "{ value: bigint; success: true; } | { value: MmrPrimitivesError; success: false; }",
          "description": "Runtime call from MmrApi API"
        },
        "generate_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "number[]"
            },
            {
              "name": "param1",
              "type": "number | undefined"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: [Binary[], { items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }]; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            },
            {
              "name": "param1",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        },
        "verify_proof_stateless": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "Binary[]"
            },
            {
              "name": "param2",
              "type": "{ items: FixedSizeBinary<32>[]; leaf_indices: bigint[]; leaf_count: bigint; }"
            }
          ],
          "returnType": "{ value: MmrPrimitivesError; success: false; } | { value: undefined; success: true; }",
          "description": "Runtime call from MmrApi API"
        }
      },
      "GrandpaApi": {
        "grandpa_authorities": {
          "parameters": [],
          "returnType": "[FixedSizeBinary<32>, bigint][]",
          "description": "Runtime call from GrandpaApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ set_id: bigint; equivocation: GrandpaEquivocation; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from GrandpaApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GrandpaApi API"
        },
        "current_set_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from GrandpaApi API"
        }
      },
      "BabeApi": {
        "configuration": {
          "parameters": [],
          "returnType": "{ c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; slot_duration: bigint; epoch_length: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; }",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch_start": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from BabeApi API"
        },
        "current_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "next_epoch": {
          "parameters": [],
          "returnType": "{ config: { c: FixedSizeArray<2, bigint>; allowed_slots: BabeAllowedSlots; }; duration: bigint; authorities: [FixedSizeBinary<32>, bigint][]; randomness: FixedSizeBinary<...>; epoch_index: bigint; start_slot: bigint; }",
          "description": "Runtime call from BabeApi API"
        },
        "generate_key_ownership_proof": {
          "parameters": [
            {
              "name": "param0",
              "type": "bigint"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from BabeApi API"
        },
        "submit_report_equivocation_unsigned_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ offender: FixedSizeBinary<32>; slot: bigint; first_header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<...>; digest: DigestItem[]; }; second_header: { ...; }; }"
            },
            {
              "name": "param1",
              "type": "Binary"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from BabeApi API"
        }
      },
      "AuthorityDiscoveryApi": {
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuthorityDiscoveryApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "BeefyMmrApi": {
        "authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        },
        "next_authority_set_proof": {
          "parameters": [],
          "returnType": "{ id: bigint; len: number; keyset_commitment: FixedSizeBinary<32>; }",
          "description": "Runtime call from BeefyMmrApi API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Babe": {
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Babe pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Indices": {
        "NotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Permanent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Indices pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Grandpa": {
        "PauseFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ResumeFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChangePending": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooSoon": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Grandpa pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FellowshipCollective": {
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotPolling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Ongoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoneRemaining": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Corruption": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RankTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SameMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipCollective pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "FellowshipReferenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from FellowshipReferenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Claims": {
        "InvalidEthereumSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignerHasNoClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderHasNoClaim": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PotUnderflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VestedBalanceExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Identity": {
        "TooManySubAccounts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNamed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeChanged": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StickyJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementGiven": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRegistrars": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSub": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementForDifferentIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementPaymentFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSuffix": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUsernameAuthority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAllocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequiresSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UsernameTaken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Society": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Suspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyFounded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVouching": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVouchingOnBidder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Head": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Founder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyBid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxMembers": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFounder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotHead": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRejected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Approved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Rejected": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Voted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotBidder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDefender": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotGroup": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyElevated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPunished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Society pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Recovery": {
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFriends": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxFriends": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSorted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRecoverable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRecoverable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFriend": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DelayPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVouched": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Threshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StillActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Recovery pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "NotVesting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AtMaxVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ScheduleIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidScheduleParams": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRate": {
        "UnknownAssetKind": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRate pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Bounties": {
        "InsufficientProposersBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReasonTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequireCurator": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PendingPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Premature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasActiveChildBounty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyQueued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ChildBounties": {
        "ParentBountyNotActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBountyBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyChildBounties": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ChildBounties pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Nis": {
        "DurationTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DurationTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownReceipt": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownBid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PortionTooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfunded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyFunded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Throttled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MakesDust": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCommunal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyPrivate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Nis pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "NisCounterpartBalances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from NisCounterpartBalances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Configuration": {
        "InvalidNewValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Configuration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInclusion": {
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrematureCodeUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NewCodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedRelayParent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssignment": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidGroupIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBacking": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataHashMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectDownwardMessageHandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUpwardMessages": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HrmpWatermarkMishandling": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOutboundHrmp": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidationCodeHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaHeadMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInclusion pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParaInherent": {
        "TooManyInclusionInherents": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParentHeader": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InherentOverweight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CandidatesFilteredDuringExecution": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnscheduledCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParaInherent pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Paras": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOnboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotOffboard": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementStale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckStatementFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckInvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckDoubleVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PvfCheckSubjectInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgradeCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Paras pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Hrmp": {
        "OpenHrmpChannelToSelf": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelInvalidRecipient": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroCapacity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelCapacityExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelZeroMessageSize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelMessageSizeExceedsLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AcceptHrmpChannelLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CloseHrmpChannelAlreadyUnderway": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CancelHrmpOpenChannelUnauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OpenHrmpChannelAlreadyConfirmed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ChannelCreationNotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Hrmp pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasDisputes": {
        "DuplicateDisputeStatementSets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AncientDisputeStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexOutOfBounds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateStatement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SingleSidedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaliciousBacker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingBackingVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnconfirmedDispute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasDisputes pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasSlashing": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSessionIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCandidateHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidValidatorIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorIndexIdMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateSlashingReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSlashing pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OnDemandAssignmentProvider": {
        "QueueFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpotPriceHigherThanMaxAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OnDemandAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CoretimeAssignmentProvider": {
        "AssignmentsEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OverScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnderScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedInsert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateInsert": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssignmentsNotSorted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CoretimeAssignmentProvider pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Registrar": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CodeTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HeadDataTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDeregister": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReserved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotSwap": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Registrar pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Slots": {
        "ParaNotOnboarding": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Slots pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Auctions": {
        "AuctionInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeasePeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCurrentAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AuctionEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyLeasedOut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Auctions pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Crowdloan": {
        "FirstPeriodInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FirstPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodBeforeFirstPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LastPeriodTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotEndInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EndTooFarInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidParaId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CapExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ContributionPeriodOver": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidOrLeaseActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FundNotEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoContributions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotReadyToDissolve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MemoTooLarge": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInNewRaise": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VrfDelayInProgress": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoLeasePeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Crowdloan pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Coretime": {
        "NotBroker": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequestedFutureRevenue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetTransferFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Coretime pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmPallet": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmPallet pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Beefy": {
        "InvalidKeyOwnershipProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDoubleVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidForkVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidFutureBlockVotingProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEquivocationProofSession": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateOffenceReport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidConfiguration": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Beefy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParasSudoWrapper": {
        "ParaDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ParaAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExceedsMaxMessageSize": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CouldntCleanup": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParachain": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyCores": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParasSudoWrapper pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssignedSlots": {
        "ParaDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotParathread": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpgrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotDowngrade": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlotAlreadyAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlotNotAssigned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OngoingLeaseExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxPermanentSlotsExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxTemporarySlotsExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssignedSlots pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StateTrieMigration": {
        "MaxSignedLimits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "KeyTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedMigrationNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadChildRoot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Sudo": {
        "RequireSudo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Sudo pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  },
  "hydration": {
    "chainInfo": {
      "name": "hydration",
      "hasDescriptor": true,
      "extractedAt": "2025-09-16T19:21:23.621Z"
    },
    "storage": {
      "System": {
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "InherentsApplied": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockWeight": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AllExtrinsicsLen": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExtrinsicData": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Number": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ParentHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Digest": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "Events": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "EventTopics": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "LastRuntimeUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToU32RefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "UpgradedToTripleRefCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "ExecutionPhase": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        },
        "AuthorizedUpgrade": {
          "required": [],
          "optional": [],
          "description": "Storage item from System pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "Now": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        },
        "DidUpdate": {
          "required": [],
          "optional": [],
          "description": "Storage item from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "InactiveIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Holds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        },
        "Freezes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "NextFeeMultiplier": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        },
        "StorageVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "MultiTransactionPayment": {
        "AccountCurrencyMap": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiTransactionPayment pallet",
          "returnType": "unknown"
        },
        "AcceptedCurrencies": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiTransactionPayment pallet",
          "returnType": "unknown"
        },
        "AcceptedCurrencyPrice": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiTransactionPayment pallet",
          "returnType": "unknown"
        },
        "TransactionCurrencyOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from MultiTransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Deactivated": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Approvals": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "SpendCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        },
        "Spends": {
          "required": [],
          "optional": [],
          "description": "Storage item from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "Preimage": {
        "StatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "RequestStatusFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        },
        "PreimageFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Preimage pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "IdentityOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SuperOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "SubsOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "Registrars": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "UsernameAuthorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "AccountOfUsername": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernames": {
          "required": [],
          "optional": [],
          "description": "Storage item from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Democracy": {
        "PublicPropCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "PublicProps": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "DepositOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "LowestUnbaked": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "VotingOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "LastTabledWasExternal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "NextExternal": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "Blacklist": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "Cancellations": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Democracy pallet",
          "returnType": "unknown"
        }
      },
      "TechnicalCommittee": {
        "Proposals": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "ProposalOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "Voting": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "ProposalCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "Members": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        },
        "Prime": {
          "required": [],
          "optional": [],
          "description": "Storage item from TechnicalCommittee pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "Proxies": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        },
        "Announcements": {
          "required": [],
          "optional": [],
          "description": "Storage item from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "Multisigs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Uniques": {
        "Class": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "OwnershipAcceptance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "Account": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "ClassAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "Asset": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "ClassMetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "InstanceMetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "Attribute": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "ItemPriceOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        },
        "CollectionMaxSupply": {
          "required": [],
          "optional": [],
          "description": "Storage item from Uniques pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MigrationProcess": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "AutoLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        },
        "SignedMigrationMaxLimits": {
          "required": [],
          "optional": [],
          "description": "Storage item from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "VotingFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "ClassLocksFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "ReferendumCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "ReferendumInfoFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "TrackQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "DecidingCount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        },
        "MetadataOf": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "Whitelist": {
        "WhitelistedCall": {
          "required": [],
          "optional": [],
          "description": "Storage item from Whitelist pallet",
          "returnType": "unknown"
        }
      },
      "Dispatcher": {
        "AaveManagerAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dispatcher pallet",
          "returnType": "unknown"
        },
        "ExtraGas": {
          "required": [],
          "optional": [],
          "description": "Storage item from Dispatcher pallet",
          "returnType": "unknown"
        }
      },
      "AssetRegistry": {
        "Assets": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "NextAssetId": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "AssetIds": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "AssetLocations": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "BannedAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "LocationAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "ExistentialDepositCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from AssetRegistry pallet",
          "returnType": "unknown"
        }
      },
      "Claims": {
        "Claims": {
          "required": [],
          "optional": [],
          "description": "Storage item from Claims pallet",
          "returnType": "unknown"
        }
      },
      "GenesisHistory": {
        "PreviousChain": {
          "required": [],
          "optional": [],
          "description": "Storage item from GenesisHistory pallet",
          "returnType": "unknown"
        }
      },
      "CollatorRewards": {
        "Collators": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorRewards pallet",
          "returnType": "unknown"
        }
      },
      "Omnipool": {
        "Assets": {
          "required": [],
          "optional": [],
          "description": "Storage item from Omnipool pallet",
          "returnType": "unknown"
        },
        "HubAssetTradability": {
          "required": [],
          "optional": [],
          "description": "Storage item from Omnipool pallet",
          "returnType": "unknown"
        },
        "Positions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Omnipool pallet",
          "returnType": "unknown"
        },
        "NextPositionId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Omnipool pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPause": {
        "PausedTransactions": {
          "required": [],
          "optional": [],
          "description": "Storage item from TransactionPause pallet",
          "returnType": "unknown"
        }
      },
      "Duster": {
        "AccountBlacklist": {
          "required": [],
          "optional": [],
          "description": "Storage item from Duster pallet",
          "returnType": "unknown"
        },
        "RewardAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Duster pallet",
          "returnType": "unknown"
        },
        "DustAccount": {
          "required": [],
          "optional": [],
          "description": "Storage item from Duster pallet",
          "returnType": "unknown"
        }
      },
      "OmnipoolWarehouseLM": {
        "FarmSequencer": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "DepositSequencer": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "GlobalFarm": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "YieldFarm": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "Deposit": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "ActiveYieldFarm": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        }
      },
      "OmnipoolLiquidityMining": {
        "OmniPositionId": {
          "required": [],
          "optional": [],
          "description": "Storage item from OmnipoolLiquidityMining pallet",
          "returnType": "unknown"
        }
      },
      "OTC": {
        "NextOrderId": {
          "required": [],
          "optional": [],
          "description": "Storage item from OTC pallet",
          "returnType": "unknown"
        },
        "Orders": {
          "required": [],
          "optional": [],
          "description": "Storage item from OTC pallet",
          "returnType": "unknown"
        }
      },
      "CircuitBreaker": {
        "TradeVolumeLimitPerAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "AllowedTradeVolumeLimitPerAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "LiquidityAddLimitPerAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "AllowedAddLiquidityAmountPerAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "AssetLockdownState": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "LiquidityRemoveLimitPerAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "AllowedRemoveLiquidityAmountPerAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from CircuitBreaker pallet",
          "returnType": "unknown"
        }
      },
      "Router": {
        "Routes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Router pallet",
          "returnType": "unknown"
        }
      },
      "DynamicFees": {
        "AssetFee": {
          "required": [],
          "optional": [],
          "description": "Storage item from DynamicFees pallet",
          "returnType": "unknown"
        },
        "AssetFeeConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from DynamicFees pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "Staking": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Positions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "NextPositionId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "Votes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "VotesRewarded": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "PositionVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "ProcessedVotes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        },
        "SixSecBlocksSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Stableswap": {
        "Pools": {
          "required": [],
          "optional": [],
          "description": "Storage item from Stableswap pallet",
          "returnType": "unknown"
        },
        "PoolPegs": {
          "required": [],
          "optional": [],
          "description": "Storage item from Stableswap pallet",
          "returnType": "unknown"
        },
        "AssetTradability": {
          "required": [],
          "optional": [],
          "description": "Storage item from Stableswap pallet",
          "returnType": "unknown"
        },
        "PoolSnapshots": {
          "required": [],
          "optional": [],
          "description": "Storage item from Stableswap pallet",
          "returnType": "unknown"
        }
      },
      "Bonds": {
        "BondIds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bonds pallet",
          "returnType": "unknown"
        },
        "Bonds": {
          "required": [],
          "optional": [],
          "description": "Storage item from Bonds pallet",
          "returnType": "unknown"
        }
      },
      "LBP": {
        "PoolData": {
          "required": [],
          "optional": [],
          "description": "Storage item from LBP pallet",
          "returnType": "unknown"
        },
        "FeeCollectorWithAsset": {
          "required": [],
          "optional": [],
          "description": "Storage item from LBP pallet",
          "returnType": "unknown"
        }
      },
      "XYK": {
        "ShareToken": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYK pallet",
          "returnType": "unknown"
        },
        "TotalLiquidity": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYK pallet",
          "returnType": "unknown"
        },
        "PoolAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYK pallet",
          "returnType": "unknown"
        }
      },
      "Referrals": {
        "ReferralCodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "ReferralAccounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "LinkedAccounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "ReferrerShares": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "TraderShares": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "TotalShares": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "Referrer": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "AssetRewards": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "PendingConversions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        },
        "CounterForPendingConversions": {
          "required": [],
          "optional": [],
          "description": "Storage item from Referrals pallet",
          "returnType": "unknown"
        }
      },
      "Liquidation": {
        "BorrowingContract": {
          "required": [],
          "optional": [],
          "description": "Storage item from Liquidation pallet",
          "returnType": "unknown"
        }
      },
      "HSM": {
        "Collaterals": {
          "required": [],
          "optional": [],
          "description": "Storage item from HSM pallet",
          "returnType": "unknown"
        },
        "HollarAmountReceived": {
          "required": [],
          "optional": [],
          "description": "Storage item from HSM pallet",
          "returnType": "unknown"
        },
        "FlashMinter": {
          "required": [],
          "optional": [],
          "description": "Storage item from HSM pallet",
          "returnType": "unknown"
        }
      },
      "Parameters": {
        "IsTestnet": {
          "required": [],
          "optional": [],
          "description": "Storage item from Parameters pallet",
          "returnType": "unknown"
        }
      },
      "Tokens": {
        "TotalIssuance": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        },
        "Locks": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        },
        "Accounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        },
        "Reserves": {
          "required": [],
          "optional": [],
          "description": "Storage item from Tokens pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "VestingSchedules": {
          "required": [],
          "optional": [],
          "description": "Storage item from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "EVM": {
        "AccountCodes": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountCodesMetadata": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "AccountStorages": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        },
        "Suicided": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVM pallet",
          "returnType": "unknown"
        }
      },
      "EVMChainId": {
        "ChainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMChainId pallet",
          "returnType": "unknown"
        }
      },
      "Ethereum": {
        "Pending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CounterForPending": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentReceipts": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "CurrentTransactionStatuses": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        },
        "BlockHash": {
          "required": [],
          "optional": [],
          "description": "Storage item from Ethereum pallet",
          "returnType": "unknown"
        }
      },
      "EVMAccounts": {
        "AccountExtension": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMAccounts pallet",
          "returnType": "unknown"
        },
        "ContractDeployer": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMAccounts pallet",
          "returnType": "unknown"
        },
        "ApprovedContract": {
          "required": [],
          "optional": [],
          "description": "Storage item from EVMAccounts pallet",
          "returnType": "unknown"
        }
      },
      "DynamicEvmFee": {
        "BaseFeePerGas": {
          "required": [],
          "optional": [],
          "description": "Storage item from DynamicEvmFee pallet",
          "returnType": "unknown"
        }
      },
      "XYKWarehouseLM": {
        "FarmSequencer": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "DepositSequencer": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "GlobalFarm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "YieldFarm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "Deposit": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "ActiveYieldFarm": {
          "required": [],
          "optional": [],
          "description": "Storage item from XYKWarehouseLM pallet",
          "returnType": "unknown"
        }
      },
      "DCA": {
        "ScheduleIdSequencer": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        },
        "Schedules": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        },
        "ScheduleOwnership": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        },
        "RemainingAmounts": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        },
        "RetriesOnError": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        },
        "ScheduleExecutionBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        },
        "ScheduleIdsPerBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from DCA pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "IncompleteSince": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Agenda": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Retries": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        },
        "Lookup": {
          "required": [],
          "optional": [],
          "description": "Storage item from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "UnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AggregatedUnincludedSegment": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "NewValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ValidationData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "DidSetValidationCode": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastRelayChainBlockNumber": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeRestrictionSignal": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpgradeGoAhead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelayStateProof": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "RelevantMessagingState": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HostConfiguration": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastDmqMqcHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "LastHrmpMqcHeads": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ProcessedDownwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpWatermark": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "HrmpOutboundMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "PendingUpwardMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "UpwardDeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "AnnouncedHrmpMessagesPerCandidate": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedXcmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "ReservedDmpWeightOverride": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        },
        "CustomValidationHeadData": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "ParachainInfo": {
        "ParachainId": {
          "required": [],
          "optional": [],
          "description": "Storage item from ParachainInfo pallet",
          "returnType": "unknown"
        }
      },
      "PolkadotXcm": {
        "QueryCounter": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "Queries": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "AssetTraps": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SafeXcmVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "SupportedVersion": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifiers": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionNotifyTargets": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "VersionDiscoveryQueue": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "CurrentMigration": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RemoteLockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "LockedFungibles": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "XcmExecutionSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "ShouldRecordXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        },
        "RecordedXcm": {
          "required": [],
          "optional": [],
          "description": "Storage item from PolkadotXcm pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "InboundXcmpSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpStatus": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "OutboundXcmpMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "SignalMessages": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueConfig": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "QueueSuspended": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "DeliveryFeeFactor": {
          "required": [],
          "optional": [],
          "description": "Storage item from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "BookStateFor": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceHead": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        },
        "Pages": {
          "required": [],
          "optional": [],
          "description": "Storage item from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "UnknownTokens": {
        "ConcreteFungibleBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from UnknownTokens pallet",
          "returnType": "unknown"
        },
        "AbstractFungibleBalances": {
          "required": [],
          "optional": [],
          "description": "Storage item from UnknownTokens pallet",
          "returnType": "unknown"
        }
      },
      "Authorship": {
        "Author": {
          "required": [],
          "optional": [],
          "description": "Storage item from Authorship pallet",
          "returnType": "unknown"
        }
      },
      "CollatorSelection": {
        "Invulnerables": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "CandidateList": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "LastAuthoredBlock": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "DesiredCandidates": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        },
        "CandidacyBond": {
          "required": [],
          "optional": [],
          "description": "Storage item from CollatorSelection pallet",
          "returnType": "unknown"
        }
      },
      "Session": {
        "Validators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "CurrentIndex": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedChanged": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "QueuedKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "DisabledValidators": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "NextKeys": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        },
        "KeyOwner": {
          "required": [],
          "optional": [],
          "description": "Storage item from Session pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        },
        "CurrentSlot": {
          "required": [],
          "optional": [],
          "description": "Storage item from Aura pallet",
          "returnType": "unknown"
        }
      },
      "AuraExt": {
        "Authorities": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        },
        "SlotInfo": {
          "required": [],
          "optional": [],
          "description": "Storage item from AuraExt pallet",
          "returnType": "unknown"
        }
      },
      "EmaOracle": {
        "Accumulator": {
          "required": [],
          "optional": [],
          "description": "Storage item from EmaOracle pallet",
          "returnType": "unknown"
        },
        "Oracles": {
          "required": [],
          "optional": [],
          "description": "Storage item from EmaOracle pallet",
          "returnType": "unknown"
        },
        "WhitelistedAssets": {
          "required": [],
          "optional": [],
          "description": "Storage item from EmaOracle pallet",
          "returnType": "unknown"
        }
      },
      "Broadcast": {
        "IncrementalId": {
          "required": [],
          "optional": [],
          "description": "Storage item from Broadcast pallet",
          "returnType": "unknown"
        },
        "ExecutionContext": {
          "required": [],
          "optional": [],
          "description": "Storage item from Broadcast pallet",
          "returnType": "unknown"
        },
        "Swapper": {
          "required": [],
          "optional": [],
          "description": "Storage item from Broadcast pallet",
          "returnType": "unknown"
        }
      }
    },
    "calls": {
      "System": {
        "remark": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_heap_pages": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_code_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "set_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_storage": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "kill_prefix": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "remark_with_event": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "authorize_upgrade_without_checks": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        },
        "apply_authorized_upgrade": {
          "parameters": [],
          "description": "Call from System pallet",
          "returnType": "void"
        }
      },
      "Timestamp": {
        "set": {
          "parameters": [],
          "description": "Call from Timestamp pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "transfer_allow_death": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_unreserve": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "upgrade_accounts": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_set_balance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "force_adjust_total_issuance": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Balances pallet",
          "returnType": "void"
        }
      },
      "MultiTransactionPayment": {
        "set_currency": {
          "parameters": [],
          "description": "Call from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "add_currency": {
          "parameters": [],
          "description": "Call from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "remove_currency": {
          "parameters": [],
          "description": "Call from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "reset_payment_currency": {
          "parameters": [],
          "description": "Call from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "dispatch_permit": {
          "parameters": [],
          "description": "Call from MultiTransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "spend_local": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "remove_approval": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "payout": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "check_status": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        },
        "void_spend": {
          "parameters": [],
          "description": "Call from Treasury pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "as_derivative": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "batch_all": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "dispatch_as": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "force_batch": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        },
        "with_weight": {
          "parameters": [],
          "description": "Call from Utility pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "note_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unnote_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "request_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "unrequest_preimage": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        },
        "ensure_updated": {
          "parameters": [],
          "description": "Call from Preimage pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "add_registrar": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_subs": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "clear_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "request_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "cancel_request": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fee": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_account_id": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_fields": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "provide_judgement": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "kill_identity": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "rename_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "quit_sub": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "add_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_username_authority": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_username_for": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "accept_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_expired_approval": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "set_primary_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        },
        "remove_dangling_username": {
          "parameters": [],
          "description": "Call from Identity pallet",
          "returnType": "void"
        }
      },
      "Democracy": {
        "propose": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "second": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "emergency_cancel": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "external_propose": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "external_propose_majority": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "external_propose_default": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "fast_track": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "veto_external": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "cancel_referendum": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "clear_public_proposals": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "blacklist": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "cancel_proposal": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        },
        "force_remove_vote": {
          "parameters": [],
          "description": "Call from Democracy pallet",
          "returnType": "void"
        }
      },
      "TechnicalCommittee": {
        "set_members": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "propose": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "vote": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "disapprove_proposal": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "close": {
          "parameters": [],
          "description": "Call from TechnicalCommittee pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "add_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxy": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_proxies": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "create_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "kill_pure": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "announce": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "remove_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "reject_announcement": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        },
        "proxy_announced": {
          "parameters": [],
          "description": "Call from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "as_multi_threshold_1": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "approve_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        },
        "cancel_as_multi": {
          "parameters": [],
          "description": "Call from Multisig pallet",
          "returnType": "void"
        }
      },
      "Uniques": {
        "create": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "force_create": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "destroy": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "mint": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "burn": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "transfer": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "redeposit": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "freeze": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "thaw": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "freeze_collection": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "thaw_collection": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "transfer_ownership": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_team": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "approve_transfer": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "cancel_approval": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "force_item_status": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_attribute": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "clear_attribute": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "clear_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_collection_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "clear_collection_metadata": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_accept_ownership": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_collection_max_supply": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "set_price": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        },
        "buy_item": {
          "parameters": [],
          "description": "Call from Uniques pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "control_auto_migration": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "continue_migrate": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_top": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "migrate_custom_child": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "set_signed_max_limits": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        },
        "force_set_progress": {
          "parameters": [],
          "description": "Call from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "delegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "undelegate": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "unlock": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "remove_other_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        },
        "force_remove_vote": {
          "parameters": [],
          "description": "Call from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "submit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "place_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_decision_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "kill": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "nudge_referendum": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "one_fewer_deciding": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "refund_submission_deposit": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        },
        "set_metadata": {
          "parameters": [],
          "description": "Call from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "whitelist_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "remove_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        },
        "dispatch_whitelisted_call_with_preimage": {
          "parameters": [],
          "description": "Call from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Dispatcher": {
        "dispatch_as_treasury": {
          "parameters": [],
          "description": "Call from Dispatcher pallet",
          "returnType": "void"
        },
        "dispatch_as_aave_manager": {
          "parameters": [],
          "description": "Call from Dispatcher pallet",
          "returnType": "void"
        },
        "note_aave_manager": {
          "parameters": [],
          "description": "Call from Dispatcher pallet",
          "returnType": "void"
        },
        "dispatch_with_extra_gas": {
          "parameters": [],
          "description": "Call from Dispatcher pallet",
          "returnType": "void"
        }
      },
      "AssetRegistry": {
        "register": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "update": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "register_external": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "ban_asset": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        },
        "unban_asset": {
          "parameters": [],
          "description": "Call from AssetRegistry pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "claim": {
          "parameters": [],
          "description": "Call from Claims pallet",
          "returnType": "void"
        }
      },
      "Omnipool": {
        "add_token": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "add_liquidity_with_limit": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "remove_liquidity": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "remove_liquidity_with_limit": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "sacrifice_position": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "sell": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "buy": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "set_asset_tradable_state": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "refund_refused_asset": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "set_asset_weight_cap": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "withdraw_protocol_liquidity": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        },
        "remove_token": {
          "parameters": [],
          "description": "Call from Omnipool pallet",
          "returnType": "void"
        }
      },
      "TransactionPause": {
        "pause_transaction": {
          "parameters": [],
          "description": "Call from TransactionPause pallet",
          "returnType": "void"
        },
        "unpause_transaction": {
          "parameters": [],
          "description": "Call from TransactionPause pallet",
          "returnType": "void"
        }
      },
      "Duster": {
        "dust_account": {
          "parameters": [],
          "description": "Call from Duster pallet",
          "returnType": "void"
        },
        "add_nondustable_account": {
          "parameters": [],
          "description": "Call from Duster pallet",
          "returnType": "void"
        },
        "remove_nondustable_account": {
          "parameters": [],
          "description": "Call from Duster pallet",
          "returnType": "void"
        }
      },
      "OmnipoolLiquidityMining": {
        "create_global_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "terminate_global_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "create_yield_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "update_yield_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "stop_yield_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "resume_yield_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "terminate_yield_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "deposit_shares": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "redeposit_shares": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "claim_rewards": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "withdraw_shares": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "update_global_farm": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "join_farms": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "add_liquidity_and_join_farms": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "exit_farms": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "add_liquidity_stableswap_omnipool_and_join_farms": {
          "parameters": [],
          "description": "Call from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        }
      },
      "OTC": {
        "place_order": {
          "parameters": [],
          "description": "Call from OTC pallet",
          "returnType": "void"
        },
        "partial_fill_order": {
          "parameters": [],
          "description": "Call from OTC pallet",
          "returnType": "void"
        },
        "fill_order": {
          "parameters": [],
          "description": "Call from OTC pallet",
          "returnType": "void"
        },
        "cancel_order": {
          "parameters": [],
          "description": "Call from OTC pallet",
          "returnType": "void"
        }
      },
      "CircuitBreaker": {
        "set_trade_volume_limit": {
          "parameters": [],
          "description": "Call from CircuitBreaker pallet",
          "returnType": "void"
        },
        "set_add_liquidity_limit": {
          "parameters": [],
          "description": "Call from CircuitBreaker pallet",
          "returnType": "void"
        },
        "set_remove_liquidity_limit": {
          "parameters": [],
          "description": "Call from CircuitBreaker pallet",
          "returnType": "void"
        },
        "lockdown_asset": {
          "parameters": [],
          "description": "Call from CircuitBreaker pallet",
          "returnType": "void"
        },
        "force_lift_lockdown": {
          "parameters": [],
          "description": "Call from CircuitBreaker pallet",
          "returnType": "void"
        },
        "release_deposit": {
          "parameters": [],
          "description": "Call from CircuitBreaker pallet",
          "returnType": "void"
        }
      },
      "Router": {
        "sell": {
          "parameters": [],
          "description": "Call from Router pallet",
          "returnType": "void"
        },
        "buy": {
          "parameters": [],
          "description": "Call from Router pallet",
          "returnType": "void"
        },
        "set_route": {
          "parameters": [],
          "description": "Call from Router pallet",
          "returnType": "void"
        },
        "force_insert_route": {
          "parameters": [],
          "description": "Call from Router pallet",
          "returnType": "void"
        },
        "sell_all": {
          "parameters": [],
          "description": "Call from Router pallet",
          "returnType": "void"
        }
      },
      "DynamicFees": {
        "set_asset_fee": {
          "parameters": [],
          "description": "Call from DynamicFees pallet",
          "returnType": "void"
        },
        "remove_asset_fee": {
          "parameters": [],
          "description": "Call from DynamicFees pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "initialize_staking": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "stake": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "increase_stake": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "claim": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        },
        "unstake": {
          "parameters": [],
          "description": "Call from Staking pallet",
          "returnType": "void"
        }
      },
      "Stableswap": {
        "create_pool": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "update_pool_fee": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "update_amplification": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "add_liquidity_shares": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "remove_liquidity_one_asset": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "withdraw_asset_amount": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "sell": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "buy": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "set_asset_tradable_state": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "remove_liquidity": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "create_pool_with_pegs": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "add_assets_liquidity": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "update_asset_peg_source": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        },
        "update_pool_max_peg_update": {
          "parameters": [],
          "description": "Call from Stableswap pallet",
          "returnType": "void"
        }
      },
      "Bonds": {
        "issue": {
          "parameters": [],
          "description": "Call from Bonds pallet",
          "returnType": "void"
        },
        "redeem": {
          "parameters": [],
          "description": "Call from Bonds pallet",
          "returnType": "void"
        }
      },
      "OtcSettlements": {
        "settle_otc_order": {
          "parameters": [],
          "description": "Call from OtcSettlements pallet",
          "returnType": "void"
        }
      },
      "LBP": {
        "create_pool": {
          "parameters": [],
          "description": "Call from LBP pallet",
          "returnType": "void"
        },
        "update_pool_data": {
          "parameters": [],
          "description": "Call from LBP pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from LBP pallet",
          "returnType": "void"
        },
        "remove_liquidity": {
          "parameters": [],
          "description": "Call from LBP pallet",
          "returnType": "void"
        },
        "sell": {
          "parameters": [],
          "description": "Call from LBP pallet",
          "returnType": "void"
        },
        "buy": {
          "parameters": [],
          "description": "Call from LBP pallet",
          "returnType": "void"
        }
      },
      "XYK": {
        "create_pool": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        },
        "add_liquidity": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        },
        "add_liquidity_with_limits": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        },
        "remove_liquidity": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        },
        "remove_liquidity_with_limits": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        },
        "sell": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        },
        "buy": {
          "parameters": [],
          "description": "Call from XYK pallet",
          "returnType": "void"
        }
      },
      "Referrals": {
        "register_code": {
          "parameters": [],
          "description": "Call from Referrals pallet",
          "returnType": "void"
        },
        "link_code": {
          "parameters": [],
          "description": "Call from Referrals pallet",
          "returnType": "void"
        },
        "convert": {
          "parameters": [],
          "description": "Call from Referrals pallet",
          "returnType": "void"
        },
        "claim_rewards": {
          "parameters": [],
          "description": "Call from Referrals pallet",
          "returnType": "void"
        },
        "set_reward_percentage": {
          "parameters": [],
          "description": "Call from Referrals pallet",
          "returnType": "void"
        }
      },
      "Liquidation": {
        "liquidate": {
          "parameters": [],
          "description": "Call from Liquidation pallet",
          "returnType": "void"
        },
        "set_borrowing_contract": {
          "parameters": [],
          "description": "Call from Liquidation pallet",
          "returnType": "void"
        }
      },
      "HSM": {
        "add_collateral_asset": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        },
        "remove_collateral_asset": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        },
        "update_collateral_asset": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        },
        "sell": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        },
        "buy": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        },
        "execute_arbitrage": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        },
        "set_flash_minter": {
          "parameters": [],
          "description": "Call from HSM pallet",
          "returnType": "void"
        }
      },
      "Tokens": {
        "transfer": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "transfer_all": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "transfer_keep_alive": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "force_transfer": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        },
        "set_balance": {
          "parameters": [],
          "description": "Call from Tokens pallet",
          "returnType": "void"
        }
      },
      "Currencies": {
        "transfer": {
          "parameters": [],
          "description": "Call from Currencies pallet",
          "returnType": "void"
        },
        "transfer_native_currency": {
          "parameters": [],
          "description": "Call from Currencies pallet",
          "returnType": "void"
        },
        "update_balance": {
          "parameters": [],
          "description": "Call from Currencies pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "claim": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "vested_transfer": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "update_vesting_schedules": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        },
        "claim_for": {
          "parameters": [],
          "description": "Call from Vesting pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "withdraw": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "call": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        },
        "create2": {
          "parameters": [],
          "description": "Call from EVM pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "transact": {
          "parameters": [],
          "description": "Call from Ethereum pallet",
          "returnType": "void"
        }
      },
      "EVMAccounts": {
        "bind_evm_address": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "add_contract_deployer": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "remove_contract_deployer": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "renounce_contract_deployer": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "approve_contract": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        },
        "disapprove_contract": {
          "parameters": [],
          "description": "Call from EVMAccounts pallet",
          "returnType": "void"
        }
      },
      "XYKLiquidityMining": {
        "create_global_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "update_global_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "terminate_global_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "create_yield_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "update_yield_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "stop_yield_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "resume_yield_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "terminate_yield_farm": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "deposit_shares": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "join_farms": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "add_liquidity_and_join_farms": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "redeposit_shares": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "claim_rewards": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "withdraw_shares": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "exit_farms": {
          "parameters": [],
          "description": "Call from XYKLiquidityMining pallet",
          "returnType": "void"
        }
      },
      "DCA": {
        "schedule": {
          "parameters": [],
          "description": "Call from DCA pallet",
          "returnType": "void"
        },
        "terminate": {
          "parameters": [],
          "description": "Call from DCA pallet",
          "returnType": "void"
        },
        "unlock_reserves": {
          "parameters": [],
          "description": "Call from DCA pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "schedule": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "schedule_named_after": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "set_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        },
        "cancel_retry_named": {
          "parameters": [],
          "description": "Call from Scheduler pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "set_validation_data": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        },
        "sudo_send_upward_message": {
          "parameters": [],
          "description": "Call from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "send": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "execute": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_default_xcm_version": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_subscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_unsubscribe_version_notify": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_reserve_transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "limited_teleport_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "force_suspension": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "claim_assets": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        },
        "transfer_assets_using_type_and_then": {
          "parameters": [],
          "description": "Call from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "reap_page": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        },
        "execute_overweight": {
          "parameters": [],
          "description": "Call from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "OrmlXcm": {
        "send_as_sovereign": {
          "parameters": [],
          "description": "Call from OrmlXcm pallet",
          "returnType": "void"
        }
      },
      "XTokens": {
        "transfer": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiasset": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_with_fee": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiasset_with_fee": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multicurrencies": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        },
        "transfer_multiassets": {
          "parameters": [],
          "description": "Call from XTokens pallet",
          "returnType": "void"
        }
      },
      "CollatorSelection": {
        "set_invulnerables": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_desired_candidates": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "set_candidacy_bond": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "register_as_candidate": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "leave_intent": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "add_invulnerable": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "remove_invulnerable": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "update_bond": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        },
        "take_candidate_slot": {
          "parameters": [],
          "description": "Call from CollatorSelection pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "set_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        },
        "purge_keys": {
          "parameters": [],
          "description": "Call from Session pallet",
          "returnType": "void"
        }
      },
      "EmaOracle": {
        "add_oracle": {
          "parameters": [],
          "description": "Call from EmaOracle pallet",
          "returnType": "void"
        },
        "remove_oracle": {
          "parameters": [],
          "description": "Call from EmaOracle pallet",
          "returnType": "void"
        },
        "update_bifrost_oracle": {
          "parameters": [],
          "description": "Call from EmaOracle pallet",
          "returnType": "void"
        }
      }
    },
    "events": {
      "System": {
        "ExtrinsicSuccess": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "ExtrinsicFailed": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "CodeUpdated": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "NewAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "KilledAccount": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "Remarked": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        },
        "UpgradeAuthorized": {
          "fields": [],
          "description": "Event from System pallet",
          "returnType": "void"
        }
      },
      "Balances": {
        "Endowed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Withdraw": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Minted": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Suspended": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Restored": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Upgraded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        },
        "TotalIssuanceForced": {
          "fields": [],
          "description": "Event from Balances pallet",
          "returnType": "void"
        }
      },
      "TransactionPayment": {
        "TransactionFeePaid": {
          "fields": [],
          "description": "Event from TransactionPayment pallet",
          "returnType": "void"
        }
      },
      "MultiTransactionPayment": {
        "CurrencySet": {
          "fields": [],
          "description": "Event from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "CurrencyAdded": {
          "fields": [],
          "description": "Event from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "CurrencyRemoved": {
          "fields": [],
          "description": "Event from MultiTransactionPayment pallet",
          "returnType": "void"
        },
        "FeeWithdrawn": {
          "fields": [],
          "description": "Event from MultiTransactionPayment pallet",
          "returnType": "void"
        }
      },
      "Treasury": {
        "Spending": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Awarded": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Burnt": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Rollover": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Deposit": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "UpdatedInactive": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendApproved": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "AssetSpendVoided": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "Paid": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "PaymentFailed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        },
        "SpendProcessed": {
          "fields": [],
          "description": "Event from Treasury pallet",
          "returnType": "void"
        }
      },
      "Utility": {
        "BatchInterrupted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "BatchCompletedWithErrors": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemCompleted": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "ItemFailed": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        },
        "DispatchedAs": {
          "fields": [],
          "description": "Event from Utility pallet",
          "returnType": "void"
        }
      },
      "Preimage": {
        "Noted": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Requested": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        },
        "Cleared": {
          "fields": [],
          "description": "Event from Preimage pallet",
          "returnType": "void"
        }
      },
      "Identity": {
        "IdentitySet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityCleared": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "IdentityKilled": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementRequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementUnrequested": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "JudgementGiven": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "RegistrarAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "SubIdentityRevoked": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityAdded": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "AuthorityRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "UsernameQueued": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PreapprovalExpired": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "PrimaryUsernameSet": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        },
        "DanglingUsernameRemoved": {
          "fields": [],
          "description": "Event from Identity pallet",
          "returnType": "void"
        }
      },
      "Democracy": {
        "Proposed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Tabled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "ExternalTabled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Started": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Passed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "NotPassed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Delegated": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Vetoed": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Blacklisted": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "Seconded": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "ProposalCanceled": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        },
        "MetadataTransferred": {
          "fields": [],
          "description": "Event from Democracy pallet",
          "returnType": "void"
        }
      },
      "TechnicalCommittee": {
        "Proposed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Disapproved": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "MemberExecuted": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        },
        "Closed": {
          "fields": [],
          "description": "Event from TechnicalCommittee pallet",
          "returnType": "void"
        }
      },
      "Proxy": {
        "ProxyExecuted": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "PureCreated": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "Announced": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyAdded": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        },
        "ProxyRemoved": {
          "fields": [],
          "description": "Event from Proxy pallet",
          "returnType": "void"
        }
      },
      "Multisig": {
        "NewMultisig": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigApproval": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigExecuted": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        },
        "MultisigCancelled": {
          "fields": [],
          "description": "Event from Multisig pallet",
          "returnType": "void"
        }
      },
      "Uniques": {
        "Created": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ForceCreated": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Destroyed": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Transferred": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Burned": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Frozen": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Thawed": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionFrozen": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionThawed": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "OwnerChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "TeamChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ApprovedTransfer": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ApprovalCancelled": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemStatusChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionMetadataSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionMetadataCleared": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "Redeposited": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "AttributeSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "AttributeCleared": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "OwnershipAcceptanceChanged": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "CollectionMaxSupplySet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemPriceSet": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemPriceRemoved": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        },
        "ItemBought": {
          "fields": [],
          "description": "Event from Uniques pallet",
          "returnType": "void"
        }
      },
      "StateTrieMigration": {
        "Migrated": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "AutoMigrationFinished": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        },
        "Halted": {
          "fields": [],
          "description": "Event from StateTrieMigration pallet",
          "returnType": "void"
        }
      },
      "ConvictionVoting": {
        "Delegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Undelegated": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "Voted": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        },
        "VoteRemoved": {
          "fields": [],
          "description": "Event from ConvictionVoting pallet",
          "returnType": "void"
        }
      },
      "Referenda": {
        "Submitted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositPlaced": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DepositSlashed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "DecisionStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmStarted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "ConfirmAborted": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Confirmed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Approved": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Rejected": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "TimedOut": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Cancelled": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "Killed": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "SubmissionDepositRefunded": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataSet": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        },
        "MetadataCleared": {
          "fields": [],
          "description": "Event from Referenda pallet",
          "returnType": "void"
        }
      },
      "Whitelist": {
        "CallWhitelisted": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallRemoved": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        },
        "WhitelistedCallDispatched": {
          "fields": [],
          "description": "Event from Whitelist pallet",
          "returnType": "void"
        }
      },
      "Dispatcher": {
        "TreasuryManagerCallDispatched": {
          "fields": [],
          "description": "Event from Dispatcher pallet",
          "returnType": "void"
        },
        "AaveManagerCallDispatched": {
          "fields": [],
          "description": "Event from Dispatcher pallet",
          "returnType": "void"
        }
      },
      "AssetRegistry": {
        "ExistentialDepositPaid": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "Registered": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "Updated": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "LocationSet": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "AssetBanned": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        },
        "AssetUnbanned": {
          "fields": [],
          "description": "Event from AssetRegistry pallet",
          "returnType": "void"
        }
      },
      "Claims": {
        "Claim": {
          "fields": [],
          "description": "Event from Claims pallet",
          "returnType": "void"
        }
      },
      "CollatorRewards": {
        "CollatorRewarded": {
          "fields": [],
          "description": "Event from CollatorRewards pallet",
          "returnType": "void"
        }
      },
      "Omnipool": {
        "TokenAdded": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "TokenRemoved": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "LiquidityRemoved": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "ProtocolLiquidityRemoved": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "SellExecuted": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "BuyExecuted": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "PositionCreated": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "PositionDestroyed": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "PositionUpdated": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "TradableStateUpdated": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "AssetRefunded": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        },
        "AssetWeightCapUpdated": {
          "fields": [],
          "description": "Event from Omnipool pallet",
          "returnType": "void"
        }
      },
      "TransactionPause": {
        "TransactionPaused": {
          "fields": [],
          "description": "Event from TransactionPause pallet",
          "returnType": "void"
        },
        "TransactionUnpaused": {
          "fields": [],
          "description": "Event from TransactionPause pallet",
          "returnType": "void"
        }
      },
      "Duster": {
        "Dusted": {
          "fields": [],
          "description": "Event from Duster pallet",
          "returnType": "void"
        },
        "Added": {
          "fields": [],
          "description": "Event from Duster pallet",
          "returnType": "void"
        },
        "Removed": {
          "fields": [],
          "description": "Event from Duster pallet",
          "returnType": "void"
        }
      },
      "OmnipoolWarehouseLM": {
        "GlobalFarmAccRPZUpdated": {
          "fields": [],
          "description": "Event from OmnipoolWarehouseLM pallet",
          "returnType": "void"
        },
        "YieldFarmAccRPVSUpdated": {
          "fields": [],
          "description": "Event from OmnipoolWarehouseLM pallet",
          "returnType": "void"
        },
        "AllRewardsDistributed": {
          "fields": [],
          "description": "Event from OmnipoolWarehouseLM pallet",
          "returnType": "void"
        }
      },
      "OmnipoolLiquidityMining": {
        "GlobalFarmCreated": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "GlobalFarmUpdated": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "GlobalFarmTerminated": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmCreated": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmUpdated": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmStopped": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmResumed": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmTerminated": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "SharesDeposited": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "SharesRedeposited": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "RewardClaimed": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "SharesWithdrawn": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        },
        "DepositDestroyed": {
          "fields": [],
          "description": "Event from OmnipoolLiquidityMining pallet",
          "returnType": "void"
        }
      },
      "OTC": {
        "Cancelled": {
          "fields": [],
          "description": "Event from OTC pallet",
          "returnType": "void"
        },
        "Filled": {
          "fields": [],
          "description": "Event from OTC pallet",
          "returnType": "void"
        },
        "PartiallyFilled": {
          "fields": [],
          "description": "Event from OTC pallet",
          "returnType": "void"
        },
        "Placed": {
          "fields": [],
          "description": "Event from OTC pallet",
          "returnType": "void"
        }
      },
      "CircuitBreaker": {
        "TradeVolumeLimitChanged": {
          "fields": [],
          "description": "Event from CircuitBreaker pallet",
          "returnType": "void"
        },
        "AddLiquidityLimitChanged": {
          "fields": [],
          "description": "Event from CircuitBreaker pallet",
          "returnType": "void"
        },
        "RemoveLiquidityLimitChanged": {
          "fields": [],
          "description": "Event from CircuitBreaker pallet",
          "returnType": "void"
        },
        "AssetLockdown": {
          "fields": [],
          "description": "Event from CircuitBreaker pallet",
          "returnType": "void"
        },
        "AssetLockdownRemoved": {
          "fields": [],
          "description": "Event from CircuitBreaker pallet",
          "returnType": "void"
        },
        "DepositReleased": {
          "fields": [],
          "description": "Event from CircuitBreaker pallet",
          "returnType": "void"
        }
      },
      "Router": {
        "Executed": {
          "fields": [],
          "description": "Event from Router pallet",
          "returnType": "void"
        },
        "RouteUpdated": {
          "fields": [],
          "description": "Event from Router pallet",
          "returnType": "void"
        }
      },
      "DynamicFees": {
        "AssetFeeConfigSet": {
          "fields": [],
          "description": "Event from DynamicFees pallet",
          "returnType": "void"
        },
        "AssetFeeConfigRemoved": {
          "fields": [],
          "description": "Event from DynamicFees pallet",
          "returnType": "void"
        }
      },
      "Staking": {
        "PositionCreated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakeAdded": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "RewardsClaimed": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "Unstaked": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "StakingInitialized": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        },
        "AccumulatedRpsUpdated": {
          "fields": [],
          "description": "Event from Staking pallet",
          "returnType": "void"
        }
      },
      "Stableswap": {
        "PoolCreated": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "FeeUpdated": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "LiquidityRemoved": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "SellExecuted": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "BuyExecuted": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "TradableStateUpdated": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "AmplificationChanging": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "PoolDestroyed": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "PoolPegSourceUpdated": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        },
        "PoolMaxPegUpdateUpdated": {
          "fields": [],
          "description": "Event from Stableswap pallet",
          "returnType": "void"
        }
      },
      "Bonds": {
        "TokenCreated": {
          "fields": [],
          "description": "Event from Bonds pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Bonds pallet",
          "returnType": "void"
        },
        "Redeemed": {
          "fields": [],
          "description": "Event from Bonds pallet",
          "returnType": "void"
        }
      },
      "OtcSettlements": {
        "Executed": {
          "fields": [],
          "description": "Event from OtcSettlements pallet",
          "returnType": "void"
        }
      },
      "LBP": {
        "PoolCreated": {
          "fields": [],
          "description": "Event from LBP pallet",
          "returnType": "void"
        },
        "PoolUpdated": {
          "fields": [],
          "description": "Event from LBP pallet",
          "returnType": "void"
        },
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from LBP pallet",
          "returnType": "void"
        },
        "LiquidityRemoved": {
          "fields": [],
          "description": "Event from LBP pallet",
          "returnType": "void"
        },
        "SellExecuted": {
          "fields": [],
          "description": "Event from LBP pallet",
          "returnType": "void"
        },
        "BuyExecuted": {
          "fields": [],
          "description": "Event from LBP pallet",
          "returnType": "void"
        }
      },
      "XYK": {
        "LiquidityAdded": {
          "fields": [],
          "description": "Event from XYK pallet",
          "returnType": "void"
        },
        "LiquidityRemoved": {
          "fields": [],
          "description": "Event from XYK pallet",
          "returnType": "void"
        },
        "PoolCreated": {
          "fields": [],
          "description": "Event from XYK pallet",
          "returnType": "void"
        },
        "PoolDestroyed": {
          "fields": [],
          "description": "Event from XYK pallet",
          "returnType": "void"
        },
        "SellExecuted": {
          "fields": [],
          "description": "Event from XYK pallet",
          "returnType": "void"
        },
        "BuyExecuted": {
          "fields": [],
          "description": "Event from XYK pallet",
          "returnType": "void"
        }
      },
      "Referrals": {
        "CodeRegistered": {
          "fields": [],
          "description": "Event from Referrals pallet",
          "returnType": "void"
        },
        "CodeLinked": {
          "fields": [],
          "description": "Event from Referrals pallet",
          "returnType": "void"
        },
        "Converted": {
          "fields": [],
          "description": "Event from Referrals pallet",
          "returnType": "void"
        },
        "Claimed": {
          "fields": [],
          "description": "Event from Referrals pallet",
          "returnType": "void"
        },
        "AssetRewardsUpdated": {
          "fields": [],
          "description": "Event from Referrals pallet",
          "returnType": "void"
        },
        "LevelUp": {
          "fields": [],
          "description": "Event from Referrals pallet",
          "returnType": "void"
        }
      },
      "Liquidation": {
        "Liquidated": {
          "fields": [],
          "description": "Event from Liquidation pallet",
          "returnType": "void"
        }
      },
      "HSM": {
        "CollateralAdded": {
          "fields": [],
          "description": "Event from HSM pallet",
          "returnType": "void"
        },
        "CollateralRemoved": {
          "fields": [],
          "description": "Event from HSM pallet",
          "returnType": "void"
        },
        "CollateralUpdated": {
          "fields": [],
          "description": "Event from HSM pallet",
          "returnType": "void"
        },
        "ArbitrageExecuted": {
          "fields": [],
          "description": "Event from HSM pallet",
          "returnType": "void"
        },
        "FlashMinterSet": {
          "fields": [],
          "description": "Event from HSM pallet",
          "returnType": "void"
        }
      },
      "Tokens": {
        "Endowed": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "DustLost": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Transfer": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Reserved": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Unreserved": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "ReserveRepatriated": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "BalanceSet": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "TotalIssuanceSet": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Slashed": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "LockSet": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "LockRemoved": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Locked": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Unlocked": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Issued": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        },
        "Rescinded": {
          "fields": [],
          "description": "Event from Tokens pallet",
          "returnType": "void"
        }
      },
      "Currencies": {
        "Transferred": {
          "fields": [],
          "description": "Event from Currencies pallet",
          "returnType": "void"
        },
        "BalanceUpdated": {
          "fields": [],
          "description": "Event from Currencies pallet",
          "returnType": "void"
        },
        "Deposited": {
          "fields": [],
          "description": "Event from Currencies pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from Currencies pallet",
          "returnType": "void"
        }
      },
      "Vesting": {
        "VestingScheduleAdded": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "Claimed": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        },
        "VestingSchedulesUpdated": {
          "fields": [],
          "description": "Event from Vesting pallet",
          "returnType": "void"
        }
      },
      "EVM": {
        "Log": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Created": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "CreatedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "Executed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        },
        "ExecutedFailed": {
          "fields": [],
          "description": "Event from EVM pallet",
          "returnType": "void"
        }
      },
      "Ethereum": {
        "Executed": {
          "fields": [],
          "description": "Event from Ethereum pallet",
          "returnType": "void"
        }
      },
      "EVMAccounts": {
        "Bound": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        },
        "DeployerAdded": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        },
        "DeployerRemoved": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        },
        "ContractApproved": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        },
        "ContractDisapproved": {
          "fields": [],
          "description": "Event from EVMAccounts pallet",
          "returnType": "void"
        }
      },
      "XYKLiquidityMining": {
        "GlobalFarmCreated": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "GlobalFarmUpdated": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmCreated": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "GlobalFarmTerminated": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "SharesDeposited": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "SharesRedeposited": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "RewardClaimed": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "SharesWithdrawn": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmStopped": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmResumed": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmTerminated": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "YieldFarmUpdated": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        },
        "DepositDestroyed": {
          "fields": [],
          "description": "Event from XYKLiquidityMining pallet",
          "returnType": "void"
        }
      },
      "XYKWarehouseLM": {
        "GlobalFarmAccRPZUpdated": {
          "fields": [],
          "description": "Event from XYKWarehouseLM pallet",
          "returnType": "void"
        },
        "YieldFarmAccRPVSUpdated": {
          "fields": [],
          "description": "Event from XYKWarehouseLM pallet",
          "returnType": "void"
        },
        "AllRewardsDistributed": {
          "fields": [],
          "description": "Event from XYKWarehouseLM pallet",
          "returnType": "void"
        }
      },
      "RelayChainInfo": {
        "CurrentBlockNumbers": {
          "fields": [],
          "description": "Event from RelayChainInfo pallet",
          "returnType": "void"
        }
      },
      "DCA": {
        "ExecutionStarted": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "Scheduled": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "ExecutionPlanned": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "TradeExecuted": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "TradeFailed": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "Terminated": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "Completed": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "RandomnessGenerationFailed": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        },
        "ReserveUnlocked": {
          "fields": [],
          "description": "Event from DCA pallet",
          "returnType": "void"
        }
      },
      "Scheduler": {
        "Scheduled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Canceled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "Dispatched": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetrySet": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryCancelled": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "CallUnavailable": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PeriodicFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "RetryFailed": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        },
        "PermanentlyOverweight": {
          "fields": [],
          "description": "Event from Scheduler pallet",
          "returnType": "void"
        }
      },
      "ParachainSystem": {
        "ValidationFunctionStored": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionApplied": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "ValidationFunctionDiscarded": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesReceived": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "DownwardMessagesProcessed": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        },
        "UpwardMessageSent": {
          "fields": [],
          "description": "Event from ParachainSystem pallet",
          "returnType": "void"
        }
      },
      "PolkadotXcm": {
        "Attempted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Sent": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "UnexpectedResponse": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseReady": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "Notified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyOverweight": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDispatchError": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyDecodeFailed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponder": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidResponderVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "ResponseTaken": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsTrapped": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionChangeNotified": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "SupportedVersionChanged": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetSendFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "NotifyTargetMigrationFail": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerierVersion": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "InvalidQuerier": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyStarted": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyRequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionNotifyUnrequested": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "FeesPaid": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "AssetsClaimed": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        },
        "VersionMigrationFinished": {
          "fields": [],
          "description": "Event from PolkadotXcm pallet",
          "returnType": "void"
        }
      },
      "CumulusXcm": {
        "InvalidFormat": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "UnsupportedVersion": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        },
        "ExecutedDownward": {
          "fields": [],
          "description": "Event from CumulusXcm pallet",
          "returnType": "void"
        }
      },
      "XcmpQueue": {
        "XcmpMessageSent": {
          "fields": [],
          "description": "Event from XcmpQueue pallet",
          "returnType": "void"
        }
      },
      "MessageQueue": {
        "ProcessingFailed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "Processed": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "OverweightEnqueued": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        },
        "PageReaped": {
          "fields": [],
          "description": "Event from MessageQueue pallet",
          "returnType": "void"
        }
      },
      "OrmlXcm": {
        "Sent": {
          "fields": [],
          "description": "Event from OrmlXcm pallet",
          "returnType": "void"
        }
      },
      "XTokens": {
        "TransferredAssets": {
          "fields": [],
          "description": "Event from XTokens pallet",
          "returnType": "void"
        }
      },
      "UnknownTokens": {
        "Deposited": {
          "fields": [],
          "description": "Event from UnknownTokens pallet",
          "returnType": "void"
        },
        "Withdrawn": {
          "fields": [],
          "description": "Event from UnknownTokens pallet",
          "returnType": "void"
        }
      },
      "CollatorSelection": {
        "NewInvulnerables": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "InvulnerableAdded": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "InvulnerableRemoved": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "NewDesiredCandidates": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "NewCandidacyBond": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateAdded": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateBondUpdated": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateRemoved": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "CandidateReplaced": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        },
        "InvalidInvulnerableSkipped": {
          "fields": [],
          "description": "Event from CollatorSelection pallet",
          "returnType": "void"
        }
      },
      "Session": {
        "NewSession": {
          "fields": [],
          "description": "Event from Session pallet",
          "returnType": "void"
        }
      },
      "EmaOracle": {
        "AddedToWhitelist": {
          "fields": [],
          "description": "Event from EmaOracle pallet",
          "returnType": "void"
        },
        "RemovedFromWhitelist": {
          "fields": [],
          "description": "Event from EmaOracle pallet",
          "returnType": "void"
        }
      },
      "Broadcast": {
        "Swapped3": {
          "fields": [],
          "description": "Event from Broadcast pallet",
          "returnType": "void"
        }
      }
    },
    "constants": {
      "System": {
        "BlockWeights": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockLength": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "BlockHashCount": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "DbWeight": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "Version": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        },
        "SS58Prefix": {
          "type": "unknown",
          "description": "Constant from System pallet",
          "returnType": "unknown"
        }
      },
      "Timestamp": {
        "MinimumPeriod": {
          "type": "unknown",
          "description": "Constant from Timestamp pallet",
          "returnType": "unknown"
        }
      },
      "Balances": {
        "ExistentialDeposit": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        },
        "MaxFreezes": {
          "type": "unknown",
          "description": "Constant from Balances pallet",
          "returnType": "unknown"
        }
      },
      "TransactionPayment": {
        "OperationalFeeMultiplier": {
          "type": "unknown",
          "description": "Constant from TransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "MultiTransactionPayment": {
        "NativeAssetId": {
          "type": "unknown",
          "description": "Constant from MultiTransactionPayment pallet",
          "returnType": "unknown"
        },
        "PolkadotNativeAssetId": {
          "type": "unknown",
          "description": "Constant from MultiTransactionPayment pallet",
          "returnType": "unknown"
        },
        "EvmAssetId": {
          "type": "unknown",
          "description": "Constant from MultiTransactionPayment pallet",
          "returnType": "unknown"
        }
      },
      "Treasury": {
        "SpendPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "Burn": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "MaxApprovals": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        },
        "PayoutPeriod": {
          "type": "unknown",
          "description": "Constant from Treasury pallet",
          "returnType": "unknown"
        }
      },
      "Utility": {
        "batched_calls_limit": {
          "type": "unknown",
          "description": "Constant from Utility pallet",
          "returnType": "unknown"
        }
      },
      "Identity": {
        "BasicDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "ByteDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "SubAccountDeposit": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSubAccounts": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxRegistrars": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "PendingUsernameExpiration": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxSuffixLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        },
        "MaxUsernameLength": {
          "type": "unknown",
          "description": "Constant from Identity pallet",
          "returnType": "unknown"
        }
      },
      "Democracy": {
        "EnactmentPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "LaunchPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "VotingPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MinimumDeposit": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "InstantAllowed": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "FastTrackVotingPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "CooloffPeriod": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxProposals": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxDeposits": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        },
        "MaxBlacklisted": {
          "type": "unknown",
          "description": "Constant from Democracy pallet",
          "returnType": "unknown"
        }
      },
      "TechnicalCommittee": {
        "MaxProposalWeight": {
          "type": "unknown",
          "description": "Constant from TechnicalCommittee pallet",
          "returnType": "unknown"
        }
      },
      "Proxy": {
        "ProxyDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "ProxyDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxProxies": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "MaxPending": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositBase": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        },
        "AnnouncementDepositFactor": {
          "type": "unknown",
          "description": "Constant from Proxy pallet",
          "returnType": "unknown"
        }
      },
      "Multisig": {
        "DepositBase": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "DepositFactor": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        },
        "MaxSignatories": {
          "type": "unknown",
          "description": "Constant from Multisig pallet",
          "returnType": "unknown"
        }
      },
      "Uniques": {
        "CollectionDeposit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "ItemDeposit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "MetadataDepositBase": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "AttributeDepositBase": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "DepositPerByte": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "KeyLimit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        },
        "ValueLimit": {
          "type": "unknown",
          "description": "Constant from Uniques pallet",
          "returnType": "unknown"
        }
      },
      "StateTrieMigration": {
        "MaxKeyLen": {
          "type": "unknown",
          "description": "Constant from StateTrieMigration pallet",
          "returnType": "unknown"
        }
      },
      "ConvictionVoting": {
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        },
        "VoteLockingPeriod": {
          "type": "unknown",
          "description": "Constant from ConvictionVoting pallet",
          "returnType": "unknown"
        }
      },
      "Referenda": {
        "SubmissionDeposit": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "MaxQueued": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "UndecidingTimeout": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "AlarmInterval": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        },
        "Tracks": {
          "type": "unknown",
          "description": "Constant from Referenda pallet",
          "returnType": "unknown"
        }
      },
      "AssetRegistry": {
        "SequentialIdStartAt": {
          "type": "unknown",
          "description": "Constant from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "StringLimit": {
          "type": "unknown",
          "description": "Constant from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "MinStringLimit": {
          "type": "unknown",
          "description": "Constant from AssetRegistry pallet",
          "returnType": "unknown"
        },
        "RegExternalWeightMultiplier": {
          "type": "unknown",
          "description": "Constant from AssetRegistry pallet",
          "returnType": "unknown"
        }
      },
      "CollatorRewards": {
        "RewardPerCollator": {
          "type": "unknown",
          "description": "Constant from CollatorRewards pallet",
          "returnType": "unknown"
        },
        "RewardCurrencyId": {
          "type": "unknown",
          "description": "Constant from CollatorRewards pallet",
          "returnType": "unknown"
        },
        "RewardsBag": {
          "type": "unknown",
          "description": "Constant from CollatorRewards pallet",
          "returnType": "unknown"
        }
      },
      "Omnipool": {
        "HdxAssetId": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "HubAssetId": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "MinWithdrawalFee": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "MinimumTradingLimit": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "MinimumPoolLiquidity": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "MaxInRatio": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "MaxOutRatio": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "NFTCollectionId": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        },
        "BurnProtocolFee": {
          "type": "unknown",
          "description": "Constant from Omnipool pallet",
          "returnType": "unknown"
        }
      },
      "Duster": {
        "Reward": {
          "type": "unknown",
          "description": "Constant from Duster pallet",
          "returnType": "unknown"
        },
        "NativeCurrencyId": {
          "type": "unknown",
          "description": "Constant from Duster pallet",
          "returnType": "unknown"
        },
        "TreasuryAccountId": {
          "type": "unknown",
          "description": "Constant from Duster pallet",
          "returnType": "unknown"
        }
      },
      "OmnipoolWarehouseLM": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "TreasuryAccountId": {
          "type": "unknown",
          "description": "Constant from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MinTotalFarmRewards": {
          "type": "unknown",
          "description": "Constant from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MinPlannedYieldingPeriods": {
          "type": "unknown",
          "description": "Constant from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MaxFarmEntriesPerDeposit": {
          "type": "unknown",
          "description": "Constant from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MaxYieldFarmsPerGlobalFarm": {
          "type": "unknown",
          "description": "Constant from OmnipoolWarehouseLM pallet",
          "returnType": "unknown"
        }
      },
      "OmnipoolLiquidityMining": {
        "NFTCollectionId": {
          "type": "unknown",
          "description": "Constant from OmnipoolLiquidityMining pallet",
          "returnType": "unknown"
        },
        "OracleSource": {
          "type": "unknown",
          "description": "Constant from OmnipoolLiquidityMining pallet",
          "returnType": "unknown"
        },
        "OraclePeriod": {
          "type": "unknown",
          "description": "Constant from OmnipoolLiquidityMining pallet",
          "returnType": "unknown"
        }
      },
      "OTC": {
        "ExistentialDepositMultiplier": {
          "type": "unknown",
          "description": "Constant from OTC pallet",
          "returnType": "unknown"
        },
        "Fee": {
          "type": "unknown",
          "description": "Constant from OTC pallet",
          "returnType": "unknown"
        },
        "FeeReceiver": {
          "type": "unknown",
          "description": "Constant from OTC pallet",
          "returnType": "unknown"
        }
      },
      "CircuitBreaker": {
        "DefaultMaxNetTradeVolumeLimitPerBlock": {
          "type": "unknown",
          "description": "Constant from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "DefaultMaxAddLiquidityLimitPerBlock": {
          "type": "unknown",
          "description": "Constant from CircuitBreaker pallet",
          "returnType": "unknown"
        },
        "DefaultMaxRemoveLiquidityLimitPerBlock": {
          "type": "unknown",
          "description": "Constant from CircuitBreaker pallet",
          "returnType": "unknown"
        }
      },
      "Router": {
        "NativeAssetId": {
          "type": "unknown",
          "description": "Constant from Router pallet",
          "returnType": "unknown"
        },
        "OraclePeriod": {
          "type": "unknown",
          "description": "Constant from Router pallet",
          "returnType": "unknown"
        }
      },
      "DynamicFees": {
        "AssetFeeParameters": {
          "type": "unknown",
          "description": "Constant from DynamicFees pallet",
          "returnType": "unknown"
        },
        "ProtocolFeeParameters": {
          "type": "unknown",
          "description": "Constant from DynamicFees pallet",
          "returnType": "unknown"
        }
      },
      "Staking": {
        "PeriodLength": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "NativeAssetId": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MinStake": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "TimePointsWeight": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "ActionPointsWeight": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "TimePointsPerPeriod": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "UnclaimablePeriods": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "CurrentStakeWeight": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "MaxVotes": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        },
        "NFTCollectionId": {
          "type": "unknown",
          "description": "Constant from Staking pallet",
          "returnType": "unknown"
        }
      },
      "Stableswap": {
        "MinPoolLiquidity": {
          "type": "unknown",
          "description": "Constant from Stableswap pallet",
          "returnType": "unknown"
        },
        "MinTradingLimit": {
          "type": "unknown",
          "description": "Constant from Stableswap pallet",
          "returnType": "unknown"
        },
        "AmplificationRange": {
          "type": "unknown",
          "description": "Constant from Stableswap pallet",
          "returnType": "unknown"
        }
      },
      "Bonds": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Bonds pallet",
          "returnType": "unknown"
        },
        "ProtocolFee": {
          "type": "unknown",
          "description": "Constant from Bonds pallet",
          "returnType": "unknown"
        },
        "FeeReceiver": {
          "type": "unknown",
          "description": "Constant from Bonds pallet",
          "returnType": "unknown"
        }
      },
      "OtcSettlements": {
        "ProfitReceiver": {
          "type": "unknown",
          "description": "Constant from OtcSettlements pallet",
          "returnType": "unknown"
        },
        "MinProfitPercentage": {
          "type": "unknown",
          "description": "Constant from OtcSettlements pallet",
          "returnType": "unknown"
        },
        "PricePrecision": {
          "type": "unknown",
          "description": "Constant from OtcSettlements pallet",
          "returnType": "unknown"
        },
        "MinTradingLimit": {
          "type": "unknown",
          "description": "Constant from OtcSettlements pallet",
          "returnType": "unknown"
        },
        "MaxIterations": {
          "type": "unknown",
          "description": "Constant from OtcSettlements pallet",
          "returnType": "unknown"
        }
      },
      "LBP": {
        "MinTradingLimit": {
          "type": "unknown",
          "description": "Constant from LBP pallet",
          "returnType": "unknown"
        },
        "MinPoolLiquidity": {
          "type": "unknown",
          "description": "Constant from LBP pallet",
          "returnType": "unknown"
        },
        "MaxInRatio": {
          "type": "unknown",
          "description": "Constant from LBP pallet",
          "returnType": "unknown"
        },
        "MaxOutRatio": {
          "type": "unknown",
          "description": "Constant from LBP pallet",
          "returnType": "unknown"
        },
        "repay_fee": {
          "type": "unknown",
          "description": "Constant from LBP pallet",
          "returnType": "unknown"
        }
      },
      "XYK": {
        "NativeAssetId": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        },
        "GetExchangeFee": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        },
        "MinTradingLimit": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        },
        "MinPoolLiquidity": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        },
        "MaxInRatio": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        },
        "MaxOutRatio": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        },
        "OracleSource": {
          "type": "unknown",
          "description": "Constant from XYK pallet",
          "returnType": "unknown"
        }
      },
      "Referrals": {
        "RewardAsset": {
          "type": "unknown",
          "description": "Constant from Referrals pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from Referrals pallet",
          "returnType": "unknown"
        },
        "RegistrationFee": {
          "type": "unknown",
          "description": "Constant from Referrals pallet",
          "returnType": "unknown"
        },
        "CodeLength": {
          "type": "unknown",
          "description": "Constant from Referrals pallet",
          "returnType": "unknown"
        },
        "MinCodeLength": {
          "type": "unknown",
          "description": "Constant from Referrals pallet",
          "returnType": "unknown"
        },
        "SeedNativeAmount": {
          "type": "unknown",
          "description": "Constant from Referrals pallet",
          "returnType": "unknown"
        }
      },
      "Liquidation": {
        "GasLimit": {
          "type": "unknown",
          "description": "Constant from Liquidation pallet",
          "returnType": "unknown"
        },
        "ProfitReceiver": {
          "type": "unknown",
          "description": "Constant from Liquidation pallet",
          "returnType": "unknown"
        },
        "HollarId": {
          "type": "unknown",
          "description": "Constant from Liquidation pallet",
          "returnType": "unknown"
        }
      },
      "HSM": {
        "HollarId": {
          "type": "unknown",
          "description": "Constant from HSM pallet",
          "returnType": "unknown"
        },
        "PalletId": {
          "type": "unknown",
          "description": "Constant from HSM pallet",
          "returnType": "unknown"
        },
        "GasLimit": {
          "type": "unknown",
          "description": "Constant from HSM pallet",
          "returnType": "unknown"
        }
      },
      "Tokens": {
        "MaxLocks": {
          "type": "unknown",
          "description": "Constant from Tokens pallet",
          "returnType": "unknown"
        },
        "MaxReserves": {
          "type": "unknown",
          "description": "Constant from Tokens pallet",
          "returnType": "unknown"
        }
      },
      "Currencies": {
        "ReserveAccount": {
          "type": "unknown",
          "description": "Constant from Currencies pallet",
          "returnType": "unknown"
        },
        "GetNativeCurrencyId": {
          "type": "unknown",
          "description": "Constant from Currencies pallet",
          "returnType": "unknown"
        }
      },
      "Vesting": {
        "MinVestedTransfer": {
          "type": "unknown",
          "description": "Constant from Vesting pallet",
          "returnType": "unknown"
        }
      },
      "EVMAccounts": {
        "FeeMultiplier": {
          "type": "unknown",
          "description": "Constant from EVMAccounts pallet",
          "returnType": "unknown"
        }
      },
      "DynamicEvmFee": {
        "WethAssetId": {
          "type": "unknown",
          "description": "Constant from DynamicEvmFee pallet",
          "returnType": "unknown"
        }
      },
      "XYKLiquidityMining": {
        "NFTCollectionId": {
          "type": "unknown",
          "description": "Constant from XYKLiquidityMining pallet",
          "returnType": "unknown"
        },
        "OracleSource": {
          "type": "unknown",
          "description": "Constant from XYKLiquidityMining pallet",
          "returnType": "unknown"
        },
        "OraclePeriod": {
          "type": "unknown",
          "description": "Constant from XYKLiquidityMining pallet",
          "returnType": "unknown"
        }
      },
      "XYKWarehouseLM": {
        "PalletId": {
          "type": "unknown",
          "description": "Constant from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "TreasuryAccountId": {
          "type": "unknown",
          "description": "Constant from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MinTotalFarmRewards": {
          "type": "unknown",
          "description": "Constant from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MinPlannedYieldingPeriods": {
          "type": "unknown",
          "description": "Constant from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MaxFarmEntriesPerDeposit": {
          "type": "unknown",
          "description": "Constant from XYKWarehouseLM pallet",
          "returnType": "unknown"
        },
        "MaxYieldFarmsPerGlobalFarm": {
          "type": "unknown",
          "description": "Constant from XYKWarehouseLM pallet",
          "returnType": "unknown"
        }
      },
      "DCA": {
        "MaxPriceDifferenceBetweenBlocks": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "MaxConfigurablePriceDifferenceBetweenBlocks": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "MaxSchedulePerBlock": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "MaxNumberOfRetriesOnError": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "MinimalPeriod": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "BumpChance": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "MinimumTradingLimit": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "NativeAssetId": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "PolkadotNativeAssetId": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "MinBudgetInNativeCurrency": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "FeeReceiver": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        },
        "NamedReserveId": {
          "type": "unknown",
          "description": "Constant from DCA pallet",
          "returnType": "unknown"
        }
      },
      "Scheduler": {
        "MaximumWeight": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        },
        "MaxScheduledPerBlock": {
          "type": "unknown",
          "description": "Constant from Scheduler pallet",
          "returnType": "unknown"
        }
      },
      "ParachainSystem": {
        "SelfParaId": {
          "type": "unknown",
          "description": "Constant from ParachainSystem pallet",
          "returnType": "unknown"
        }
      },
      "XcmpQueue": {
        "MaxInboundSuspended": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxActiveOutboundChannels": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        },
        "MaxPageSize": {
          "type": "unknown",
          "description": "Constant from XcmpQueue pallet",
          "returnType": "unknown"
        }
      },
      "MessageQueue": {
        "HeapSize": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "MaxStale": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "ServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        },
        "IdleMaxServiceWeight": {
          "type": "unknown",
          "description": "Constant from MessageQueue pallet",
          "returnType": "unknown"
        }
      },
      "XTokens": {
        "SelfLocation": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        },
        "BaseXcmWeight": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        },
        "RateLimiterId": {
          "type": "unknown",
          "description": "Constant from XTokens pallet",
          "returnType": "unknown"
        }
      },
      "Aura": {
        "SlotDuration": {
          "type": "unknown",
          "description": "Constant from Aura pallet",
          "returnType": "unknown"
        }
      },
      "EmaOracle": {
        "MaxAllowedPriceDifference": {
          "type": "unknown",
          "description": "Constant from EmaOracle pallet",
          "returnType": "unknown"
        },
        "MaxUniqueEntries": {
          "type": "unknown",
          "description": "Constant from EmaOracle pallet",
          "returnType": "unknown"
        }
      }
    },
    "runtimeCalls": {
      "Core": {
        "version": {
          "parameters": [],
          "returnType": "{ spec_version: number; spec_name: string; impl_name: string; authoring_version: number; impl_version: number; apis: [FixedSizeBinary<8>, number][]; transaction_version: number; state_version: number; }",
          "description": "Runtime call from Core API"
        },
        "execute_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from Core API"
        },
        "initialize_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "Enum<{ AllExtrinsics: undefined; OnlyInherents: undefined; }>",
          "description": "Runtime call from Core API"
        }
      },
      "Metadata": {
        "metadata": {
          "parameters": [],
          "returnType": "Binary",
          "description": "Runtime call from Metadata API"
        },
        "metadata_at_version": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from Metadata API"
        },
        "metadata_versions": {
          "parameters": [],
          "returnType": "number[]",
          "description": "Runtime call from Metadata API"
        }
      },
      "BlockBuilder": {
        "apply_extrinsic": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: TransactionValidityError; success: false; } | { value: { value: undefined; success: true; } | { value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; ... 10 more ...; RootNotAllowed: undefined; }>; success: false; }; success: true; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "finalize_block": {
          "parameters": [],
          "returnType": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }",
          "description": "Runtime call from BlockBuilder API"
        },
        "inherent_extrinsics": {
          "parameters": [
            {
              "name": "param0",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "Binary[]",
          "description": "Runtime call from BlockBuilder API"
        },
        "check_inherents": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ header: { number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }; extrinsics: Binary[]; }"
            },
            {
              "name": "param1",
              "type": "[FixedSizeBinary<8>, Binary][]"
            }
          ],
          "returnType": "{ okay: boolean; fatal_error: boolean; errors: [FixedSizeBinary<8>, Binary][]; }",
          "description": "Runtime call from BlockBuilder API"
        }
      },
      "TaggedTransactionQueue": {
        "validate_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "TransactionValidityTransactionSource"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeBinary<32>"
            }
          ],
          "returnType": "{ value: TransactionValidityError; success: false; } | { value: { priority: bigint; requires: Binary[]; provides: Binary[]; longevity: bigint; propagate: boolean; }; success: true; }",
          "description": "Runtime call from TaggedTransactionQueue API"
        }
      },
      "OffchainWorkerApi": {
        "offchain_worker": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from OffchainWorkerApi API"
        }
      },
      "SessionKeys": {
        "generate_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary | undefined"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from SessionKeys API"
        },
        "decode_session_keys": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "[Binary, FixedSizeBinary<4>][] | undefined",
          "description": "Runtime call from SessionKeys API"
        }
      },
      "AuraApi": {
        "slot_duration": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from AuraApi API"
        },
        "authorities": {
          "parameters": [],
          "returnType": "FixedSizeBinary<32>[]",
          "description": "Runtime call from AuraApi API"
        }
      },
      "CollectCollationInfo": {
        "collect_collation_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "{ upward_messages: Binary[]; horizontal_messages: { recipient: number; data: Binary; }[]; new_validation_code: Binary | undefined; head_data: Binary; processed_downward_messages: number; hrmp_watermark: number; }",
          "description": "Runtime call from CollectCollationInfo API"
        }
      },
      "CurrenciesApi": {
        "account": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "{ free: bigint; reserved: bigint; frozen: bigint; }",
          "description": "Runtime call from CurrenciesApi API"
        },
        "accounts": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "[number, { free: bigint; reserved: bigint; frozen: bigint; }][]",
          "description": "Runtime call from CurrenciesApi API"
        },
        "free_balance": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "SS58String"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from CurrenciesApi API"
        }
      },
      "AccountNonceApi": {
        "account_nonce": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "number",
          "description": "Runtime call from AccountNonceApi API"
        }
      },
      "TransactionPaymentApi": {
        "query_info": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ class: DispatchClass; weight: { ref_time: bigint; proof_size: bigint; }; partial_fee: bigint; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_fee_details": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ tip: bigint; inclusion_fee: { base_fee: bigint; len_fee: bigint; adjusted_weight_fee: bigint; } | undefined; }",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_weight_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        },
        "query_length_to_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "bigint",
          "description": "Runtime call from TransactionPaymentApi API"
        }
      },
      "EthereumRuntimeRPCApi": {
        "chain_id": {
          "parameters": [],
          "returnType": "bigint",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_basic": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "{ nonce: FixedSizeArray<4, bigint>; balance: FixedSizeArray<4, bigint>; }",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_price": {
          "parameters": [],
          "returnType": "FixedSizeArray<4, bigint>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "account_code_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "author": {
          "parameters": [],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "storage_at": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeArray<4, bigint>"
            }
          ],
          "returnType": "FixedSizeBinary<32>",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "call": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param2",
              "type": "Binary"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param8",
              "type": "boolean"
            },
            {
              "name": "param9",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: { value: Binary; logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; weight_info: { ref_time_limit: bigint | undefined; proof_size_limit: bigint | undefined; ref_time_usage: bigint | undefined; proof_size_usage: bigint | undefined; } | undefined; exit_reason: Enum<...>; u...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "create": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            },
            {
              "name": "param1",
              "type": "Binary"
            },
            {
              "name": "param2",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param3",
              "type": "FixedSizeArray<4, bigint>"
            },
            {
              "name": "param4",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param5",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param6",
              "type": "FixedSizeArray<4, bigint> | undefined"
            },
            {
              "name": "param7",
              "type": "boolean"
            },
            {
              "name": "param8",
              "type": "[FixedSizeBinary<20>, FixedSizeBinary<32>[]][] | undefined"
            }
          ],
          "returnType": "{ value: Enum<{ Other: undefined; CannotLookup: undefined; BadOrigin: undefined; Module: Enum<{ System: Enum<{ InvalidSpecName: undefined; SpecVersionNeedsToIncrease: undefined; FailedToExtractRuntimeVersion: undefined; ... 5 more ...; Unauthorized: undefined; }>; ... 70 more ...; Broadcast: Enum<...>; }>; ... 9 mor...",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_block": {
          "parameters": [],
          "returnType": "{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_receipts": {
          "parameters": [],
          "returnType": "Enum<{ Legacy: { logs: { data: Binary; address: FixedSizeBinary<20>; topics: FixedSizeBinary<32>[]; }[]; logs_bloom: FixedSizeBinary<256>; used_gas: FixedSizeArray<...>; status_code: number; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_transaction_statuses": {
          "parameters": [],
          "returnType": "{ to: FixedSizeBinary<20> | undefined; from: FixedSizeBinary<20>; transaction_hash: FixedSizeBinary<32>; transaction_index: number; contract_address: FixedSizeBinary<...> | undefined; logs: { ...; }[]; logs_bloom: FixedSizeBinary<...>; }[] | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "current_all": {
          "parameters": [],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, Enum<...>[] | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "extrinsic_filter": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>[]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "elasticity": {
          "parameters": [],
          "returnType": "number | undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "gas_limit_multiplier_support": {
          "parameters": [],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary[]"
            }
          ],
          "returnType": "[{ header: { number: FixedSizeArray<4, bigint>; nonce: FixedSizeBinary<8>; beneficiary: FixedSizeBinary<20>; parent_hash: FixedSizeBinary<32>; ... 10 more ...; mix_hash: FixedSizeBinary<...>; }; transactions: Enum<...>[]; ommers: { ...; }[]; } | undefined, { ...; }[] | undefined]",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        },
        "initialize_pending_block": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ number: number; parent_hash: FixedSizeBinary<32>; state_root: FixedSizeBinary<32>; extrinsics_root: FixedSizeBinary<32>; digest: DigestItem[]; }"
            }
          ],
          "returnType": "undefined",
          "description": "Runtime call from EthereumRuntimeRPCApi API"
        }
      },
      "ConvertTransactionRuntimeApi": {
        "convert_transaction": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ Legacy: { nonce: FixedSizeArray<4, bigint>; value: FixedSizeArray<4, bigint>; signature: { v: bigint; r: FixedSizeBinary<32>; s: FixedSizeBinary<...>; }; input: Binary; gas_limit: FixedSizeArray<...>; action: Enum<...>; gas_price: FixedSizeArray<...>; }; EIP2930: { ...; }; EIP1559: { ...; }; }>"
            }
          ],
          "returnType": "Binary",
          "description": "Runtime call from ConvertTransactionRuntimeApi API"
        }
      },
      "EvmAccountsApi": {
        "evm_address": {
          "parameters": [
            {
              "name": "param0",
              "type": "SS58String"
            }
          ],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from EvmAccountsApi API"
        },
        "bound_account_id": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "SS58String | undefined",
          "description": "Runtime call from EvmAccountsApi API"
        },
        "account_id": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "SS58String",
          "description": "Runtime call from EvmAccountsApi API"
        }
      },
      "Erc20MappingApi": {
        "asset_address": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from Erc20MappingApi API"
        },
        "address_to_asset": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "number | undefined",
          "description": "Runtime call from Erc20MappingApi API"
        }
      },
      "XcmPaymentApi": {
        "query_acceptable_payment_assets": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_xcm_weight": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_weight_to_asset_fee": {
          "parameters": [
            {
              "name": "param0",
              "type": "{ ref_time: bigint; proof_size: bigint; }"
            },
            {
              "name": "param1",
              "type": "RococoXcmVersionedAssetId"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        },
        "query_delivery_fees": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "RococoXcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; WeightNotComputable: undefined; UnhandledXcmVersion: undefined; AssetNotFound: undefined; Unroutable: undefined; }>; success: false; } | { ...; }",
          "description": "Runtime call from XcmPaymentApi API"
        }
      },
      "AuraUnincludedSegmentApi": {
        "can_build_upon": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<32>"
            },
            {
              "name": "param1",
              "type": "bigint"
            }
          ],
          "returnType": "boolean",
          "description": "Runtime call from AuraUnincludedSegmentApi API"
        }
      },
      "DryRunApi": {
        "dry_run_call": {
          "parameters": [
            {
              "name": "param0",
              "type": "Enum<{ system: DispatchRawOrigin; TechnicalCommittee: Enum<{ Members: FixedSizeArray<2, number>; Member: SS58String; _Phantom: undefined; }>; ... 4 more ...; Void: undefined; }>"
            },
            {
              "name": "param1",
              "type": "Enum<{ System: Enum<{ remark: { remark: Binary; }; set_heap_pages: { pages: bigint; }; set_code: { code: Binary; }; set_code_without_checks: { code: Binary; }; set_storage: { items: FixedSizeArray<...>[]; }; ... 5 more ...; apply_authorized_upgrade: { ...; }; }>; ... 59 more ...; Broadcast: undefined; }>"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: { value: { actual_weight: { ref_time: bigint; proof_size: bigint; } | undefined; pays_fee: Enum<...>; }; success: true; } | { ...; }; emitted_events: Enum<...>[]; local_xcm?: RococoXcm...",
          "description": "Runtime call from DryRunApi API"
        },
        "dry_run_xcm": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedLocation"
            },
            {
              "name": "param1",
              "type": "RococoXcmVersionedXcm"
            }
          ],
          "returnType": "{ value: Enum<{ Unimplemented: undefined; VersionedConversionFailed: undefined; }>; success: false; } | { value: { execution_result: XcmV4TraitsOutcome; emitted_events: Enum<...>[]; forwarded_xcms: [...][]; }; success: true; }",
          "description": "Runtime call from DryRunApi API"
        }
      },
      "LocationToAccountApi": {
        "convert_location": {
          "parameters": [
            {
              "name": "param0",
              "type": "RococoXcmVersionedLocation"
            }
          ],
          "returnType": "{ value: SS58String; success: true; } | { value: Enum<{ Unsupported: undefined; VersionedConversionFailed: undefined; }>; success: false; }",
          "description": "Runtime call from LocationToAccountApi API"
        }
      },
      "ChainlinkAdapterApi": {
        "encode_oracle_address": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number"
            },
            {
              "name": "param2",
              "type": "Enum<{ LastBlock: undefined; Short: undefined; TenMinutes: undefined; Hour: undefined; Day: undefined; Week: undefined; }>"
            },
            {
              "name": "param3",
              "type": "FixedSizeBinary<8>"
            }
          ],
          "returnType": "FixedSizeBinary<20>",
          "description": "Runtime call from ChainlinkAdapterApi API"
        },
        "decode_oracle_address": {
          "parameters": [
            {
              "name": "param0",
              "type": "FixedSizeBinary<20>"
            }
          ],
          "returnType": "[number, number, Enum<{ LastBlock: undefined; Short: undefined; TenMinutes: undefined; Hour: undefined; Day: undefined; Week: undefined; }>, FixedSizeBinary<8>] | undefined",
          "description": "Runtime call from ChainlinkAdapterApi API"
        }
      },
      "AaveTradeExecutor": {
        "pairs": {
          "parameters": [],
          "returnType": "FixedSizeArray<2, number>[]",
          "description": "Runtime call from AaveTradeExecutor API"
        },
        "liquidity_depth": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "bigint | undefined",
          "description": "Runtime call from AaveTradeExecutor API"
        },
        "pool": {
          "parameters": [
            {
              "name": "param0",
              "type": "number"
            },
            {
              "name": "param1",
              "type": "number"
            }
          ],
          "returnType": "{ reserve: number; atoken: number; liqudity_in: bigint; liqudity_out: bigint; }",
          "description": "Runtime call from AaveTradeExecutor API"
        },
        "pools": {
          "parameters": [],
          "returnType": "{ reserve: number; atoken: number; liqudity_in: bigint; liqudity_out: bigint; }[]",
          "description": "Runtime call from AaveTradeExecutor API"
        }
      },
      "GenesisBuilder": {
        "build_state": {
          "parameters": [
            {
              "name": "param0",
              "type": "Binary"
            }
          ],
          "returnType": "{ value: undefined; success: true; } | { value: string; success: false; }",
          "description": "Runtime call from GenesisBuilder API"
        },
        "get_preset": {
          "parameters": [
            {
              "name": "param0",
              "type": "string | undefined"
            }
          ],
          "returnType": "Binary | undefined",
          "description": "Runtime call from GenesisBuilder API"
        },
        "preset_names": {
          "parameters": [],
          "returnType": "string[]",
          "description": "Runtime call from GenesisBuilder API"
        }
      }
    },
    "errors": {
      "System": {
        "InvalidSpecName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpecVersionNeedsToIncrease": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToExtractRuntimeVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonDefaultComposite": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NonZeroRefCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallFiltered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MultiBlockMigrationsOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from System pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Balances": {
        "VestingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Expendability": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVestingSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyHolds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyFreezes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IssuanceDeactivated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeltaZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Balances pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MultiTransactionPayment": {
        "UnsupportedCurrency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAccepted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CoreAssetNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroPrice": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FallbackPriceNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmAccountNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitCallExecutionError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EvmPermitRunnerError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MultiTransactionPayment pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Treasury": {
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyApprovals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToConvertBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SpendExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EarlyPayout": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PayoutError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAttempted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Inconclusive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Treasury pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Utility": {
        "TooManyCalls": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Utility pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Preimage": {
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNoted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Requested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotRequested": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFew": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Preimage pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Identity": {
        "TooManySubAccounts": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotNamed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "EmptyIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeChanged": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StickyJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementGiven": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidJudgement": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTarget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyRegistrars": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSub": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementForDifferentIdentity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "JudgementPaymentFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSuffix": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotUsernameAuthority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAllocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RequiresSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UsernameTaken": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoUsername": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotExpired": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Identity pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Democracy": {
        "ValueLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCanceled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalBlacklisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSimpleMajority": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidHash": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVetoed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReferendumInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoneWaiting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VotesExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InstantNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongUpperBound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "VotingPeriodLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Democracy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TechnicalCommittee": {
        "NotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateProposal": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProposalMissing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongIndex": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicateVote": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooEarly": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyProposals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongProposalLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PrimeAccountNotMember": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TechnicalCommittee pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Proxy": {
        "TooMany": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unproxyable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Duplicate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unannounced": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSelfProxy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Proxy pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Multisig": {
        "MinimumThreshold": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoApprovalsNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManySignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignatoriesOutOfOrder": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SenderInSignatories": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnexpectedTimepoint": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxWeightTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyStored": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Multisig pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Uniques": {
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownCollection": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Frozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WrongDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDelegate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unapproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unaccepted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Locked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyAlreadySet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSupplyTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownItem": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotForSale": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BidTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Uniques pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "StateTrieMigration": {
        "MaxSignedLimits": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "KeyTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotEnoughFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SignedMigrationNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadChildRoot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from StateTrieMigration pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ConvictionVoting": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotVoter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermissionYet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyVoting": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientFunds": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDelegating": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Nonsense": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ClassNeeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadClass": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ConvictionVoting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referenda": {
        "NotOngoing": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Full": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueueEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadReferendum": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToDo": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoTrack": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unfinished": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPermission": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadStatus": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageNotExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreimageStoredWithDifferentLength": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referenda pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Whitelist": {
        "UnavailablePreImage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UndecodableCall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCallWeightWitness": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallIsNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CallAlreadyWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Whitelist pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "AssetRegistry": {
        "NoIdAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooShort": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSymbol": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSharedAssetLen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotUpdateLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInReservedRange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocationAlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ForbiddenSufficiencyChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyBanned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotBanned": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from AssetRegistry pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Claims": {
        "InvalidEthereumSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoClaimOrAlreadyClaimed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Claims pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Omnipool": {
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyAdded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidInitialAssetPrice": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BuyLimitNotReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SellLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PositionNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientShares": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetWeightCapExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientTradingAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SameAssetTradeNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HubAssetUpdateError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSharesAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidHubAssetTradableState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetRefundNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxOutRatioExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxInRatioExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceDifferenceTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOraclePrice": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidWithdrawalFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeOverdraft": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SharesRemaining": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFrozen": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmountOut": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDepositNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlippageLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProtocolFeeNotConsumed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Omnipool pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "TransactionPause": {
        "CannotPause": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TransactionPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCharacter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TransactionPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NameTooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from TransactionPause pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Duster": {
        "AccountBlacklisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Duster pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotBlacklisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Duster pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Duster pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceSufficient": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Duster pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DustAccountNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Duster pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ReserveAccountNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Duster pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OmnipoolWarehouseLM": {
        "GlobalFarmNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "YieldFarmNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoubleClaimInPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityMiningCanceled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityMiningIsActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityMiningIsNotStopped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMultiplier": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "YieldFarmAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidInitialRewardPercentage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GlobalFarmIsNotEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingIncentivizedAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientRewardCurrencyBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBlocksPerPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidYieldPerPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTotalRewards": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPlannedYieldingPeriods": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxEntriesPerDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoubleLock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "YieldFarmEntryNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GlobalFarmIsFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMinDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPriceAdjustment": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorGetAccountId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectValuedShares": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardCurrencyNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncentivizedAssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmmPoolIdMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InconsistentState": {
          "type": "PlainDescriptor<Enum<{ YieldFarmNotFound: undefined; GlobalFarmNotFound: undefined; LiquidityIsNotActive: undefined; GlobalFarmIsNotActive: undefined; DepositNotFound: undefined; InvalidPeriod: undefined; ... 10 more ...; NoExistentialDepositForAsset: undefined; }>>",
          "description": "Error from OmnipoolWarehouseLM pallet",
          "returnType": "PlainDescriptor<Enum<{ YieldFarmNotFound: undefined; GlobalFarmNotFound: undefined; LiquidityIsNotActive: undefined; GlobalFarmIsNotActive: undefined; DepositNotFound: undefined; InvalidPeriod: undefined; ... 10 more ...; NoExistentialDepositForAsset: undefined; }>>"
        }
      },
      "OmnipoolLiquidityMining": {
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroClaimedRewards": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InconsistentState": {
          "type": "PlainDescriptor<Enum<{ MissingLpPosition: undefined; DepositDataNotFound: undefined; }>>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<Enum<{ MissingLpPosition: undefined; DepositDataNotFound: undefined; }>>"
        },
        "OracleNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceAdjustmentNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoFarmEntriesSpecified": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OmnipoolLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OTC": {
        "AssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrderNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrderIdOutOfBound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrderNotPartiallyFillable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OrderAmountTooSmall": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MathError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientReservedAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OTC pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CircuitBreaker": {
        "InvalidLimitValue": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityLimitNotStoredForAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenOutflowLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenInfluxLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxLiquidityLimitPerBlockReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetInLockdown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotInLockdown": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CircuitBreaker pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Router": {
        "TradingLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxTradesExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RouteCalculationFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRoute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RouteUpdateIsNotSuccessful": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RouteHasNoOracle": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRouteExecution": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Router pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "DynamicFees": {
        "InvalidFeeParameters": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DynamicFees pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Staking": {
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientStake": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PositionNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVotesReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInitialized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Arithmetic": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingPotBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PositionAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistingProcessedVotes": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InconsistentState": {
          "type": "PlainDescriptor<Enum<{ PositionNotFound: undefined; NegativePendingRewards: undefined; NegativeUnpaidRewards: undefined; TooManyPositions: undefined; Arithmetic: undefined; }>>",
          "description": "Error from Staking pallet",
          "returnType": "PlainDescriptor<Enum<{ PositionNotFound: undefined; NegativePendingRewards: undefined; NegativeUnpaidRewards: undefined; TooManyPositions: undefined; Arithmetic: undefined; }>>"
        }
      },
      "Stableswap": {
        "IncorrectAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxAssetsExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotInPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ShareAssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ShareAssetInPoolAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientShares": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidityRemaining": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientTradingAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BuyLimitNotReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SellLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidInitialLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAmplification": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientShareBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PastBlock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SameAmplification": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlippageLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnknownDecimals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectInitialPegs": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingTargetPegOracle": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectAssetDecimals": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPegSource": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Stableswap pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Bonds": {
        "NotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotMature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMaturity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DisallowedAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBondName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToParseName": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Bonds pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OtcSettlements": {
        "OrderNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotPartiallyFillable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRoute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceInconsistency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TradeAmountTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TradeAmountTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OtcSettlements pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "LBP": {
        "CannotCreatePoolWithSameAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SaleStarted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SaleNotEnded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SaleIsNotRunning": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxSaleDurationExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotAddZeroLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientAssetBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBlockRange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WeightCalculationError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxInRatioExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxOutRatioExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TradingLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingToUpdate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientTradingAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeCollectorWithAssetAlreadyUsed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from LBP pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XYK": {
        "CannotCreatePoolWithSameAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientTradingAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroInitialPrice": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CreatePoolAssetAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMintedLiquidity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidLiquidityAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAmountExceededLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAmountNotReachedLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientAssetBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientPoolAssetBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientNativeCurrencyBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenPoolNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TokenPoolAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AddAssetAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RemoveAssetAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SellAssetAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BuyAssetAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeAmountInvalid": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotApplyDiscount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxOutRatioExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxInRatioExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Overflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCreatePool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlippageLimit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYK pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Referrals": {
        "TooLong": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooShort": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCharacter": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidCode": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyLinked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LinkNotAllowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectRewardCalculation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectRewardPercentage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConversionMinTradingAmountNotReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ConversionZeroAmountReceived": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Referrals pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Liquidation": {
        "AssetConversionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Liquidation pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidationCallFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Liquidation pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidRoute": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Liquidation pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotProfitable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Liquidation pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FlashMinterNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Liquidation pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidLiquidationData": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Liquidation pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "HSM": {
        "AssetNotApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetAlreadyApproved": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PoolAlreadyHasCollateral": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetPair": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxBuyPriceExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxBuyBackExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxHoldingExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlippageLimitExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidEVMInteraction": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DecimalRetrievalFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoArbitrageOpportunity": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OffchainLockError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPoolState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CollateralNotEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotInPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HollarNotInPool": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientCollateralBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HollarContractAddressNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxNumberOfCollateralsReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FlashMinterNotSet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidArbitrageData": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from HSM pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Tokens": {
        "BalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountIntoBalanceFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityRestrictions": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxLocksExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "KeepAlive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExistentialDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DeadAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Tokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Currencies": {
        "AmountIntoBalanceFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DepositFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupported": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Currencies pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Vesting": {
        "ZeroVestingPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroVestingPeriodCount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBalanceToLock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyVestingSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmountLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxVestingSchedulesExceeded": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Vesting pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EVM": {
        "BalanceLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PaymentOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "WithdrawFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasPriceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidNonce": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GasLimitTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidChainId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Reentrancy": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TransactionMustComeFromEOA": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Undefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVM pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Ethereum": {
        "InvalidSignature": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PreLogExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Ethereum pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EVMAccounts": {
        "TruncatedAccountAlreadyUsed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AddressAlreadyBound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BoundAddressCannotBeUsed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AddressNotWhitelisted": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EVMAccounts pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XYKLiquidityMining": {
        "CantFindDepositOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientXykSharesBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XykPoolDoesntExist": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotDepositOwner": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CantGetXykAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DepositDataNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroClaimedRewards": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotInAssetPair": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetPair": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailToGetPotId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoFarmsSpecified": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FailedToValueShares": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKLiquidityMining pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XYKWarehouseLM": {
        "GlobalFarmNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "YieldFarmNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoubleClaimInPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityMiningCanceled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityMiningIsActive": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LiquidityMiningIsNotStopped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMultiplier": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "YieldFarmAlreadyExists": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidInitialRewardPercentage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GlobalFarmIsNotEmpty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MissingIncentivizedAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientRewardCurrencyBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidBlocksPerPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidYieldPerPeriod": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidTotalRewards": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPlannedYieldingPeriods": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxEntriesPerDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DoubleLock": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "YieldFarmEntryNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "GlobalFarmIsFull": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidMinDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidPriceAdjustment": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ErrorGetAccountId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncorrectValuedShares": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RewardCurrencyNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IncentivizedAssetNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AmmPoolIdMismatch": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InconsistentState": {
          "type": "PlainDescriptor<Enum<{ YieldFarmNotFound: undefined; GlobalFarmNotFound: undefined; LiquidityIsNotActive: undefined; GlobalFarmIsNotActive: undefined; DepositNotFound: undefined; InvalidPeriod: undefined; ... 10 more ...; NoExistentialDepositForAsset: undefined; }>>",
          "description": "Error from XYKWarehouseLM pallet",
          "returnType": "PlainDescriptor<Enum<{ YieldFarmNotFound: undefined; GlobalFarmNotFound: undefined; LiquidityIsNotActive: undefined; GlobalFarmIsNotActive: undefined; DepositNotFound: undefined; InvalidPeriod: undefined; ... 10 more ...; NoExistentialDepositForAsset: undefined; }>>"
        }
      },
      "DCA": {
        "ScheduleNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinTradeAmountNotReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Forbidden": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BlockNumberIsNotInFuture": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceUnstable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Bumped": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CalculatingPriceError": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TotalAmountIsSmallerThanMinBudget": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BudgetTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoFreeBlockFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ManuallyTerminated": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MaxRetryReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TradeLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SlippageLimitReached": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoParentHashFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidState": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PeriodTooShort": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "StabilityThresholdTooHigh": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HasActiveSchedules": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoReservesLocked": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from DCA pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Scheduler": {
        "FailedToSchedule": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetBlockNumberInPast": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RescheduleNoChange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Named": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Scheduler pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "ParachainSystem": {
        "OverlappingUpgrades": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ProhibitedByPolkadot": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidationDataNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "HostConfigurationNotAvailable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotScheduled": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NothingAuthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Unauthorized": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from ParachainSystem pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "PolkadotXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Filtered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Empty": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssets": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidOrigin": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoSubscription": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySubscribed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotCheckOutTeleport": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LowBalance": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyLocks": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AccountNotSovereign": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeesNotMet": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LockNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InUse": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnknownReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAssetUnsupportedReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyReserves": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "LocalExecutionIncomplete": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from PolkadotXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XcmpQueue": {
        "BadQueueConfig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadySuspended": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyResumed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyActiveOutboundChannels": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooBig": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XcmpQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "MessageQueue": {
        "NotReapable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoPage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyProcessed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "Queued": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientWeight": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TemporarilyUnprocessable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "QueuePaused": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RecursiveDisallowed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from MessageQueue pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "OrmlXcm": {
        "Unreachable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OrmlXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "SendFailure": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OrmlXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from OrmlXcm pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "XTokens": {
        "AssetHasNoReserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransfer": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidDest": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCrossChainTransferableCurrency": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnweighableMessage": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "XcmExecutionFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "CannotReanchor": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAncestry": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DestinationNotInvertible": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BadVersion": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DistinctReserveForAssetAndFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroFee": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ZeroAmount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyAssetsBeingSent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetIndexNonExistent": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "FeeNotEnough": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotSupportedLocation": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "MinXcmFeeNotDefined": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RateLimited": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from XTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "UnknownTokens": {
        "BalanceTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from UnknownTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "BalanceOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from UnknownTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UnhandledAsset": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from UnknownTokens pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "CollatorSelection": {
        "TooManyCandidates": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooFewEligibleCollators": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TooManyInvulnerables": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AlreadyInvulnerable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NotInvulnerable": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ValidatorNotRegistered": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsertToCandidateListFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "RemoveFromCandidateListFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DepositTooLow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "UpdateCandidateListFailed": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InsufficientBond": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "TargetIsNotCandidate": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "IdenticalDeposit": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "InvalidUnreserve": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from CollatorSelection pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Session": {
        "InvalidProof": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAssociatedValidatorId": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "DuplicatedKey": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoKeys": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "NoAccount": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Session pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "EmaOracle": {
        "TooManyUniqueEntries": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EmaOracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OnTradeValueZero": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EmaOracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "OracleNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EmaOracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "AssetNotFound": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EmaOracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "PriceOutsideAllowedRange": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from EmaOracle pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      },
      "Broadcast": {
        "ExecutionCallStackOverflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Broadcast pallet",
          "returnType": "PlainDescriptor<undefined>"
        },
        "ExecutionCallStackUnderflow": {
          "type": "PlainDescriptor<undefined>",
          "description": "Error from Broadcast pallet",
          "returnType": "PlainDescriptor<undefined>"
        }
      }
    }
  }
};

// Utility functions for each category

/**
 * Storage utilities
 */
export function getStorageInfo(chainKey: string, pallet: string, storage: string): StorageMetadata | undefined {
  return papiMetadata[chainKey]?.storage?.[pallet]?.[storage];
}

export function getStorageParameterTypes(chainKey: string, pallet: string, storage: string): string[] {
  return getStorageInfo(chainKey, pallet, storage)?.required || [];
}

/**
 * Call/Transaction utilities
 */
export function getCallInfo(chainKey: string, pallet: string, call: string): CallMetadata | undefined {
  return papiMetadata[chainKey]?.calls?.[pallet]?.[call];
}

export function getCallParameters(chainKey: string, pallet: string, call: string): Array<{name: string; type: string; optional?: boolean}> {
  return getCallInfo(chainKey, pallet, call)?.parameters || [];
}

/**
 * Event utilities
 */
export function getEventInfo(chainKey: string, pallet: string, event: string): EventMetadata | undefined {
  return papiMetadata[chainKey]?.events?.[pallet]?.[event];
}

export function getEventFields(chainKey: string, pallet: string, event: string): Array<{name: string; type: string}> {
  return getEventInfo(chainKey, pallet, event)?.fields || [];
}

/**
 * Constant utilities
 */
export function getConstantInfo(chainKey: string, pallet: string, constant: string): ConstantMetadata | undefined {
  return papiMetadata[chainKey]?.constants?.[pallet]?.[constant];
}

export function getConstantType(chainKey: string, pallet: string, constant: string): string {
  return getConstantInfo(chainKey, pallet, constant)?.type || 'unknown';
}

/**
 * Runtime call utilities
 */
export function getRuntimeCallInfo(chainKey: string, api: string, method: string): RuntimeCallMetadata | undefined {
  return papiMetadata[chainKey]?.runtimeCalls?.[api]?.[method];
}

export function getRuntimeCallParameters(chainKey: string, api: string, method: string): Array<{name: string; type: string}> {
  return getRuntimeCallInfo(chainKey, api, method)?.parameters || [];
}

/**
 * Error utilities
 */
export function getErrorInfo(chainKey: string, pallet: string, error: string): ErrorMetadata | undefined {
  return papiMetadata[chainKey]?.errors?.[pallet]?.[error];
}

/**
 * General utilities
 */
export function getSupportedChains(): string[] {
  return Object.keys(papiMetadata);
}

export function getSupportedPallets(chainKey: string): string[] {
  const chain = papiMetadata[chainKey];
  if (!chain) return [];

  const palletSets = [
    Object.keys(chain.storage),
    Object.keys(chain.calls),
    Object.keys(chain.events),
    Object.keys(chain.constants),
    Object.keys(chain.errors),
  ];

  const allPallets = new Set(palletSets.flat());
  return Array.from(allPallets);
}

export function getSupportedRuntimeApis(chainKey: string): string[] {
  return Object.keys(papiMetadata[chainKey]?.runtimeCalls || {});
}

export function hasChain(chainKey: string): boolean {
  return !!papiMetadata[chainKey];
}

export function hasCategory(chainKey: string, category: keyof CategoryMetadata): boolean {
  const chain = papiMetadata[chainKey];
  return !!(chain && chain[category] && Object.keys(chain[category]).length > 0);
}

export function hasPallet(chainKey: string, pallet: string): boolean {
  const chain = papiMetadata[chainKey];
  if (!chain) return false;

  return !!(chain.storage[pallet] ||
           chain.calls[pallet] ||
           chain.events[pallet] ||
           chain.constants[pallet] ||
           chain.errors[pallet]);
}

export function hasStorage(chainKey: string, pallet: string, storage: string): boolean {
  return !!getStorageInfo(chainKey, pallet, storage);
}

export function hasCall(chainKey: string, pallet: string, call: string): boolean {
  return !!getCallInfo(chainKey, pallet, call);
}

export function hasEvent(chainKey: string, pallet: string, event: string): boolean {
  return !!getEventInfo(chainKey, pallet, event);
}

export function hasConstant(chainKey: string, pallet: string, constant: string): boolean {
  return !!getConstantInfo(chainKey, pallet, constant);
}

export function hasRuntimeCall(chainKey: string, api: string, method: string): boolean {
  return !!getRuntimeCallInfo(chainKey, api, method);
}

export function hasError(chainKey: string, pallet: string, error: string): boolean {
  return !!getErrorInfo(chainKey, pallet, error);
}
